{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@emmetio/scanner/scanner.es.js","webpack:///./node_modules/@emmetio/stream-reader-utils/dist/stream-reader-utils.es.js","webpack:///external \"vscode\"","webpack:///./src/util.ts","webpack:///./src/parseDocument.ts","webpack:///./node_modules/@emmetio/stream-reader/dist/stream-reader.es.js","webpack:///external \"path\"","webpack:///external \"fs\"","webpack:///./node_modules/@emmetio/css-parser/dist/css-parser.es.js","webpack:///./node_modules/vscode-nls/lib/node/main.js","webpack:///external \"util\"","webpack:///./src/abbreviationActions.ts","webpack:///./node_modules/vscode-nls/lib/common/ral.js","webpack:///./node_modules/vscode-nls/lib/common/common.js","webpack:///./node_modules/@emmetio/html-matcher/dist/html-matcher.es.js","webpack:///./node_modules/image-size/lib/types.js","webpack:///./node_modules/image-size/lib/types sync ^\\.\\/.*$","webpack:///./node_modules/image-size/lib/types/bmp.js","webpack:///./node_modules/image-size/lib/types/dds.js","webpack:///./node_modules/image-size/lib/types/gif.js","webpack:///./node_modules/image-size/lib/types/jpg.js","webpack:///./node_modules/image-size/lib/types/png.js","webpack:///./node_modules/image-size/lib/types/psd.js","webpack:///./node_modules/image-size/lib/types/svg.js","webpack:///./node_modules/image-size/lib/types/tiff.js","webpack:///./node_modules/image-size/lib/types/webp.js","webpack:///./src/node/emmetNodeMain.ts","webpack:///external \"os\"","webpack:///./src/emmetCommon.ts","webpack:///./src/defaultCompletionProvider.ts","webpack:///./src/bufferStream.ts","webpack:///./node_modules/vscode-languageserver-textdocument/lib/esm/main.js","webpack:///./src/removeTag.ts","webpack:///./src/updateTag.ts","webpack:///./src/matchTag.ts","webpack:///./src/balance.ts","webpack:///./src/splitJoinTag.ts","webpack:///./src/mergeLines.ts","webpack:///./src/toggleComment.ts","webpack:///./src/editPoint.ts","webpack:///./src/selectItem.ts","webpack:///./src/selectItemHTML.ts","webpack:///./src/selectItemStylesheet.ts","webpack:///./src/evaluateMathExpression.ts","webpack:///./node_modules/@emmetio/math-expression/dist/math.es.js","webpack:///./src/incrementDecrement.ts","webpack:///./src/reflectCssValue.ts","webpack:///./src/updateImageSize.ts","webpack:///./src/imageSizeHelper.ts","webpack:///external \"http\"","webpack:///external \"https\"","webpack:///external \"url\"","webpack:///./node_modules/image-size/lib/index.js","webpack:///./node_modules/image-size/lib/detector.js","webpack:///./node_modules/image-size/lib/readUInt.js","webpack:///./src/locateFile.ts","webpack:///./node_modules/vscode-languageserver-types/lib/esm/main.js","webpack:///./node_modules/jsonc-parser/lib/esm/impl/parser.js","webpack:///./node_modules/jsonc-parser/lib/esm/impl/scanner.js","webpack:///./node_modules/jsonc-parser/lib/esm/main.js","webpack:///./node_modules/vscode-emmet-helper/lib/esm/data.js","webpack:///./node_modules/vscode-uri/lib/esm/index.js","webpack:///./node_modules/vscode-emmet-helper/lib/esm/fileService.js","webpack:///./node_modules/@emmetio/abbreviation/dist/abbreviation.es.js","webpack:///./node_modules/@emmetio/css-abbreviation/dist/css-abbreviation.es.js","webpack:///./node_modules/emmet/dist/emmet.es.js","webpack:///./node_modules/vscode-emmet-helper/lib/esm/configCompat.js","webpack:///./node_modules/vscode-emmet-helper/lib/esm/emmetHelper.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","isNumber","code","isAlpha","from","to","isAlphaNumericWord","isAlphaWord","isWhiteSpace","isSpace","isQuote","Scanner","str","start","end","length","this","string","pos","charCodeAt","match","ch","peek","ok","next","eof","eat","substring","slice","message","ScannerError","Error","super","defaultOptions","escape","throws","eatQuoted","stream","options","assign","quote","error","isAlphaNumeric","defaultOptions$1","eatPair","open","close","stack","String","fromCharCode","require","_emmetHelper","_homeDir","_currentExtensionsPath","undefined","updateEmmetExtensionsPath","forceRefresh","extensionsPath","vscode","workspace","getConfiguration","workspaceFolders","rootPath","uri","fileSystem","fs","updateExtensionsPath","then","err","window","showErrorMessage","isStyleSheet","syntax","indexOf","homeDir","LANGUAGE_MODES","allowStylesheet","editor","activeTextEditor","document","languageId","showInformationMessage","finalMappedModes","includeLanguagesConfig","includeLanguages","keys","forEach","language","excludedLanguages","test","syntaxes","markup","stylesheet","includes","getFlatNode","root","offset","includeNodeBoundary","getFlatNodeChildren","children","getFlatNodeChild","child","nodeStart","nodeEnd","htmlChild","foundChild","sameNodes","node1","node2","getSyntaxes","position","isCSS","positionOffset","offsetAt","startOffset","endOffset","getText","limitCharacter","limitOffset","DocumentStreamReader","consumeLineCommentBackwards","posLineNumber","positionAt","line","currentLine","startLineComment","lineAt","text","Position","consumeBlockCommentBackwards","backUp","lastIndexOf","findOpeningCommentBeforePosition","consumeCommentForwards","findClosingCommentAfterPosition","openBracesToFind","exit","sof","foundSelector","buffer","repeat","e","allowedMimeTypesInScriptTag","getHtmlFlatNode","documentText","currentNode","attributes","some","x","toString","beforePadding","endToUse","scriptBodyText","scriptBodyNode","parent","push","startPos","endPos","Selection","Range","getDeepestFlatNode","node","find","type","propertyValue","newSelectionStart","newSelectionEnd","foundSpace","foundStart","foundEnd","siblings","nextSibling","emmetConfig","syntaxProfiles","preferences","selfClosingStyle","showExpandedAbbreviation","showAbbreviationSuggestions","variables","excludeLanguages","showSuggestionsAsSnippets","iterateCSSToken","token","fn","il","size","item","rule","rootNode","getRootNode","htmlNode","innerNode","currentHtmlNode","index","findIndex","styleAttribute","obj","doc","version","path","pathAfterSlashSplit","split","pop","pathAfterBackslashSplit","_parseCache","Map","useCache","result","documentVersion","set","filename","delete","constructor","originalMessage","Node","ix","remove","splice","Stylesheet","comments","firstChild","trimFormatting","tokens","len","isFormattingToken","shift","last","trimTokens","eatString","consume","consumeWhile","eatWhile","arr","valueOf","Token","_props","_value","_items","Array","isArray","add","limit","clone","items","types","separator","args","tokenConsumer","usePropTerminator","isSemicolonSeparator","argsToken","isSeparator","isCommaSeparator","arg","createArgument","createEmptyArgument","createArgumentList","ident","eatIdent","isIdentStart","isIdent","prefixed","tokenType","prefix","body","allowEmptyBody","bodyToken","atKeyword","interpolation","defaultTokenConsumer","container","eatInterpolation","eatString$1","asToken","valueStart","isNewline","inner","comment","eatSingleLineComment","singleLineComment","eatMultiLineComment","multiLineComment","eatComment","whitespace","eatWhitespace","eatAttribuite","skip","op","isOperator","operator","backtick","eatBacktick","types$1","combinator","hashValue","isHashValue","eatHashValue","number","isOperator$1","decimalEnd","eatNumericPart","num","unit","eatPercent","eatUnitPart","operator$1","isEquality","isOperator$2","eatOperator","eatUnquoted","isUnquoted","isNaN","isNonPrintable","url","unquoted","eatUrl","variable","variableName","isVariableName","eatVariableName","consumeToken","_token","any","_args","unknown","formatting","selector","className","id","pseudo","hash","keyword","important","parseSelector","source","parseList","parsePropertyName","parsePropertyValue","parseMediaExpression","fragments","flush","clean","createRule","contentStart","contentEnd","Rule","selectorToken","contentStartToken","contentEndToken","_parsedSelector","nameToken","createAtRule","expression","AtRule","expressionToken","_parsedExpression","createProperty","terminator","Property","valueToken","_parsedName","_parsedValue","separatorToken","terminatorToken","lexer","consumer","eatBraces","addComment","accum","ctx","config","loadMessageBundle","ral_1","common_1","common_2","MessageFormat","BundleFormat","resolvedBundles","isString","readJsonFileSync","JSON","parse","readFileSync","createScopedLocalizeFunction","messages","_i","arguments","console","format","warn","cacheBundle","bundle","loadNlsBundleOrCreateFromI18n","header","bundlePath","file","join","cacheRoot","useMemoryOnly","writeBundle","encoding","flag","Date","utimes","SyntaxError","log","unlink","metaDataPath","languagePackLocation","translationsConfig","languagePack","contents","metaData","module_2","entry","translations","outDir","resultMessages","messageKey","translatedMessage","createNLSBundle","writeFileSync","stringify","loadDefaultNlsBundle","folder","module_1","createDefaultNlsBundle","loadNlsBundle","languagePackSupport","languagePackId","translationsConfigFile","candidate","existsSync","findInTheBoxBundle","localize","ext","extname","substr","messageFormat","both","headerFile","dirname","tryFindMetaDataHeaderFile","nlsBundle","module_3","replace","json","resolvedLanguage","cacheLanguageResolution","isPseudo","locale","resolveLanguage","isDefined","opts","toLowerCase","bundleFormat","standalone","setPseudo","process","env","VSCODE_NLS_CONFIG","vscodeOptions_1","availableLanguages","isBoolean","_languagePackSupport","_cacheRoot","_languagePackId","_translationsConfigFile","_corruptedFile","exists","writeFile","_a","initializeSettings","default","install","freeze","_ral","RAL","ral","LocalizeInfo","rest","replacement","is","_key","getIndex","removeChild","eatToken","current","opt","eatPaired","eatAttributeName","isAttributeName","eatAttributeValue","valueEnd","isTerminator","tag","model","isTagName","eatTagName","attr","boolean","eatAttributes","selfClosing","eatArray","codes","eatSection","allowUnclosed","toCharCodes","map","open$1","close$1","xml","special","empty","cdata","consumeSpecial","content","Set","reduce","isEmpty","has","tag$$1","addChild","webpackContext","req","webpackContextResolve","resolve","readUInt32LE","Math","abs","readInt32LE","gifRegexp","signature","readUInt16LE","extractSize","readUInt16BE","validateBuffer","TypeError","chunkName","readUInt32BE","svgReg","extractorRegExps","parseViewbox","viewbox","bounds","parseInt","attrs","width","height","parseAttributes","calculateByDimensions","ratio","floor","calculateByViewbox","readUInt","readValue","isBigEndian","low","nextTag","hex4","filepath","determineEndianness","tags","extractTags","ifdOffset","bufferSize","fileSize","statSync","endBuffer","Buffer","descriptor","openSync","readSync","readIFD","riffHeader","webpHeader","vp8Header","chunkHeader","extendedHeader","readUIntLE","calculateExtended","readInt16LE","calculateLossy","calculateLossless","context","subscriptions","commands","registerCommand","uis","updateImageSize","setHomeDir","Uri","homedir","activateEmmetExtension","registerCompletionProviders","wrapWithAbbreviation","wrapIndividualLinesWithAbbreviation","expandEmmetAbbreviation","removeTag","inputTag","updateTag","showInputBox","prompt","tagName","update","matchTag","balanceOut","balanceIn","splitJoinTag","mergeLines","toggleComment","fetchEditPoint","fetchSelectItem","evaluateMathExpression","incrementDecrement","reflectCssValue","executeCommand","onDidChangeConfiguration","affectsConfiguration","onDidSaveTextDocument","basefileName","getPathBaseName","fileName","startsWith","endsWith","onDidOpenTextDocument","emmetMode","getEmmetMode","addFileToParseCache","onDidCloseTextDocument","removeFileFromParseCache","languageMappingForCompletionProviders","completionProvidersMapping","completionProvider","DefaultCompletionItemProvider","includedLanguages","getMappingForIncludedLanguages","mapping","dispose","provider","languages","registerCompletionItemProvider","scheme","_","completionResult","provideCompletionItemsInternal","completionList","lastCompletionType","expandedText","documentation","mappedLanguages","isSyntaxMapped","helper","getEmmetHelper","validateLocation","lsDoc","toLSTextDocument","validatePosition","triggerKind","CompletionTriggerKind","TriggerForIncompleteCompletions","emmetRootNode","foundNode","typeNode","typeAttrValue","getSyntaxFromArgs","styleNode","expandOptions","lookAhead","extractAbbreviationResults","extractAbbreviation","isAbbreviationValid","abbreviation","lineCount","parsePartialStylesheet","isValidLocationForEmmetAbbreviation","lsRange","abbreviationRange","character","noiseCheckPromise","Promise","symbols","noise","doComplete","getEmmetConfiguration","label","newItems","newItem","CompletionItem","detail","insertText","SnippetString","textEdit","newText","oldrange","range","filterText","sortText","kind","CompletionItemKind","Snippet","CompletionList","_sof","_eof","NaN","TextDocument","FullTextDocument","_uri","_languageId","_version","_content","_lineOffsets","configurable","changes","changes_1","change","isIncremental","getWellformedRange","startLine","max","endLine","lineOffsets","addedLineOffsets","computeLineOffsets","apply","concat","diff","isFull","getLineOffsets","min","high","mid","lineOffset","nextLineOffset","event","rangeLength","isAtLineStart","textOffset","getWellformedEdit","applyEdits","edits","lastModifiedOffset","spans","sortedEdits_1","mergeSort","data","compare","left","right","leftIdx","rightIdx","ret","a","b","validate","finalRangesToRemove","selections","reverse","prev","selection","nodeToUpdate","openTagRange","closeTagRange","offsetRangeToVsRange","rangesToRemove","indentAmountToRemove","openRange","closeRange","startLineIndent","firstNonWhitespaceCharacterIndex","endLineIndent","contentIndent","lineIndent","indentAmount","calculateIndentAmountToRemove","getRangesToRemove","edit","editBuilder","rangesToUpdate","ranges","translate","endTagStart","getRangesFromNode","getRangesToUpdate","updatedSelections","updatedSelection","finalOffset","offsetRangeToSelection","getUpdatedSelections","revealRange","balanceOutStack","lastBalancedSelections","balance","out","rangeFn","getRangeToBalanceOut","getRangeToBalanceIn","newSelections","areSameSelections","nodeToBalance","innerSelection","outerSelection","contains","isEqual","selectionStart","selectionEnd","entireNodeSelected","startInOpenTag","startInCloseTag","rangeToReplace","textToReplaceWith","TextEdit","getRangesToReplace","startNodeToUpdate","endNodeToUpdate","startChar","trim","startCommentStylesheet","endCommentStylesheet","startCommentHTML","endCommentHTML","toggleCommentStylesheet","isReversed","active","anchor","selectionStartOffset","selectionEndOffset","startNode","endNode","newStartNode","adjustStartNodeCss","newEndNode","previousSibling","adjustEndNodeCss","rangesToUnComment","commentRange","intersection","allEdits","cssRootNode","allNodes","getNodesInBetween","getRangesToUnCommentHTML","unCommentTextEdits","childNode","toggleCommentHTML","sort","arr1","arr2","lastEditPosition","isAfterOrEqual","findEditPoint","lineNum","direction","lineContent","isEmptyOrWhitespace","emptyAttrIndex","emptyTagIndex","winner","nextEditPoint","prevEditPoint","nextItemStylesheet","prevItemStylesheet","nextItemHTML","prevItemHTML","getSelectionFromNode","nextNode","attrSelection","selectionEndCharacter","attrValueStartCharacter","newSelectionStartOffset","newSelectionEndOffset","findNextWord","getNextAttribute","prevNode","oldOption","selectionStartCharacter","findPrevWord","getPrevAttribute","nodeToSelect","getSelectionFromProperty","selectFullValue","propertyNode","selectionStartChar","tokenStartChar","selectionEndChar","tokenStart","startPosition","endPosition","singlePropertyValue","startpos","endpos","selectionText","lineToSelectionEnd","extractedIndices","extract","nullary","expr","scanner","priority","expected","consumeNumber","isSign","isNegativeSign","op1","op2","operators","operands","nOperators","orderTokens","parseFloat","isPositiveSign","cur","braces","number$1","dot","ops1","ops2","nStack","n1","n2","f","reNumber","numString","delta","decimals","output","toFixed","minus","locate","hadDot","hadMinus","isValidNumber","vendorPrefixes","getCssPropertyFromDocument","currentPrefix","propertyName","builder","vendorProperty","getCssPropertyFromRule","updateCSSNode","updateImageSizeCSS","fetchNode","src","getImageSrcCSS","locateFile","getImageSize","prop","srcProp","widthProp","heightProp","before","getPropertyDelimitor","textToAdd","catch","reject","getImageHTMLNode","getImageCSSNode","getImageSrcHTML","srcAttr","getAttribute","urlToken","parsedValue","findUrlToken","urlValue","attrName","allUpdatesPromise","updateImageSizeCSSFile","imageNode","innerRootNode","updateImageSizeStyleTag","img","widthAttr","heightAttr","begin","getAttributeQuote","endOfAttributes","updateHTMLTag","updateImageSizeHTML","all","updates","reUrl","sizeForFileName","scale","realWidth","realHeight","urlStr","getTransport","protocol","https","http","pathname","urlPath","resp","chunks","bufSize","trySize","sizeOf","removeListener","onData","destroy","basename","chunk","on","once","isDataUrl","getImageSizeFromFile","detector","handlers","lookup","calculate","input","callback","isBuffer","fstatSync","closeSync","syncFileToBuffer","read","asyncFileToBuffer","dimensions","typeMap","detect","bits","reAbsolute","sep","tryFile","stat","isFile","base","filePath","normalize","basePath","dir","resolveAbsolute","resolveRelative","integer","uinteger","Location","LocationLink","Color","ColorInformation","ColorPresentation","FoldingRangeKind","FoldingRange","DiagnosticRelatedInformation","DiagnosticSeverity","DiagnosticTag","CodeDescription","Diagnostic","Command","ChangeAnnotation","ChangeAnnotationIdentifier","AnnotatedTextEdit","TextDocumentEdit","CreateFile","RenameFile","DeleteFile","WorkspaceEdit","MIN_VALUE","MAX_VALUE","Number","Is","objectLiteral","one","two","three","four","defined","targetUri","targetRange","targetSelectionRange","originSelectionRange","red","green","blue","alpha","numberRange","color","additionalTextEdits","typedArray","startCharacter","endCharacter","location","Warning","Information","Hint","Unnecessary","Deprecated","href","severity","relatedInformation","codeDescription","title","command","insert","del","needsConfirmation","description","annotation","annotationId","textDocument","OptionalVersionedTextDocumentIdentifier","overwrite","ignoreIfExists","oldUri","newUri","recursive","ignoreIfNotExists","documentChanges","every","TextDocumentIdentifier","VersionedTextDocumentIdentifier","TextDocumentItem","MarkupKind","MarkupContent","InsertTextFormat","CompletionItemTag","InsertReplaceEdit","InsertTextMode","MarkedString","Hover","ParameterInformation","SignatureInformation","DocumentHighlightKind","DocumentHighlight","SymbolKind","SymbolTag","SymbolInformation","DocumentSymbol","CodeActionKind","CodeActionContext","CodeAction","CodeLens","FormattingOptions","DocumentLink","SelectionRange","TextEditChangeImpl","changeAnnotations","assertChangeAnnotations","manage","clear","ChangeAnnotations","annotations","_annotations","_counter","_size","idOrAnnotation","nextId","WorkspaceChange","workspaceEdit","_this","_textEditChanges","_workspaceEdit","_changeAnnotations","textEditChange","initDocumentChanges","getTextEditChange","textDocumentEdit","initChanges","createFile","optionsOrAnnotation","operation","renameFile","deleteFile","PlainText","Markdown","Text","Method","Function","Constructor","Field","Variable","Class","Interface","Module","Unit","Value","Enum","Keyword","File","Reference","Folder","EnumMember","Constant","Struct","Event","Operator","TypeParameter","asIs","adjustIndentation","isIncomplete","fromPlainText","plainText","parameters","Read","Write","Namespace","Package","Boolean","Key","Null","containerName","selectionRange","deprecated","Empty","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Source","SourceOrganizeImports","SourceFixAll","diagnostics","only","kindOrCommandOrEdit","checkKind","isPreferred","tabSize","insertSpaces","target","func","sortedEdits","ParseOptions","isLineStart","charAt","createScanner","ignoreTrivia","tokenOffset","lineNumber","lineStartOffset","tokenLineStartOffset","prevTokenLineStartOffset","scanError","scanHexDigits","count","exact","digits","scanNext","isLineBreak","ch3","scanString","safeLength","commentClosed","isDigit","scanNumber","isUnknownContentCharacter","setPosition","newPosition","getPosition","scan","getToken","getTokenValue","getTokenOffset","getTokenLength","getTokenStartLine","getTokenStartCharacter","getTokenError","visit","visitor","DEFAULT","_scanner","toNoArgVisit","visitFunction","toOneArgVisit","onObjectBegin","onObjectProperty","onObjectEnd","onArrayBegin","onArrayEnd","onLiteralValue","onSeparator","onComment","onError","disallowComments","allowTrailingComma","handleError","skipUntilAfter","skipUntil","parseString","isValue","parseValue","needsComma","parseArray","parseObject","tokenValue","parseLiteral","allowEmptyContent","check","errors","currentProperty","currentParent","previousParents","onValue","array","cssData","htmlData","extendStatics","isWindows","__extends","setPrototypeOf","__proto__","__","platform","navigator","userAgent","_schemePattern","_singleSlashStart","_doubleSlashStart","_slash","_regexp","URI","schemeOrData","authority","query","fragment","_strict","_schemeFix","_referenceResolution","_validateUri","isUri","thing","fsPath","with","uriToFsPath","_URI","exec","percentDecode","idx","components","skipEncoding","_asFormatted","toJSON","revive","_formatted","external","_fsPath","_sep","_pathSepMarker","_super","res","$mid","encodeTable","encodeURIComponentFast","uriComponent","allowSlash","nativeEncodePos","encodeURIComponent","escaped","encodeURIComponentMinimal","keepDriveLetterCasing","encoder","userinfo","FileType","_rEncodedAsHex","decodeURIComponentGraceful","decodeURIComponent","PathMatchRegex","RegExp","Dot","isAbsolutePath","normalizePath","parts","newParts","part","joinPath","paths","readable","statements","elements","group","isChildOperator","isSiblingOperator","isClimbOperator","isGroupStart","isBracket","isRepeater","repeater","elem","selfClose","jsx","isCapitalizedLiteral","isClassNameOperator","isElementName","elementName","shortAttribute","attributeSet","isCloseOperator","isAttributeSetStart","attribute","isAttributeSetEnd","literal","quoted","isEquals","single","allowBrackets","brackets","isTextStart","isOpen","isSingle","isLiteral","consumePlaceholder","field","repeaterPlaceholder","repeaterNumber","implicit","repeater$1","whiteSpace","isAllowedOperator","isElementName$1","isAllowedSpace","isAllowedRepeater","bracketType","literal$1","operatorType","isOpenBracket","bracket","class","climb","equal","sibling","tokenVisitor","Literal","Quote","Bracket","state","getVariable","repeaters","inserted","lastIx","parentIx","parentRepeater","WhiteSpace","urlRegex","emailRegex","convert","abbr","cleanText","textInserted","filter","convertGroup","repeatGuard","maxRepeat","POSITIVE_INFINITY","varValue","deepest","deepestNode","hrefAttribute","valueType","insertHref","convertStatement","original","isGroup","convertElement","stringifyName","stringifyValue","convertAttribute","isField","attachRepeater","implied","tokenize","short","afterNegative","hasDecimal","prevPos","hasFloat","rawValue","numberValue","isHex","colorAlpha","g","parseColor","raw","colorValue","finished","stringValue","isIdentPrefix","isKeyword","shouldConsumeDashAfter","mergeTokens","consumeProperty","valueFragment","valueMode","isLiteral$1","t1","t2","isFunctionStart","isValueDelimiter","isImportant","consumeValue","isFragmentDelimiter","inArgument","consumeArguments","isCloseBracket","isArgumentDelimiter","isBracket$1","parser","mergeValue","glue","append","mergeDeclarations","dest","findDeepest","isNode","walkResolve","resolved","mergeNodes","createOutputStream","level","column","_push","processText","pushString","lines","pushNewline","indent","baseIndent","pushIndent","pushField","placeholder","strCase","attrQuote","isBooleanAttribute","isInline","inlineElements","toUpperCase","elementMap","ul","ol","table","tr","tbody","thead","tfoot","colgroup","select","optgroup","audio","video","resolveImplicitTag","ancestors","getParentElement","contextName","parentName","vocabularies","ru","sp","latin","reLorem","rand","random","sample","iterations","sentence","words","word","val","insertCommas","hasComma","totalCommas","paragraph","dict","wordCount","startWithCommon","totalWords","common","rename","isAllowed","reElement","reModifier","blockCandidates1","blockCandidates2","bem","getBEMData","classNames","cl","uniqueClass","block","findBlockName","updateClass","expandClassNames","originalClass","getBlockName","arrClassNames","expandShortNotation","_bem","classValue","parseBEM","depth","getBEMDataFromContext","walk$1","createWalkState","caret","isSnippet","isInlineElement","pushTokens","largestIndex","shouldOutputAttribute","template","namePos","afterPos","isTokenStart","isToken","after","shouldComment","enabled","trigger","htmlTagRegex","html","createCommentState","shouldFormat","hasNewline","adjacentInline","getIndent","commentNodeBefore","pushAttribute","pushSnippet","innerFormat","matches","startsWithBlockTag","commentNodeAfter","lQuote","rQuote","fieldIx","trimLeft","indentFormat","element$1","primary","secondary","isPrimaryAttribute","collectAttributes","shouldFormat$1","beforeName","afterName","pushPrimaryAttributes","beforeAttribute","booleanValue","glueAttribute","afterAttribute","pushSecondaryAttributes","splitByLines$1","lineLengths","maxLength","valueLength","beforeTextLine","afterTextLine","pushValue","formatters","haml","slim","pug","oldTextValue","parseOpt","walk","reversed","snippet","snippets","snippetAbbr","topNode","resolveSnippets","transform","implicitTag","mergeAttributes","db","minWordCount","element","findRepeater","lorem","xsl","reProperty","createSnippet","keywords","parsed","cssVal","collectKeywords","dependencies","snippetsSort","isProperty","v","scoreMatch","str1","str2","partialMatch","str1Len","str2Len","minLength","j","score","ch1","ch2","found","acronym","sum","shortHex","isShortHex","toShortHex","toHex","asHex","values","frac","asRGB","hex","pad","css","isJSON","letter","getSingleNumeric","getQuote","outputValue","outputImportant","outputToken","prevEnd","parse$1","cache","stylesheetSnippets","nest","convertSnippets","isValueScope","filteredSnippets","getSnippetsForScope","resolveNode","gradientFn","cssValue","resolveGradient","propName","resolveValueKeywords","findBestMatch","inlineValue","lastPos","getUnmatchedPart","kw","resolveKeyword","defaultValue","hasField","wrapWithField","q","resolveAsProperty","reField","inputValue","tail","resolveAsSnippet","aliases","unitless","resolveNumericValue","minScore","matchedItem","maxScore","getScoringPart","ref","dep","defaultSyntaxes","defaultConfig","syntaxConfig","parseSnippets","xhtml","sass","stylus","k","resolveConfig","globals","mergedData","typeDefaults","typeOverride","syntaxDefaults","syntaxOverride","backwardScanner","sol","peek$1","bracePairs","isHtml","consumeIdent","consumeAttributeWithUnquotedValue","consumeAttribute","consumeQuoted","consumeAttributeWithQuotedValue","isUnquotedValue","specialChars","isCloseBrace","offsetPastAutoClosed","compiledPrefix","consumePair","consumeArray","getStartOffset","isOpenBrace","isAbbreviation","consumed","resolvedConfig","__awaiter","thisArg","_arguments","P","generator","fulfilled","step","rejected","done","snippetKeyCache","markupSnippetKeys","stylesheetCustomSnippetsKeyCache","htmlAbbreviationStartRegex","cssAbbreviationRegex","htmlAbbreviationRegex","commonlyUsedTags","isStyleSheetRes","registry","customSnippetsRegistry","getDefaultSnippets","extractedValue","currentLineTillPosition","getCurrentLine","getCurrentWord","getExpandOptions","expandedAbbr","completionItems","createExpandedAbbr","dotMatches","isExpandedTextNoise","escapeNonTabStopDollar","addFinalTabStop","replaceTabStopsWithCursors","insertTextFormat","prefixOptions","abbreviationWithoutPrefix","splitVendorPrefix","properties","prefixedExpandedText","applyVendorPrefixes","stylesheetCustomSnippetsKeys","makeSnippetSuggestion","abbrRegex","tagToFindMoreSuggestionsFor","newTagMatches","commonlyUsedTagSuggestions","abbreviationSuggestions","snippetKeys","snippetDetail","skipFullMatch","snippetCompletions","snippetKey","currentAbbr","expandedWord","maxTabStop","maxTabStopRanges","foundLastStop","replaceWithLastStop","numberStart","numberEnd","currentTabStop","foundPlaceholder","rangeStart","rangeEnd","variablesFromFile","profilesFromFile","emmetSnippetField","getSyntaxType","getDefaultSyntax","getFilters","bemFilterSuffix","commentFilterSuffix","trimFilterSuffix","lengthOccupiedByFilter","extractAbbreviationFromText","extractOptions","hexColorRegex","propertyHexColorRegex","_b","_c","_d","_e","_f","stylesheetSyntax","profile","profilesFromSettings","newOptions","getProfile","trimmedFilters","filterFromProfile","bemEnabled","commentEnabled","commentFormatter","fuzzySearchMinScore","stylesheetFormatter","unitAliases","alias","aliasName","aliasValue","getFormatters","defaultVSCodeOptions","userPreferenceOptions","getClosingStyle","combinedOptions","mergedAliases","variablesFromSettings","getVariables","baseSyntax","expandedProperty","vendors","resolvedOptions","emmetExtensionsPath","workspaceFolderPath","resetSettingsFromFile","emmetExtensionsPathUri","Directory","snippetsPath","profilesPath","snippetsData","readFile","snippetsDataStr","decode","snippetsJson","customSnippets","profilesData","profilesDataStr","onlyLetters","getEmmetCompletionParticipants","emmetSettings","getId","onCssProperty","currentresult","onCssPropertyValue","extractedResults","onHtmlContent"],"mappings":"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","file":"emmetNodeMain.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 26);\n","const defaultQuotedOptions = {\n    escape: 92,\n    throws: false\n};\n/**\n * Check if given code is a number\n */\nfunction isNumber(code) {\n    return code > 47 && code < 58;\n}\n/**\n * Check if given character code is alpha code (letter through A to Z)\n */\nfunction isAlpha(code, from, to) {\n    from = from || 65; // A\n    to = to || 90; // Z\n    code &= ~32; // quick hack to convert any char code to uppercase char code\n    return code >= from && code <= to;\n}\n/**\n * Check if given character code is alpha-numeric (letter through A to Z or number)\n */\nfunction isAlphaNumeric(code) {\n    return isNumber(code) || isAlpha(code);\n}\nfunction isAlphaNumericWord(code) {\n    return isNumber(code) || isAlphaWord(code);\n}\nfunction isAlphaWord(code) {\n    return code === 95 /* _ */ || isAlpha(code);\n}\n/**\n * Check if given character code is a white-space character: a space character\n * or line breaks\n */\nfunction isWhiteSpace(code) {\n    return code === 32 /* space */\n        || code === 9 /* tab */\n        || code === 160; /* non-breaking space */\n}\n/**\n * Check if given character code is a space character\n */\nfunction isSpace(code) {\n    return isWhiteSpace(code)\n        || code === 10 /* LF */\n        || code === 13; /* CR */\n}\n/**\n * Consumes 'single' or \"double\"-quoted string from given string, if possible\n * @return `true` if quoted string was consumed. The contents of quoted string\n * will be available as `stream.current()`\n */\nfunction eatQuoted(stream, options) {\n    options = Object.assign(Object.assign({}, defaultQuotedOptions), options);\n    const start = stream.pos;\n    const quote = stream.peek();\n    if (stream.eat(isQuote)) {\n        while (!stream.eof()) {\n            switch (stream.next()) {\n                case quote:\n                    stream.start = start;\n                    return true;\n                case options.escape:\n                    stream.next();\n                    break;\n            }\n        }\n        // If we’re here then stream wasn’t properly consumed.\n        // Revert stream and decide what to do\n        stream.pos = start;\n        if (options.throws) {\n            throw stream.error('Unable to consume quoted string');\n        }\n    }\n    return false;\n}\n/**\n * Check if given character code is a quote character\n */\nfunction isQuote(code) {\n    return code === 39 /* ' */ || code === 34 /* \" */;\n}\n/**\n * Eats paired characters substring, for example `(foo)` or `[bar]`\n * @param open Character code of pair opening\n * @param close Character code of pair closing\n * @return Returns `true` if character pair was successfully consumed, it’s\n * content will be available as `stream.current()`\n */\nfunction eatPair(stream, open, close, options) {\n    options = Object.assign(Object.assign({}, defaultQuotedOptions), options);\n    const start = stream.pos;\n    if (stream.eat(open)) {\n        let stack = 1;\n        let ch;\n        while (!stream.eof()) {\n            if (eatQuoted(stream, options)) {\n                continue;\n            }\n            ch = stream.next();\n            if (ch === open) {\n                stack++;\n            }\n            else if (ch === close) {\n                stack--;\n                if (!stack) {\n                    stream.start = start;\n                    return true;\n                }\n            }\n            else if (ch === options.escape) {\n                stream.next();\n            }\n        }\n        // If we’re here then paired character can’t be consumed\n        stream.pos = start;\n        if (options.throws) {\n            throw stream.error(`Unable to find matching pair for ${String.fromCharCode(open)}`);\n        }\n    }\n    return false;\n}\n\n/**\n * A streaming, character code-based string reader\n */\nclass Scanner {\n    constructor(str, start, end) {\n        if (end == null && typeof str === 'string') {\n            end = str.length;\n        }\n        this.string = str;\n        this.pos = this.start = start || 0;\n        this.end = end || 0;\n    }\n    /**\n     * Returns true only if the stream is at the end of the file.\n     */\n    eof() {\n        return this.pos >= this.end;\n    }\n    /**\n     * Creates a new stream instance which is limited to given `start` and `end`\n     * range. E.g. its `eof()` method will look at `end` property, not actual\n     * stream end\n     */\n    limit(start, end) {\n        return new Scanner(this.string, start, end);\n    }\n    /**\n     * Returns the next character code in the stream without advancing it.\n     * Will return NaN at the end of the file.\n     */\n    peek() {\n        return this.string.charCodeAt(this.pos);\n    }\n    /**\n     * Returns the next character in the stream and advances it.\n     * Also returns <code>undefined</code> when no more characters are available.\n     */\n    next() {\n        if (this.pos < this.string.length) {\n            return this.string.charCodeAt(this.pos++);\n        }\n    }\n    /**\n     * `match` can be a character code or a function that takes a character code\n     * and returns a boolean. If the next character in the stream 'matches'\n     * the given argument, it is consumed and returned.\n     * Otherwise, `false` is returned.\n     */\n    eat(match) {\n        const ch = this.peek();\n        const ok = typeof match === 'function' ? match(ch) : ch === match;\n        if (ok) {\n            this.next();\n        }\n        return ok;\n    }\n    /**\n     * Repeatedly calls <code>eat</code> with the given argument, until it\n     * fails. Returns <code>true</code> if any characters were eaten.\n     */\n    eatWhile(match) {\n        const start = this.pos;\n        while (!this.eof() && this.eat(match)) { /* */ }\n        return this.pos !== start;\n    }\n    /**\n     * Backs up the stream n characters. Backing it up further than the\n     * start of the current token will cause things to break, so be careful.\n     */\n    backUp(n) {\n        this.pos -= (n || 1);\n    }\n    /**\n     * Get the string between the start of the current token and the\n     * current stream position.\n     */\n    current() {\n        return this.substring(this.start, this.pos);\n    }\n    /**\n     * Returns substring for given range\n     */\n    substring(start, end) {\n        return this.string.slice(start, end);\n    }\n    /**\n     * Creates error object with current stream state\n     */\n    error(message, pos = this.pos) {\n        return new ScannerError(`${message} at ${pos + 1}`, pos, this.string);\n    }\n}\nclass ScannerError extends Error {\n    constructor(message, pos, str) {\n        super(message);\n        this.pos = pos;\n        this.string = str;\n    }\n}\n\nexport default Scanner;\nexport { ScannerError, eatPair, eatQuoted, isAlpha, isAlphaNumeric, isAlphaNumericWord, isAlphaWord, isNumber, isQuote, isSpace, isWhiteSpace };\n//# sourceMappingURL=scanner.es.js.map\n","/**\n * Methods for consuming quoted values\n */\n\nconst SINGLE_QUOTE = 39; // '\nconst DOUBLE_QUOTE = 34; // \"\n\nconst defaultOptions = {\n\tescape: 92,   // \\ character\n\tthrows: false\n};\n\n/**\n * Consumes 'single' or \"double\"-quoted string from given string, if possible\n * @param  {StreamReader} stream\n * @param  {Number}  options.escape A character code of quote-escape symbol\n * @param  {Boolean} options.throws Throw error if quotes string can’t be properly consumed\n * @return {Boolean} `true` if quoted string was consumed. The contents\n *                   of quoted string will be availabe as `stream.current()`\n */\nvar eatQuoted = function(stream, options) {\n\toptions = options ? Object.assign({}, defaultOptions, options) : defaultOptions;\n\tconst start = stream.pos;\n\tconst quote = stream.peek();\n\n\tif (stream.eat(isQuote)) {\n\t\twhile (!stream.eof()) {\n\t\t\tswitch (stream.next()) {\n\t\t\t\tcase quote:\n\t\t\t\t\tstream.start = start;\n\t\t\t\t\treturn true;\n\n\t\t\t\tcase options.escape:\n\t\t\t\t\tstream.next();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// If we’re here then stream wasn’t properly consumed.\n\t\t// Revert stream and decide what to do\n\t\tstream.pos = start;\n\n\t\tif (options.throws) {\n\t\t\tthrow stream.error('Unable to consume quoted string');\n\t\t}\n\t}\n\n\treturn false;\n};\n\nfunction isQuote(code) {\n\treturn code === SINGLE_QUOTE || code === DOUBLE_QUOTE;\n}\n\n/**\n * Check if given code is a number\n * @param  {Number}  code\n * @return {Boolean}\n */\nfunction isNumber(code) {\n\treturn code > 47 && code < 58;\n}\n\n/**\n * Check if given character code is alpha code (letter through A to Z)\n * @param  {Number}  code\n * @param  {Number}  [from]\n * @param  {Number}  [to]\n * @return {Boolean}\n */\nfunction isAlpha(code, from, to) {\n\tfrom = from || 65; // A\n\tto   = to   || 90; // Z\n\tcode &= ~32; // quick hack to convert any char code to uppercase char code\n\n\treturn code >= from && code <= to;\n}\n\n/**\n * Check if given character code is alpha-numeric (letter through A to Z or number)\n * @param  {Number}  code\n * @return {Boolean}\n */\nfunction isAlphaNumeric(code) {\n\treturn isNumber(code) || isAlpha(code);\n}\n\nfunction isWhiteSpace(code) {\n\treturn code === 32   /* space */\n\t\t|| code === 9    /* tab */\n\t\t|| code === 160; /* non-breaking space */\n}\n\n/**\n * Check if given character code is a space\n * @param  {Number}  code\n * @return {Boolean}\n */\nfunction isSpace(code) {\n\treturn isWhiteSpace(code)\n\t\t|| code === 10  /* LF */\n\t\t|| code === 13; /* CR */\n}\n\nconst defaultOptions$1 = {\n\tescape: 92,   // \\ character\n\tthrows: false\n};\n\n/**\n * Eats paired characters substring, for example `(foo)` or `[bar]`\n * @param  {StreamReader} stream\n * @param  {Number} open      Character code of pair openinig\n * @param  {Number} close     Character code of pair closing\n * @param  {Object} [options]\n * @return {Boolean}       Returns `true` if chacarter pair was successfully\n *                         consumed, it’s content will be available as `stream.current()`\n */\nfunction eatPair(stream, open, close, options) {\n\toptions = options ? Object.assign({}, defaultOptions$1, options) : defaultOptions$1;\n\tconst start = stream.pos;\n\n\tif (stream.eat(open)) {\n\t\tlet stack = 1, ch;\n\n\t\twhile (!stream.eof()) {\n\t\t\tif (eatQuoted(stream, options)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tch = stream.next();\n\t\t\tif (ch === open) {\n\t\t\t\tstack++;\n\t\t\t} else if (ch === close) {\n\t\t\t\tstack--;\n\t\t\t\tif (!stack) {\n\t\t\t\t\tstream.start = start;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t} else if (ch === options.escape) {\n\t\t\t\tstream.next();\n\t\t\t}\n\t\t}\n\n\t\t// If we’re here then paired character can’t be consumed\n\t\tstream.pos = start;\n\n\t\tif (options.throws) {\n\t\t\tthrow stream.error(`Unable to find matching pair for ${String.fromCharCode(open)}`);\n\t\t}\n\t}\n\n\treturn false;\n}\n\nexport { eatQuoted, isQuote, isAlpha, isNumber, isAlphaNumeric, isSpace, isWhiteSpace, eatPair };\n","module.exports = require(\"vscode\");","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport parse from '@emmetio/html-matcher';\nimport parseStylesheet from '@emmetio/css-parser';\nimport { Node as FlatNode, HtmlNode as HtmlFlatNode, Property as FlatProperty, Rule as FlatRule, CssToken as FlatCssToken, Stylesheet as FlatStylesheet } from 'EmmetFlatNode';\nimport { DocumentStreamReader } from './bufferStream';\nimport * as EmmetHelper from 'vscode-emmet-helper';\nimport { TextDocument as LSTextDocument } from 'vscode-languageserver-textdocument';\nimport { getRootNode } from './parseDocument';\n\nlet _emmetHelper: typeof EmmetHelper;\nlet _currentExtensionsPath: string | undefined = undefined;\n\nlet _homeDir: vscode.Uri | undefined;\n\n\nexport function setHomeDir(homeDir: vscode.Uri) {\n\t_homeDir = homeDir;\n}\n\nexport function getEmmetHelper() {\n\t// Lazy load vscode-emmet-helper instead of importing it\n\t// directly to reduce the start-up time of the extension\n\tif (!_emmetHelper) {\n\t\t_emmetHelper = require('vscode-emmet-helper');\n\t}\n\tupdateEmmetExtensionsPath();\n\treturn _emmetHelper;\n}\n\n/**\n * Update Emmet Helper to use user snippets from the extensionsPath setting\n */\nexport function updateEmmetExtensionsPath(forceRefresh: boolean = false) {\n\tif (!_emmetHelper) {\n\t\treturn;\n\t}\n\tlet extensionsPath = vscode.workspace.getConfiguration('emmet')['extensionsPath'];\n\tif (forceRefresh || _currentExtensionsPath !== extensionsPath) {\n\t\t_currentExtensionsPath = extensionsPath;\n\t\tif (!vscode.workspace.workspaceFolders || vscode.workspace.workspaceFolders.length === 0) {\n\t\t\treturn;\n\t\t} else {\n\t\t\tconst rootPath = vscode.workspace.workspaceFolders[0].uri;\n\t\t\tconst fileSystem = vscode.workspace.fs;\n\t\t\t_emmetHelper.updateExtensionsPath(extensionsPath, fileSystem, rootPath, _homeDir).then(null, (err: string) => vscode.window.showErrorMessage(err));\n\t\t}\n\t}\n}\n\n/**\n * Mapping between languages that support Emmet and completion trigger characters\n */\nexport const LANGUAGE_MODES: { [id: string]: string[] } = {\n\t'html': ['!', '.', '}', ':', '*', '$', ']', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n\t'jade': ['!', '.', '}', ':', '*', '$', ']', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n\t'slim': ['!', '.', '}', ':', '*', '$', ']', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n\t'haml': ['!', '.', '}', ':', '*', '$', ']', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n\t'xml': ['.', '}', '*', '$', ']', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n\t'xsl': ['!', '.', '}', '*', '$', ']', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n\t'css': [':', '-', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n\t'scss': [':', '-', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n\t'sass': [':', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n\t'less': [':', '-', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n\t'stylus': [':', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n\t'javascriptreact': ['!', '.', '}', '*', '$', ']', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n\t'typescriptreact': ['!', '.', '}', '*', '$', ']', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9']\n};\n\nexport function isStyleSheet(syntax: string): boolean {\n\tlet stylesheetSyntaxes = ['css', 'scss', 'sass', 'less', 'stylus'];\n\treturn (stylesheetSyntaxes.indexOf(syntax) > -1);\n}\n\nexport function validate(allowStylesheet: boolean = true): boolean {\n\tlet editor = vscode.window.activeTextEditor;\n\tif (!editor) {\n\t\tvscode.window.showInformationMessage('No editor is active');\n\t\treturn false;\n\t}\n\tif (!allowStylesheet && isStyleSheet(editor.document.languageId)) {\n\t\treturn false;\n\t}\n\treturn true;\n}\n\nexport function getMappingForIncludedLanguages(): any {\n\t// Explicitly map languages that have built-in grammar in VS Code to their parent language\n\t// to get emmet completion support\n\t// For other languages, users will have to use `emmet.includeLanguages` or\n\t// language specific extensions can provide emmet completion support\n\tconst MAPPED_MODES: Object = {\n\t\t'handlebars': 'html',\n\t\t'php': 'html'\n\t};\n\n\tconst finalMappedModes = Object.create(null);\n\tlet includeLanguagesConfig = vscode.workspace.getConfiguration('emmet')['includeLanguages'];\n\tlet includeLanguages = Object.assign({}, MAPPED_MODES, includeLanguagesConfig ? includeLanguagesConfig : {});\n\tObject.keys(includeLanguages).forEach(syntax => {\n\t\tif (typeof includeLanguages[syntax] === 'string' && LANGUAGE_MODES[includeLanguages[syntax]]) {\n\t\t\tfinalMappedModes[syntax] = includeLanguages[syntax];\n\t\t}\n\t});\n\treturn finalMappedModes;\n}\n\n/**\n* Get the corresponding emmet mode for given vscode language mode\n* E.g.: jsx for typescriptreact/javascriptreact or pug for jade\n* If the language is not supported by emmet or has been excluded via `excludeLanguages` setting,\n* then nothing is returned\n*\n* @param excludedLanguages Array of language ids that user has chosen to exclude for emmet\n*/\nexport function getEmmetMode(language: string, excludedLanguages: string[]): string | undefined {\n\tif (!language || excludedLanguages.indexOf(language) > -1) {\n\t\treturn;\n\t}\n\tif (/\\b(typescriptreact|javascriptreact|jsx-tags)\\b/.test(language)) { // treat tsx like jsx\n\t\treturn 'jsx';\n\t}\n\tif (language === 'sass-indented') { // map sass-indented to sass\n\t\treturn 'sass';\n\t}\n\tif (language === 'jade') {\n\t\treturn 'pug';\n\t}\n\tconst syntaxes = getSyntaxes();\n\tif (syntaxes.markup.includes(language) || syntaxes.stylesheet.includes(language)) {\n\t\treturn language;\n\t}\n\treturn;\n}\n\nconst closeBrace = 125;\nconst openBrace = 123;\nconst slash = 47;\nconst star = 42;\n\n/**\n * Traverse the given document backward & forward from given position\n * to find a complete ruleset, then parse just that to return a Stylesheet\n * @param document vscode.TextDocument\n * @param position vscode.Position\n */\nexport function parsePartialStylesheet(document: vscode.TextDocument, position: vscode.Position): FlatStylesheet | undefined {\n\tconst isCSS = document.languageId === 'css';\n\tconst positionOffset = document.offsetAt(position);\n\tlet startOffset = 0;\n\tlet endOffset = document.getText().length;\n\tconst limitCharacter = positionOffset - 5000;\n\tconst limitOffset = limitCharacter > 0 ? limitCharacter : startOffset;\n\tconst stream = new DocumentStreamReader(document, positionOffset);\n\n\tfunction findOpeningCommentBeforePosition(pos: number): number | undefined {\n\t\tconst text = document.getText().substring(0, pos);\n\t\tlet offset = text.lastIndexOf('/*');\n\t\tif (offset === -1) {\n\t\t\treturn;\n\t\t}\n\t\treturn offset;\n\t}\n\n\tfunction findClosingCommentAfterPosition(pos: number): number | undefined {\n\t\tconst text = document.getText().substring(pos);\n\t\tlet offset = text.indexOf('*/');\n\t\tif (offset === -1) {\n\t\t\treturn;\n\t\t}\n\t\toffset += 2 + pos;\n\t\treturn offset;\n\t}\n\n\tfunction consumeLineCommentBackwards() {\n\t\tconst posLineNumber = document.positionAt(stream.pos).line;\n\t\tif (!isCSS && currentLine !== posLineNumber) {\n\t\t\tcurrentLine = posLineNumber;\n\t\t\tconst startLineComment = document.lineAt(currentLine).text.indexOf('//');\n\t\t\tif (startLineComment > -1) {\n\t\t\t\tstream.pos = document.offsetAt(new vscode.Position(currentLine, startLineComment));\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction consumeBlockCommentBackwards() {\n\t\tif (stream.peek() === slash) {\n\t\t\tif (stream.backUp(1) === star) {\n\t\t\t\tstream.pos = findOpeningCommentBeforePosition(stream.pos) ?? startOffset;\n\t\t\t} else {\n\t\t\t\tstream.next();\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction consumeCommentForwards() {\n\t\tif (stream.eat(slash)) {\n\t\t\tif (stream.eat(slash) && !isCSS) {\n\t\t\t\tconst posLineNumber = document.positionAt(stream.pos).line;\n\t\t\t\tstream.pos = document.offsetAt(new vscode.Position(posLineNumber + 1, 0));\n\t\t\t} else if (stream.eat(star)) {\n\t\t\t\tstream.pos = findClosingCommentAfterPosition(stream.pos) ?? endOffset;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Go forward until we find a closing brace.\n\twhile (!stream.eof() && !stream.eat(closeBrace)) {\n\t\tif (stream.peek() === slash) {\n\t\t\tconsumeCommentForwards();\n\t\t} else {\n\t\t\tstream.next();\n\t\t}\n\t}\n\n\tif (!stream.eof()) {\n\t\tendOffset = stream.pos;\n\t}\n\n\tstream.pos = positionOffset;\n\tlet openBracesToFind = 1;\n\tlet currentLine = position.line;\n\tlet exit = false;\n\n\t// Go back until we found an opening brace. If we find a closing one, consume its pair and continue.\n\twhile (!exit && openBracesToFind > 0 && !stream.sof()) {\n\t\tconsumeLineCommentBackwards();\n\n\t\tswitch (stream.backUp(1)) {\n\t\t\tcase openBrace:\n\t\t\t\topenBracesToFind--;\n\t\t\t\tbreak;\n\t\t\tcase closeBrace:\n\t\t\t\tif (isCSS) {\n\t\t\t\t\tstream.next();\n\t\t\t\t\tstartOffset = stream.pos;\n\t\t\t\t\texit = true;\n\t\t\t\t} else {\n\t\t\t\t\topenBracesToFind++;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase slash:\n\t\t\t\tconsumeBlockCommentBackwards();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (position.line - document.positionAt(stream.pos).line > 100\n\t\t\t|| stream.pos <= limitOffset) {\n\t\t\texit = true;\n\t\t}\n\t}\n\n\t// We are at an opening brace. We need to include its selector.\n\tcurrentLine = document.positionAt(stream.pos).line;\n\topenBracesToFind = 0;\n\tlet foundSelector = false;\n\twhile (!exit && !stream.sof() && !foundSelector && openBracesToFind >= 0) {\n\t\tconsumeLineCommentBackwards();\n\n\t\tconst ch = stream.backUp(1);\n\t\tif (/\\s/.test(String.fromCharCode(ch))) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tswitch (ch) {\n\t\t\tcase slash:\n\t\t\t\tconsumeBlockCommentBackwards();\n\t\t\t\tbreak;\n\t\t\tcase closeBrace:\n\t\t\t\topenBracesToFind++;\n\t\t\t\tbreak;\n\t\t\tcase openBrace:\n\t\t\t\topenBracesToFind--;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tif (!openBracesToFind) {\n\t\t\t\t\tfoundSelector = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (!stream.sof() && foundSelector) {\n\t\t\tstartOffset = stream.pos;\n\t\t}\n\t}\n\n\ttry {\n\t\tconst buffer = ' '.repeat(startOffset) + document.getText().substring(startOffset, endOffset);\n\t\treturn parseStylesheet(buffer);\n\t} catch (e) {\n\t\treturn;\n\t}\n}\n\n/**\n * Returns node corresponding to given position in the given root node\n */\nexport function getFlatNode(root: FlatNode | undefined, offset: number, includeNodeBoundary: boolean): FlatNode | undefined {\n\tif (!root) {\n\t\treturn;\n\t}\n\n\tfunction getFlatNodeChild(child: FlatNode | undefined): FlatNode | undefined {\n\t\tif (!child) {\n\t\t\treturn;\n\t\t}\n\t\tconst nodeStart = child.start;\n\t\tconst nodeEnd = child.end;\n\t\tif ((nodeStart < offset && nodeEnd > offset)\n\t\t\t|| (includeNodeBoundary && nodeStart <= offset && nodeEnd >= offset)) {\n\t\t\treturn getFlatNodeChildren(child.children) ?? child;\n\t\t}\n\t\telse if ('close' in <any>child) {\n\t\t\t// We have an HTML node in this case.\n\t\t\t// In case this node is an invalid unpaired HTML node,\n\t\t\t// we still want to search its children\n\t\t\tconst htmlChild = <HtmlFlatNode>child;\n\t\t\tif (htmlChild.open && !htmlChild.close) {\n\t\t\t\treturn getFlatNodeChildren(htmlChild.children);\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\n\tfunction getFlatNodeChildren(children: FlatNode[]): FlatNode | undefined {\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tconst foundChild = getFlatNodeChild(children[i]);\n\t\t\tif (foundChild) {\n\t\t\t\treturn foundChild;\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\n\treturn getFlatNodeChildren(root.children);\n}\n\nexport const allowedMimeTypesInScriptTag = ['text/html', 'text/plain', 'text/x-template', 'text/template', 'text/ng-template'];\n\n/**\n * Finds the HTML node within an HTML document at a given position\n * If position is inside a script tag of type template, then it will be parsed to find the inner HTML node as well\n */\nexport function getHtmlFlatNode(documentText: string, root: FlatNode | undefined, offset: number, includeNodeBoundary: boolean): HtmlFlatNode | undefined {\n\tconst currentNode: HtmlFlatNode | undefined = <HtmlFlatNode | undefined>getFlatNode(root, offset, includeNodeBoundary);\n\tif (!currentNode) { return; }\n\n\tconst isTemplateScript = currentNode.name === 'script' &&\n\t\t(currentNode.attributes &&\n\t\t\tcurrentNode.attributes.some(x => x.name.toString() === 'type'\n\t\t\t\t&& allowedMimeTypesInScriptTag.includes(x.value.toString())));\n\tif (isTemplateScript\n\t\t&& currentNode.open\n\t\t&& offset > currentNode.open.end\n\t\t&& (!currentNode.close || offset < currentNode.close.start)) {\n\t\t// blank out the rest of the document and search for the node within\n\t\tconst beforePadding = ' '.repeat(currentNode.open.end);\n\t\tconst endToUse = currentNode.close ? currentNode.close.start : currentNode.end;\n\t\tconst scriptBodyText = beforePadding + documentText.substring(currentNode.open.end, endToUse);\n\t\tconst innerRoot: HtmlFlatNode = parse(scriptBodyText);\n\t\tconst scriptBodyNode = getHtmlFlatNode(scriptBodyText, innerRoot, offset, includeNodeBoundary);\n\t\tif (scriptBodyNode) {\n\t\t\tscriptBodyNode.parent = currentNode;\n\t\t\tcurrentNode.children.push(scriptBodyNode);\n\t\t\treturn scriptBodyNode;\n\t\t}\n\t}\n\treturn currentNode;\n}\n\nexport function offsetRangeToSelection(document: vscode.TextDocument, start: number, end: number): vscode.Selection {\n\tconst startPos = document.positionAt(start);\n\tconst endPos = document.positionAt(end);\n\treturn new vscode.Selection(startPos, endPos);\n}\n\nexport function offsetRangeToVsRange(document: vscode.TextDocument, start: number, end: number): vscode.Range {\n\tconst startPos = document.positionAt(start);\n\tconst endPos = document.positionAt(end);\n\treturn new vscode.Range(startPos, endPos);\n}\n\n/**\n * Returns the deepest non comment node under given node\n */\nexport function getDeepestFlatNode(node: FlatNode | undefined): FlatNode | undefined {\n\tif (!node || !node.children || node.children.length === 0 || !node.children.find(x => x.type !== 'comment')) {\n\t\treturn node;\n\t}\n\tfor (let i = node.children.length - 1; i >= 0; i--) {\n\t\tif (node.children[i].type !== 'comment') {\n\t\t\treturn getDeepestFlatNode(node.children[i]);\n\t\t}\n\t}\n\treturn undefined;\n}\n\nexport function findNextWord(propertyValue: string, pos: number): [number | undefined, number | undefined] {\n\n\tlet foundSpace = pos === -1;\n\tlet foundStart = false;\n\tlet foundEnd = false;\n\n\tlet newSelectionStart;\n\tlet newSelectionEnd;\n\twhile (pos < propertyValue.length - 1) {\n\t\tpos++;\n\t\tif (!foundSpace) {\n\t\t\tif (propertyValue[pos] === ' ') {\n\t\t\t\tfoundSpace = true;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\t\tif (foundSpace && !foundStart && propertyValue[pos] === ' ') {\n\t\t\tcontinue;\n\t\t}\n\t\tif (!foundStart) {\n\t\t\tnewSelectionStart = pos;\n\t\t\tfoundStart = true;\n\t\t\tcontinue;\n\t\t}\n\t\tif (propertyValue[pos] === ' ') {\n\t\t\tnewSelectionEnd = pos;\n\t\t\tfoundEnd = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (foundStart && !foundEnd) {\n\t\tnewSelectionEnd = propertyValue.length;\n\t}\n\n\treturn [newSelectionStart, newSelectionEnd];\n}\n\nexport function findPrevWord(propertyValue: string, pos: number): [number | undefined, number | undefined] {\n\n\tlet foundSpace = pos === propertyValue.length;\n\tlet foundStart = false;\n\tlet foundEnd = false;\n\n\tlet newSelectionStart;\n\tlet newSelectionEnd;\n\twhile (pos > -1) {\n\t\tpos--;\n\t\tif (!foundSpace) {\n\t\t\tif (propertyValue[pos] === ' ') {\n\t\t\t\tfoundSpace = true;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\t\tif (foundSpace && !foundEnd && propertyValue[pos] === ' ') {\n\t\t\tcontinue;\n\t\t}\n\t\tif (!foundEnd) {\n\t\t\tnewSelectionEnd = pos + 1;\n\t\t\tfoundEnd = true;\n\t\t\tcontinue;\n\t\t}\n\t\tif (propertyValue[pos] === ' ') {\n\t\t\tnewSelectionStart = pos + 1;\n\t\t\tfoundStart = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (foundEnd && !foundStart) {\n\t\tnewSelectionStart = 0;\n\t}\n\n\treturn [newSelectionStart, newSelectionEnd];\n}\n\nexport function getNodesInBetween(node1: FlatNode, node2: FlatNode): FlatNode[] {\n\t// Same node\n\tif (sameNodes(node1, node2)) {\n\t\treturn [node1];\n\t}\n\n\t// Not siblings\n\tif (!sameNodes(node1.parent, node2.parent)) {\n\t\t// node2 is ancestor of node1\n\t\tif (node2.start < node1.start) {\n\t\t\treturn [node2];\n\t\t}\n\n\t\t// node1 is ancestor of node2\n\t\tif (node2.start < node1.end) {\n\t\t\treturn [node1];\n\t\t}\n\n\t\t// Get the highest ancestor of node1 that should be commented\n\t\twhile (node1.parent && node1.parent.end < node2.start) {\n\t\t\tnode1 = node1.parent;\n\t\t}\n\n\t\t// Get the highest ancestor of node2 that should be commented\n\t\twhile (node2.parent && node2.parent.start > node1.start) {\n\t\t\tnode2 = node2.parent;\n\t\t}\n\t}\n\n\tconst siblings: FlatNode[] = [];\n\tlet currentNode: FlatNode | undefined = node1;\n\tconst position = node2.end;\n\twhile (currentNode && position > currentNode.start) {\n\t\tsiblings.push(currentNode);\n\t\tcurrentNode = currentNode.nextSibling;\n\t}\n\treturn siblings;\n}\n\nexport function sameNodes(node1: FlatNode | undefined, node2: FlatNode | undefined): boolean {\n\t// return true if they're both undefined\n\tif (!node1 && !node2) {\n\t\treturn true;\n\t}\n\t// return false if only one of them is undefined\n\tif (!node1 || !node2) {\n\t\treturn false;\n\t}\n\treturn node1.start === node2.start && node1.end === node2.end;\n}\n\nexport function getEmmetConfiguration(syntax: string) {\n\tconst emmetConfig = vscode.workspace.getConfiguration('emmet');\n\tconst syntaxProfiles = Object.assign({}, emmetConfig['syntaxProfiles'] || {});\n\tconst preferences = Object.assign({}, emmetConfig['preferences'] || {});\n\t// jsx, xml and xsl syntaxes need to have self closing tags unless otherwise configured by user\n\tif (syntax === 'jsx' || syntax === 'xml' || syntax === 'xsl') {\n\t\tsyntaxProfiles[syntax] = syntaxProfiles[syntax] || {};\n\t\tif (typeof syntaxProfiles[syntax] === 'object'\n\t\t\t&& !syntaxProfiles[syntax].hasOwnProperty('self_closing_tag') // Old Emmet format\n\t\t\t&& !syntaxProfiles[syntax].hasOwnProperty('selfClosingStyle') // Emmet 2.0 format\n\t\t) {\n\t\t\tsyntaxProfiles[syntax] = {\n\t\t\t\t...syntaxProfiles[syntax],\n\t\t\t\tselfClosingStyle: 'xml'\n\t\t\t};\n\t\t}\n\t}\n\n\treturn {\n\t\tpreferences,\n\t\tshowExpandedAbbreviation: emmetConfig['showExpandedAbbreviation'],\n\t\tshowAbbreviationSuggestions: emmetConfig['showAbbreviationSuggestions'],\n\t\tsyntaxProfiles,\n\t\tvariables: emmetConfig['variables'],\n\t\texcludeLanguages: emmetConfig['excludeLanguages'],\n\t\tshowSuggestionsAsSnippets: emmetConfig['showSuggestionsAsSnippets']\n\t};\n}\n\n/**\n * Itereates by each child, as well as nested child's children, in their order\n * and invokes `fn` for each. If `fn` function returns `false`, iteration stops\n */\nexport function iterateCSSToken(token: FlatCssToken, fn: (x: any) => any): boolean {\n\tfor (let i = 0, il = token.size; i < il; i++) {\n\t\tif (fn(token.item(i)) === false || iterateCSSToken(token.item(i), fn) === false) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n/**\n * Returns `name` CSS property from given `rule`\n */\nexport function getCssPropertyFromRule(rule: FlatRule, name: string): FlatProperty | undefined {\n\treturn rule.children.find(node => node.type === 'property' && node.name === name) as FlatProperty;\n}\n\n/**\n * Returns css property under caret in given editor or `null` if such node cannot\n * be found\n */\nexport function getCssPropertyFromDocument(editor: vscode.TextEditor, position: vscode.Position): FlatProperty | null {\n\tconst document = editor.document;\n\tconst rootNode = getRootNode(document, true);\n\tconst offset = document.offsetAt(position);\n\tconst node = getFlatNode(rootNode, offset, true);\n\n\tif (isStyleSheet(editor.document.languageId)) {\n\t\treturn node && node.type === 'property' ? <FlatProperty>node : null;\n\t}\n\n\tconst htmlNode = <HtmlFlatNode>node;\n\tif (htmlNode\n\t\t&& htmlNode.name === 'style'\n\t\t&& htmlNode.open && htmlNode.close\n\t\t&& htmlNode.open.end < offset\n\t\t&& htmlNode.close.start > offset) {\n\t\tconst buffer = ' '.repeat(htmlNode.start) +\n\t\t\tdocument.getText().substring(htmlNode.start, htmlNode.end);\n\t\tconst innerRootNode = parseStylesheet(buffer);\n\t\tconst innerNode = getFlatNode(innerRootNode, offset, true);\n\t\treturn (innerNode && innerNode.type === 'property') ? <FlatProperty>innerNode : null;\n\t}\n\n\treturn null;\n}\n\n\nexport function getEmbeddedCssNodeIfAny(document: vscode.TextDocument, currentNode: FlatNode | undefined, position: vscode.Position): FlatNode | undefined {\n\tif (!currentNode) {\n\t\treturn;\n\t}\n\tconst currentHtmlNode = <HtmlFlatNode>currentNode;\n\tif (currentHtmlNode && currentHtmlNode.open && currentHtmlNode.close) {\n\t\tconst offset = document.offsetAt(position);\n\t\tif (currentHtmlNode.open.end <= offset && offset <= currentHtmlNode.close.start) {\n\t\t\tif (currentHtmlNode.name === 'style'\n\t\t\t\t&& currentHtmlNode.open.end < offset\n\t\t\t\t&& currentHtmlNode.close.start > offset) {\n\t\t\t\tconst buffer = ' '.repeat(currentHtmlNode.open.end) + document.getText().substring(currentHtmlNode.open.end, currentHtmlNode.close.start);\n\t\t\t\treturn parseStylesheet(buffer);\n\t\t\t}\n\t\t}\n\t}\n\treturn;\n}\n\nexport function isStyleAttribute(currentNode: FlatNode | undefined, offset: number): boolean {\n\tif (!currentNode) {\n\t\treturn false;\n\t}\n\tconst currentHtmlNode = <HtmlFlatNode>currentNode;\n\tconst index = (currentHtmlNode.attributes || []).findIndex(x => x.name.toString() === 'style');\n\tif (index === -1) {\n\t\treturn false;\n\t}\n\tconst styleAttribute = currentHtmlNode.attributes[index];\n\treturn offset >= styleAttribute.value.start && offset <= styleAttribute.value.end;\n}\n\nexport function isNumber(obj: any): obj is number {\n\treturn typeof obj === 'number';\n}\n\nexport function toLSTextDocument(doc: vscode.TextDocument): LSTextDocument {\n\treturn LSTextDocument.create(doc.uri.toString(), doc.languageId, doc.version, doc.getText());\n}\n\nexport function getPathBaseName(path: string): string {\n\tconst pathAfterSlashSplit = path.split('/').pop();\n\tconst pathAfterBackslashSplit = pathAfterSlashSplit ? pathAfterSlashSplit.split('\\\\').pop() : '';\n\treturn pathAfterBackslashSplit ?? '';\n}\n\nexport function getSyntaxes() {\n\t/**\n\t * List of all known syntaxes, from emmetio/emmet\n\t */\n\treturn {\n\t\tmarkup: ['html', 'xml', 'xsl', 'jsx', 'js', 'pug', 'slim', 'haml'],\n\t\tstylesheet: ['css', 'sass', 'scss', 'less', 'sss', 'stylus']\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { TextDocument } from 'vscode';\nimport { Node as FlatNode } from 'EmmetFlatNode';\nimport parse from '@emmetio/html-matcher';\nimport parseStylesheet from '@emmetio/css-parser';\nimport { isStyleSheet } from './util';\n\ntype Pair<K, V> = {\n\tkey: K;\n\tvalue: V;\n};\n\n// Map(filename, Pair(fileVersion, rootNodeOfParsedContent))\nconst _parseCache = new Map<string, Pair<number, FlatNode> | undefined>();\n\nexport function getRootNode(document: TextDocument, useCache: boolean): FlatNode {\n\tconst key = document.uri.toString();\n\tconst result = _parseCache.get(key);\n\tconst documentVersion = document.version;\n\tif (useCache && result) {\n\t\tif (documentVersion === result.key) {\n\t\t\treturn result.value;\n\t\t}\n\t}\n\n\tconst parseContent = isStyleSheet(document.languageId) ? parseStylesheet : parse;\n\tconst rootNode = parseContent(document.getText());\n\tif (useCache) {\n\t\t_parseCache.set(key, { key: documentVersion, value: rootNode });\n\t}\n\treturn rootNode;\n}\n\nexport function addFileToParseCache(document: TextDocument) {\n\tconst filename = document.uri.toString();\n\t_parseCache.set(filename, undefined);\n}\n\nexport function removeFileFromParseCache(document: TextDocument) {\n\tconst filename = document.uri.toString();\n\t_parseCache.delete(filename);\n}\n","/**\n * A streaming, character code-based string reader\n */\nclass StreamReader {\n\tconstructor(string, start, end) {\n\t\tif (end == null && typeof string === 'string') {\n\t\t\tend = string.length;\n\t\t}\n\n\t\tthis.string = string;\n\t\tthis.pos = this.start = start || 0;\n\t\tthis.end = end;\n\t}\n\n\t/**\n\t * Returns true only if the stream is at the end of the file.\n\t * @returns {Boolean}\n\t */\n\teof() {\n\t\treturn this.pos >= this.end;\n\t}\n\n\t/**\n\t * Creates a new stream instance which is limited to given `start` and `end`\n\t * range. E.g. its `eof()` method will look at `end` property, not actual\n\t * stream end\n\t * @param  {Point} start\n\t * @param  {Point} end\n\t * @return {StreamReader}\n\t */\n\tlimit(start, end) {\n\t\treturn new this.constructor(this.string, start, end);\n\t}\n\n\t/**\n\t * Returns the next character code in the stream without advancing it.\n\t * Will return NaN at the end of the file.\n\t * @returns {Number}\n\t */\n\tpeek() {\n\t\treturn this.string.charCodeAt(this.pos);\n\t}\n\n\t/**\n\t * Returns the next character in the stream and advances it.\n\t * Also returns <code>undefined</code> when no more characters are available.\n\t * @returns {Number}\n\t */\n\tnext() {\n\t\tif (this.pos < this.string.length) {\n\t\t\treturn this.string.charCodeAt(this.pos++);\n\t\t}\n\t}\n\n\t/**\n\t * `match` can be a character code or a function that takes a character code\n\t * and returns a boolean. If the next character in the stream 'matches'\n\t * the given argument, it is consumed and returned.\n\t * Otherwise, `false` is returned.\n\t * @param {Number|Function} match\n\t * @returns {Boolean}\n\t */\n\teat(match) {\n\t\tconst ch = this.peek();\n\t\tconst ok = typeof match === 'function' ? match(ch) : ch === match;\n\n\t\tif (ok) {\n\t\t\tthis.next();\n\t\t}\n\n\t\treturn ok;\n\t}\n\n\t/**\n\t * Repeatedly calls <code>eat</code> with the given argument, until it\n\t * fails. Returns <code>true</code> if any characters were eaten.\n\t * @param {Object} match\n\t * @returns {Boolean}\n\t */\n\teatWhile(match) {\n\t\tconst start = this.pos;\n\t\twhile (!this.eof() && this.eat(match)) {}\n\t\treturn this.pos !== start;\n\t}\n\n\t/**\n\t * Backs up the stream n characters. Backing it up further than the\n\t * start of the current token will cause things to break, so be careful.\n\t * @param {Number} n\n\t */\n\tbackUp(n) {\n\t\tthis.pos -= (n || 1);\n\t}\n\n\t/**\n\t * Get the string between the start of the current token and the\n\t * current stream position.\n\t * @returns {String}\n\t */\n\tcurrent() {\n\t\treturn this.substring(this.start, this.pos);\n\t}\n\n\t/**\n\t * Returns substring for given range\n\t * @param  {Number} start\n\t * @param  {Number} [end]\n\t * @return {String}\n\t */\n\tsubstring(start, end) {\n\t\treturn this.string.slice(start, end);\n\t}\n\n\t/**\n\t * Creates error object with current stream state\n\t * @param {String} message\n\t * @return {Error}\n\t */\n\terror(message) {\n\t\tconst err = new Error(`${message} at char ${this.pos + 1}`);\n\t\terr.originalMessage = message;\n\t\terr.pos = this.pos;\n\t\terr.string = this.string;\n\t\treturn err;\n\t}\n}\n\nexport default StreamReader;\n","module.exports = require(\"path\");","module.exports = require(\"fs\");","import StreamReader from '@emmetio/stream-reader';\nimport { eatPair, isAlpha, isNumber, isQuote, isSpace } from '@emmetio/stream-reader-utils';\n\n/**\n * Abstract container that contains nested nodes or other containers\n */\nclass Node {\n\tconstructor(type) {\n\t\tthis.type = type;\n\t\tthis.children = [];\n\t\tthis.parent = null;\n\t}\n\n\tget firstChild() {\n\t\treturn this.children[0];\n\t}\n\n\tget nextSibling() {\n\t\tconst ix = this.index();\n\t\treturn ix !== -1 ? this.parent.children[ix + 1] : null;\n\t}\n\n\tget previousSibling() {\n\t\tconst ix = this.index();\n\t\treturn ix !== -1 ? this.parent.children[ix - 1] : null;\n\t}\n\n\t/**\n\t * Returns current element’s index in parent list of child nodes\n\t * @return {Number}\n\t */\n\tindex() {\n\t\treturn this.parent ? this.parent.children.indexOf(this) : -1;\n\t}\n\n\t/**\n\t * Adds given node as a child\n\t * @param {Node} node\n\t * @return {Node} Current node\n\t */\n\tadd(node) {\n\t\tif (node) {\n\t\t\tnode.remove();\n\t\t\tthis.children.push(node);\n\t\t\tnode.parent = this;\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Removes current node from its parent\n\t * @return {Node} Current node\n\t */\n\tremove() {\n\t\tif (this.parent) {\n\t\t\tconst ix = this.index();\n\t\t\tif (ix !== -1) {\n\t\t\t\tthis.parent.children.splice(ix, 1);\n\t\t\t\tthis.parent = null;\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t}\n}\n\nclass Stylesheet extends Node {\n\tconstructor() {\n\t\tsuper('stylesheet');\n\t\tthis.comments = [];\n\t}\n\n\t/**\n\t * Returns node’s start position in stream\n\t * @return {*}\n\t */\n\tget start() {\n\t\tconst node = this.firstChild;\n\t\treturn node && node.start;\n\t}\n\n\t/**\n\t * Returns node’s end position in stream\n\t * @return {*}\n\t */\n\tget end() {\n\t\tconst node = this.children[this.children.length - 1];\n\t\treturn node && node.end;\n\t}\n\n\t/**\n\t * Adds comment token into a list.\n\t * This somewhat awkward feature is required to properly detect comment\n\t * ranges. Specifically, in Atom: it’s API provides scopes limited to current\n\t * line only\n\t * @param {Token} token\n\t */\n\taddComment(token) {\n\t\tthis.comments.push(token);\n\t}\n}\n\n/**\n * Removes tokens that matches given criteria from start and end of given list\n * @param  {Token[]} tokens\n * @return {Token[]}\n */\nfunction trimTokens(tokens) {\n\ttokens = tokens.slice();\n\tlet len;\n\twhile (len !== tokens.length) {\n\t\tlen = tokens.length;\n\t\tif (isFormattingToken(tokens[0])) {\n\t\t\ttokens.shift();\n\t\t}\n\n\t\tif (isFormattingToken(last(tokens))) {\n\t\t\ttokens.pop();\n\t\t}\n\t}\n\n\treturn tokens;\n}\n\n/**\n * Trims formatting tokens (whitespace and comments) from the beginning and end\n * of given token list\n * @param  {Token[]} tokens\n * @return {Token[]}\n */\nfunction trimFormatting(tokens) {\n\treturn trimTokens(tokens, isFormattingToken);\n}\n\n/**\n * Check if given token is a formatting one (whitespace or comment)\n * @param  {Token}  token\n * @return {Boolean}\n */\nfunction isFormattingToken(token) {\n\tconst type = token && token.type;\n\treturn type === 'whitespace' || type === 'comment';\n}\n\n/**\n * Consumes string char-by-char from given stream\n * @param  {StreamReader} stream\n * @param  {String} string\n * @return {Boolean} Returns `true` if string was completely consumed\n */\nfunction eatString(stream, string) {\n\tconst start = stream.pos;\n\n\tfor (let i = 0, il = string.length; i < il; i++) {\n\t\tif (!stream.eat(string.charCodeAt(i))) {\n\t\t\tstream.pos = start;\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction consume(stream, match) {\n\tconst start = stream.pos;\n\tif (stream.eat(match)) {\n\t\tstream.start = start;\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\nfunction consumeWhile(stream, match) {\n\tconst start = stream.pos;\n\tif (stream.eatWhile(match)) {\n\t\tstream.start = start;\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\nfunction last(arr) {\n\treturn arr[arr.length - 1];\n}\n\nfunction valueOf(token) {\n\treturn token && token.valueOf();\n}\n\n/**\n * A structure describing text fragment in content stream. It may contain\n * other sub-fragments (also tokens) that represent current fragments’ logical\n * parts\n */\nclass Token {\n\t/**\n\t * @param {StreamReader} stream\n\t * @param {String}       type    Token type\n\t * @param {Object}       [start] Tokens’ start position in `stream`\n\t * @param {Object}       [end]   Tokens’ end position in `stream`\n\t */\n\tconstructor(stream, type, start, end) {\n\t\tthis.stream = stream;\n\t\tthis.start = start != null ? start : stream.start;\n\t\tthis.end = end != null ? end : stream.pos;\n\t\tthis.type = type;\n\n\t\tthis._props = null;\n\t\tthis._value = null;\n\t\tthis._items = null;\n\t}\n\n\tget size() {\n\t\treturn this._items ? this._items.length : 0;\n\t}\n\n\tget items() {\n\t\treturn this._items;\n\t}\n\n\tclone(start, end) {\n\t\treturn new this.constructor(this.stream, this.type,\n\t\t\tstart != null ? start : this.start,\n\t\t\tend != null ? end : this.end);\n\t}\n\n\tadd(item) {\n\t\tif (Array.isArray(item)) {\n\t\t\tfor (let i = 0, il = item.length; i < il; i++) {\n\t\t\t\tthis.add(item[i]);\n\t\t\t}\n\t\t} else if (item) {\n\t\t\tif (!this._items) {\n\t\t\t\tthis._items = [item];\n\t\t\t} else {\n\t\t\t\tthis._items.push(item);\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tremove(item) {\n\t\tif (this._items) {\n\t\t\tconst ix = this._items.indexOf(item);\n\t\t\tif (ix !== -1 ) {\n\t\t\t\tthis._items.splice(ix, 1);\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t}\n\n\titem(i) {\n\t\tconst size = this.size;\n\t\treturn this._items && this._items[(size + i) % size];\n\t}\n\n\tlimit() {\n\t\treturn this.stream.limit(this.start, this.end);\n\t}\n\n\tslice(from, to) {\n\t\tconst token = this.clone();\n\t\tconst items = this._items && this._items.slice(from, to);\n\t\tif (items && items.length) {\n\t\t\ttoken.start = items[0].start;\n\t\t\ttoken.end = items[items.length - 1].end;\n\t\t\ttoken.add(items);\n\t\t} else if (items) {\n\t\t\t// Empty token\n\t\t\ttoken.start = token.end;\n\t\t}\n\n\t\treturn token;\n\t}\n\n\tproperty(name, value) {\n\t\tif (typeof value !== 'undefined') {\n\t\t\t// set property value\n\t\t\tif (!this._props) {\n\t\t\t\tthis._props = {};\n\t\t\t}\n\n\t\t\tthis._props[name] = value;\n\t\t}\n\n\t\treturn this._props && this._props[name];\n\t}\n\n\t/**\n\t * Returns token textual representation\n\t * @return {String}\n\t */\n\ttoString() {\n\t\treturn `${this.valueOf()} [${this.start}, ${this.end}] (${this.type})`;\n\t}\n\n\tvalueOf() {\n\t\tif (this._value === null) {\n\t\t\tthis._value = this.stream.substring(this.start, this.end);\n\t\t}\n\n\t\treturn this._value;\n\t}\n}\n\nconst COMMA           = 44;  // ,\nconst PROP_DELIMITER$1  = 58;  // :\nconst PROP_TERMINATOR$1 = 59;  // ;\nconst RULE_START$1      = 123; // {\nconst RULE_END$1        = 125; // }\n\nconst types = new Map()\n\t.set(COMMA, 'comma')\n\t.set(PROP_DELIMITER$1, 'propertyDelimiter')\n\t.set(PROP_TERMINATOR$1, 'propertyTerminator')\n\t.set(RULE_START$1, 'ruleStart')\n\t.set(RULE_END$1, 'ruleEnd');\n\n/**\n * Consumes separator token from given string\n */\nfunction separator(stream) {\n\tif (isSeparator(stream.peek())) {\n\t\tconst start = stream.pos;\n\t\tconst type = types.get(stream.next());\n\t\tconst token = new Token(stream, 'separator', start);\n\n\t\ttoken.property('type', type);\n\t\treturn token;\n\t}\n}\n\n\n\nfunction isSeparator(code) {\n\treturn code === COMMA\n\t\t|| code === PROP_DELIMITER$1 || code === PROP_TERMINATOR$1\n\t\t|| code === RULE_START$1 || code === RULE_END$1;\n}\n\nconst ARGUMENTS_START = 40;  // (\nconst ARGUMENTS_END   = 41;  // )\n\nvar args = function(stream, tokenConsumer) {\n\tif (stream.peek() === ARGUMENTS_START) {\n\t\tconst start = stream.pos;\n\t\tstream.next();\n\n\t\tconst tokens = [];\n\t\tlet t;\n\t\t// in LESS, it’s possible to separate arguments list either by `;` or `,`.\n\t\t// In first case, we should keep comma-separated item as a single argument\n\t\tlet usePropTerminator = false;\n\n\t\twhile (!stream.eof()) {\n\t\t\tif (isUnexpectedTerminator(stream.peek()) || stream.eat(ARGUMENTS_END)) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tt = tokenConsumer(stream);\n\t\t\tif (!t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (isSemicolonSeparator(t)) {\n\t\t\t\tusePropTerminator = true;\n\t\t\t}\n\n\t\t\ttokens.push(t);\n\t\t}\n\n\t\tstream.start = start;\n\t\treturn createArgumentList(stream, tokens, usePropTerminator);\n\t}\n};\n\nfunction isUnexpectedTerminator(code) {\n\treturn code === RULE_START$1 || code === RULE_END$1;\n}\n\nfunction createArgumentList(stream, tokens, usePropTerminator) {\n\tconst argsToken = new Token(stream, 'arguments');\n\tconst isSeparator = usePropTerminator ? isSemicolonSeparator : isCommaSeparator;\n\tlet arg = [];\n\n\tfor (let i = 0, il = tokens.length, token; i < il; i++) {\n\t\ttoken = tokens[i];\n\t\tif (isSeparator(token)) {\n\t\t\targsToken.add(createArgument(stream, arg) || createEmptyArgument(stream, token.start));\n\t\t\targ.length = 0;\n\t\t} else {\n\t\t\targ.push(token);\n\t\t}\n\t}\n\n\tif (arg.length) {\n\t\targsToken.add(createArgument(stream, arg));\n\t}\n\n\treturn argsToken;\n}\n\nfunction createArgument(stream, tokens) {\n\ttokens = trimFormatting(tokens);\n\n\tif (tokens.length) {\n\t\tconst arg = new Token(stream, 'argument', tokens[0].start, last(tokens).end);\n\n\t\tfor (let i = 0; i < tokens.length; i++) {\n\t\t\targ.add(tokens[i]);\n\t\t}\n\n\t\treturn arg;\n\t}\n}\n\nfunction createEmptyArgument(stream, pos) {\n\tconst token = new Token(stream, 'argument', pos, pos);\n\ttoken.property('empty', true);\n\treturn token;\n}\n\nfunction isCommaSeparator(token) {\n\treturn token.property('type') === 'comma';\n}\n\nfunction isSemicolonSeparator(token) {\n\treturn token.property('type') === 'propertyTerminator';\n}\n\nconst HYPHEN     = 45;\nconst UNDERSCORE = 95;\n\nfunction ident(stream) {\n\treturn eatIdent(stream) && new Token(stream, 'ident');\n}\n\nfunction eatIdent(stream) {\n\tconst start = stream.pos;\n\n\tstream.eat(HYPHEN);\n\tif (stream.eat(isIdentStart)) {\n\t\tstream.eatWhile(isIdent);\n\t\tstream.start = start;\n\t\treturn true;\n\t}\n\n\tstream.pos = start;\n\treturn false;\n}\n\nfunction isIdentStart(code) {\n\treturn code === UNDERSCORE || code === HYPHEN || isAlpha(code) || code >= 128;\n}\n\nfunction isIdent(code) {\n\treturn isNumber(code) || isIdentStart(code);\n}\n\nfunction prefixed(stream, tokenType, prefix, body, allowEmptyBody) {\n\tconst start = stream.pos;\n\n\tif (stream.eat(prefix)) {\n\t\tconst bodyToken = body(stream, start);\n\t\tif (bodyToken || allowEmptyBody) {\n\t\t\tstream.start = start;\n\t\t\treturn new Token(stream, tokenType, start).add(bodyToken);\n\t\t}\n\t}\n\n\tstream.pos = start;\n}\n\nconst AT = 64; // @\n\n/**\n * Consumes at-keyword from given stream\n */\nfunction atKeyword(stream) {\n\treturn prefixed(stream, 'at-keyword', AT, ident);\n}\n\nconst HASH = 35; // #\nconst AT$1   = 64; // @\n\n/**\n * Consumes interpolation token, e.g. `#{expression}`\n * @param  {StreamReader} stream\n * @param  {Function} tokenConsumer\n * @return {Token}\n */\nfunction interpolation(stream, tokenConsumer) {\n\tconst start = stream.pos;\n\ttokenConsumer = tokenConsumer || defaultTokenConsumer;\n\n\tif ((stream.eat(HASH) || stream.eat(AT$1)) && stream.eat(RULE_START$1)) {\n\t\tconst container = new Token(stream, 'interpolation', start);\n\t\tlet stack = 1, token;\n\n\t\twhile (!stream.eof()) {\n\t\t\tif (stream.eat(RULE_START$1)) {\n\t\t\t\tstack++;\n\t\t\t} else if (stream.eat(RULE_END$1)) {\n\t\t\t\tstack--;\n\t\t\t\tif (!stack) {\n\t\t\t\t\tcontainer.end = stream.pos;\n\t\t\t\t\treturn container;\n\t\t\t\t}\n\t\t\t} else if (token = tokenConsumer(stream)) {\n\t\t\t\tcontainer.add(token);\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tstream.pos = start;\n}\n\nfunction eatInterpolation(stream) {\n\tconst start = stream.pos;\n\n\tif ((stream.eat(HASH) || stream.eat(AT$1)) && eatPair(stream, RULE_START$1, RULE_END$1)) {\n\t\tstream.start = start;\n\t\treturn true;\n\t}\n\n\tstream.pos = start;\n\treturn false;\n}\n\nfunction defaultTokenConsumer(stream) {\n\tconst start = stream.pos;\n\n\twhile (!stream.eof()) {\n\t\tif (stream.peek() === RULE_END$1) {\n\t\t\tbreak;\n\t\t}\n\n\t\teatString$1(stream) || stream.next();\n\t}\n\n\tif (start !== stream.pos) {\n\t\treturn new Token(stream, 'expression', start);\n\t}\n}\n\n/**\n * Consumes quoted string from current string and returns token with consumed\n * data or `null`, if string wasn’t consumed\n * @param  {StreamReader} stream\n * @return {StringToken}\n */\nfunction string(stream) {\n\treturn eatString$1(stream, true);\n}\n\nfunction eatString$1(stream, asToken) {\n\tlet ch = stream.peek(), pos, tokens, token;\n\n\tif (isQuote(ch)) {\n\t\tstream.start = stream.pos;\n\t\tstream.next();\n\t\tconst quote = ch;\n\t\tconst valueStart = stream.pos;\n\n\t\twhile (!stream.eof()) {\n\t\t\tpos = stream.pos;\n\t\t\tif (stream.eat(quote) || stream.eat(isNewline)) {\n\t\t\t\t// found end of string or newline without preceding '\\',\n\t\t\t\t// which is not allowed (don’t throw error, for now)\n\t\t\t\tbreak;\n\t\t\t} else if (stream.eat(92 /* \\ */)) {\n\t\t\t\t// backslash allows newline in string\n\t\t\t\tstream.eat(isNewline);\n\t\t\t} else if (asToken && (token = interpolation(stream))) {\n\t\t\t\tif (!tokens) {\n\t\t\t\t\ttokens = [token];\n\t\t\t\t} else {\n\t\t\t\t\ttokens.push(token);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstream.next();\n\t\t}\n\n\t\t// Either reached EOF or explicitly stopped at string end\n\t\t// NB use extra `asToken` param to return boolean instead of token to reduce\n\t\t// memory allocations and improve performance\n\t\tif (asToken) {\n\t\t\tconst token = new Token(stream, 'string');\n\t\t\tconst inner = new Token(stream, 'unquoted', valueStart, pos);\n\t\t\tinner.add(tokens);\n\t\t\ttoken.add(inner);\n\t\t\ttoken.property('quote', quote);\n\t\t\treturn token;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\nfunction isNewline(code) {\n\treturn code === 10  /* LF */ || code === 13 /* CR */;\n}\n\nconst ASTERISK = 42;\nconst SLASH    = 47;\n\n/**\n * Consumes comment from given stream: either multi-line or single-line\n * @param  {StreamReader} stream\n * @return {CommentToken}\n */\nvar comment = function(stream) {\n\treturn singleLineComment(stream) || multiLineComment(stream);\n};\n\nfunction singleLineComment(stream) {\n\tif (eatSingleLineComment(stream)) {\n\t\tconst token = new Token(stream, 'comment');\n\t\ttoken.property('type', 'single-line');\n\t\treturn token;\n\t}\n}\n\nfunction multiLineComment(stream) {\n\tif (eatMultiLineComment(stream)) {\n\t\tconst token = new Token(stream, 'comment');\n\t\ttoken.property('type', 'multiline');\n\t\treturn token;\n\t}\n}\n\nfunction eatComment(stream) {\n\treturn eatSingleLineComment(stream) || eatMultiLineComment(stream);\n}\n\nfunction eatSingleLineComment(stream) {\n\tconst start = stream.pos;\n\n\tif (stream.eat(SLASH) && stream.eat(SLASH)) {\n\t\t// single-line comment, consume till the end of line\n\t\tstream.start = start;\n\t\twhile (!stream.eof()) {\n\t\t\tif (isLineBreak(stream.next())) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tstream.pos = start;\n\treturn false;\n}\n\nfunction eatMultiLineComment(stream) {\n\tconst start = stream.pos;\n\n\tif (stream.eat(SLASH) && stream.eat(ASTERISK)) {\n\t\twhile (!stream.eof()) {\n\t\t\tif (stream.next() === ASTERISK && stream.eat(SLASH)) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tstream.start = start;\n\t\treturn true;\n\t}\n\n\tstream.pos = start;\n\treturn false;\n}\n\nfunction isLineBreak(code) {\n\treturn code === 10 /* LF */ || code === 13 /* CR */;\n}\n\n/**\n * Consumes white-space tokens from given stream\n */\nfunction whitespace(stream) {\n\treturn eatWhitespace(stream) && new Token(stream, 'whitespace');\n}\n\nfunction eatWhitespace(stream) {\n\treturn consumeWhile(stream, isSpace);\n}\n\nconst ATTR_START = 91; // [\nconst ATTR_END   = 93; // ]\n\n/**\n * Consumes attribute from given string, e.g. value between [ and ]\n * @param  {StreamReader} stream\n * @return {AttributeToken}\n */\nfunction eatAttribuite(stream) {\n\tconst start = stream.pos;\n\n\tif (stream.eat(ATTR_START)) {\n\t\tskip(stream);\n\t\tconst name = ident(stream);\n\n\t\tskip(stream);\n\t\tconst op = operator(stream);\n\n\t\tskip(stream);\n\t\tconst value = string(stream) || ident(stream);\n\n\t\tskip(stream);\n\t\tstream.eat(ATTR_END);\n\n\t\treturn new Token(stream, 'attribute', start).add(name).add(op).add(value);\n\t}\n}\n\nfunction skip(stream) {\n\twhile (!stream.eof()) {\n\t\tif (!eatWhitespace(stream) && !eatComment(stream)) {\n\t\t\treturn true;\n\t\t}\n\t}\n}\n\nfunction operator(stream) {\n\treturn consumeWhile(stream, isOperator) && new Token(stream, 'operator');\n}\n\nfunction isOperator(code) {\n\treturn code === 126 /* ~ */\n\t\t|| code === 124 /* | */\n\t\t|| code === 94  /* ^ */\n\t\t|| code === 36  /* $ */\n\t\t|| code === 42  /* * */\n\t\t|| code === 61; /* = */\n}\n\nconst BACKTICK = 96; // `\n\n/**\n * Consumes backtick token, e.g. `...`\n * @param  {StreamReader} stream\n * @param  {Function} tokenConsumer\n * @return {Token}\n */\nfunction backtick(stream) {\n\tif (eatBacktick(stream)) {\n\t\treturn new Token(stream, 'backtick');\n\t}\n}\n\nfunction eatBacktick(stream) {\n\tconst start = stream.pos;\n\n\tif (eatPair(stream, BACKTICK, BACKTICK)) {\n\t\tstream.start = start;\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\nconst CLASS = 46; // .\n\n/**\n * Consumes class fragment from given stream, e.g. `.foo`\n * @param  {StreamReader} stream\n * @return {ClassToken}\n */\nfunction className(stream) {\n\treturn prefixed(stream, 'class', CLASS, ident);\n}\n\nconst ADJACENT_SIBLING = 43;  // +\nconst GENERAL_SIBLING  = 126; // ~\nconst CHILD            = 62;  // >\nconst NESTING          = 38;  // &\n\nconst types$1 = {\n\t[ADJACENT_SIBLING]: 'adjacentSibling',\n\t[GENERAL_SIBLING]: 'generalSibling',\n\t[CHILD]: 'child',\n\t[NESTING]: 'nesting'\n};\n\n/**\n * Consumes combinator token from given string\n */\nvar combinator = function(stream) {\n\tif (isCombinator(stream.peek())) {\n\t\tconst start = stream.pos;\n\t\tconst type = types$1[stream.next()];\n\t\tconst token = new Token(stream, 'combinator', start);\n\n\t\ttoken.property('type', type);\n\t\treturn token;\n\t}\n};\n\n\n\nfunction isCombinator(code) {\n\treturn code === ADJACENT_SIBLING || code === GENERAL_SIBLING\n\t\t|| code === NESTING || code === CHILD;\n}\n\nconst HASH$1 = 35;\n\nfunction hash(stream) {\n\treturn prefixed(stream, 'hash', HASH$1, hashValue, true);\n}\n\n\n\nfunction hashValue(stream) {\n\tif (eatHashValue(stream)) {\n\t\treturn new Token(stream, 'hash-value');\n\t}\n}\n\nfunction eatHashValue(stream) {\n\treturn consumeWhile(stream, isHashValue);\n}\n\nfunction isHashValue(code) {\n\treturn isNumber(code) || isAlpha(code, 65 /* A */, 70 /* F */)\n\t\t|| code === 95 /* _ */ || code === 45 /* - */\n\t\t|| code > 128; /* non-ASCII */\n}\n\nconst ID = 35; // #\n\n/**\n * Consumes id fragment from given stream, e.g. `#foo`\n * @param  {StreamReader} stream\n * @return {Token}\n */\nfunction id(stream) {\n\treturn prefixed(stream, 'id', ID, ident);\n}\n\nconst IMPORTANT = 33; // !\n\n/**\n * Consumes !important token\n * @param  {StreamReader} stream\n * @return {Token}\n */\nfunction important(stream) {\n\treturn prefixed(stream, 'important', IMPORTANT, ident);\n}\n\nconst DOT = 46; // .\n\n/**\n * Consumes number from given string, e.g. `10px`\n * @param  {StreamReader} stream\n * @return {NumberToken}\n */\nfunction number(stream) {\n\tif (eatNumericPart(stream)) {\n\t\tconst start = stream.start;\n\t\tconst num = new Token(stream, 'value');\n\t\tconst unit = eatUnitPart(stream) ? new Token(stream, 'unit') : null;\n\n\t\treturn new Token(stream, 'number', start).add(num).add(unit);\n\t}\n}\n\n\n\nfunction eatNumericPart(stream) {\n\tconst start = stream.pos;\n\n\tstream.eat(isOperator$1);\n\tif (stream.eatWhile(isNumber)) {\n\t\tstream.start = start;\n\t\tconst decimalEnd = stream.pos;\n\n\t\tif (!(stream.eat(DOT) && stream.eatWhile(isNumber))) {\n\t\t\tstream.pos = decimalEnd;\n\t\t}\n\n\t\treturn true;\n\t} else if (stream.eat(DOT) && stream.eatWhile(isNumber)) {\n\t\tstream.start = start;\n\t\treturn true;\n\t}\n\n\t// TODO eat exponent part\n\n\tstream.pos = start;\n\treturn false;\n}\n\nfunction eatUnitPart(stream) {\n\treturn eatIdent(stream) || eatPercent(stream);\n}\n\nfunction eatPercent(stream) {\n\treturn consume(stream, 37 /* % */);\n}\n\nfunction isOperator$1(code) {\n\treturn code === 45 /* - */ || code === 43 /* + */;\n}\n\nconst NOT          = 33; // !\nconst MULTIPLY     = 42; // *\nconst PLUS         = 43; // +\nconst MINUS        = 45; // -\nconst DIVIDE       = 47; // /\nconst LESS_THAN    = 60; // <\nconst EQUALS       = 61; // =\nconst GREATER_THAN = 62; // <\n\nfunction operator$1(stream) {\n\treturn eatOperator(stream) && new Token(stream, 'operator');\n}\n\nfunction eatOperator(stream) {\n\tif (consume(stream, isEquality)) {\n\t\tstream.eatWhile(EQUALS);\n\t\treturn true;\n\t} else if (consume(stream, isOperator$2)) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\nfunction isEquality(code) {\n\treturn code === NOT || code === LESS_THAN || code === EQUALS || code === GREATER_THAN;\n}\n\nfunction isOperator$2(code) {\n\treturn code === MULTIPLY || code === PLUS || code === MINUS || code === DIVIDE\n\t\t|| isEquality(code);\n}\n\nconst PSEUDO = 58; // :\n\n/**\n * Consumes pseudo-selector from given stream\n */\nvar pseudo = function(stream) {\n\tconst start = stream.pos;\n\n\tif (stream.eatWhile(PSEUDO)) {\n\t\tconst name = ident(stream);\n\t\tif (name) {\n\t\t\treturn new Token(stream, 'pseudo', start).add(name);\n\t\t}\n\t}\n\n\tstream.pos = start;\n};\n\n/**\n * Consumes unquoted value from given stream\n * @param  {StreamReader} stream\n * @return {UnquotedToken}\n */\nvar unquoted = function(stream) {\n\treturn eatUnquoted(stream) && new Token(stream, 'unquoted');\n};\n\nfunction eatUnquoted(stream) {\n\treturn consumeWhile(stream, isUnquoted);\n}\n\nfunction isUnquoted(code) {\n\treturn !isNaN(code) && !isQuote(code) && !isSpace(code)\n\t\t&& code !== 40 /* ( */ && code !== 41 /* ) */ && code !== 92 /* \\ */\n\t\t&& !isNonPrintable(code);\n}\n\nfunction isNonPrintable(code) {\n\treturn (code >= 0 && code <= 8) || code === 11\n\t|| (code >= 14 && code <= 31) || code === 127;\n}\n\n/**\n * Consumes URL token from given stream\n * @param  {StreamReader} stream\n * @return {Token}\n */\nfunction url(stream) {\n\tconst start = stream.pos;\n\n\tif (eatString(stream, 'url(')) {\n\t\teatWhitespace(stream);\n\t\tconst value = string(stream) || unquoted(stream);\n\t\teatWhitespace(stream);\n\t\tstream.eat(41); // )\n\n\t\treturn new Token(stream, 'url', start).add(value);\n\t}\n\n\tstream.pos = start;\n}\n\nfunction eatUrl(stream) {\n\tconst start = stream.pos;\n\n\tif (eatString(stream, 'url(')) {\n\t\teatWhitespace(stream);\n\t\teatString$1(stream) || eatUnquoted(stream);\n\t\teatWhitespace(stream);\n\t\tstream.eat(41); // )\n\t\tstream.start = start;\n\n\t\treturn true;\n\t}\n\n\tstream.pos = start;\n\treturn false;\n}\n\nconst VARIABLE = 36; // $\n\n/**\n * Consumes SCSS variable from given stream\n */\nfunction variable(stream) {\n\treturn prefixed(stream, 'variable', VARIABLE, variableName);\n}\n\n\n\nfunction variableName(stream) {\n\tif (eatVariableName(stream)) {\n\t\treturn new Token(stream, 'name');\n\t}\n}\n\nfunction eatVariableName(stream) {\n\treturn consumeWhile(stream, isVariableName);\n}\n\nfunction isVariableName(code) {\n\treturn code === VARIABLE || isIdent(code);\n}\n\n/**\n * Group tokens by commonly used context\n */\n\nfunction consumeToken(stream) {\n\tconst _token = any(stream) || args(stream, consumeToken);\n\tif (_token && _token.type === 'ident') {\n\t\tconst _args = args(stream, consumeToken);\n\t\tif (_args) {\n\t\t\t// An identifier followed by arguments – function call\n\t\t\treturn new Token(stream, 'function', _token.start, _args.end).add(_token).add(_args);\n\t\t}\n\t}\n\n\treturn _token || unknown(stream);\n}\n\nfunction any(stream) {\n\treturn formatting(stream) || url(stream) || selector(stream) || value(stream)\n\t\t|| separator(stream);\n}\n\nfunction selector(stream) {\n\treturn interpolation(stream) || backtick(stream) || ident(stream) || atKeyword(stream)\n\t\t|| className(stream) || id(stream) || pseudo(stream) || eatAttribuite(stream)\n\t\t|| combinator(stream);\n}\n\nfunction value(stream) {\n\treturn url(stream) || string(stream) || interpolation(stream) || backtick(stream) \n\t\t|| number(stream) || hash(stream) || keyword(stream) || important(stream) \n\t\t|| operator$1(stream);\n}\n\nfunction keyword(stream) {\n\treturn backtick(stream) || variable(stream) || atKeyword(stream) || ident(stream);\n}\n\nfunction formatting(stream) {\n\treturn comment(stream) || whitespace(stream);\n}\n\nfunction unknown(stream) {\n\tstream.start = stream.pos;\n\tconst ch = stream.next();\n\tif (ch != null) {\n\t\treturn new Token(stream, 'unknown');\n\t}\n}\n\n/**\n * Parses CSS rule selector\n * @param  {String|StreamReader} source\n * @return {Token[]}\n */\nfunction parseSelector(source) {\n\treturn parseList(source, 'selector');\n}\n\n/**\n * Parses CSS property name. Mostly used for LESS where\n * property-like entry might be used as a mixin call\n * @param {String|StreamReader} source\n * @return {Token}\n */\nfunction parsePropertyName(source) {\n\tconst stream = typeof source === 'string' ? new StreamReader(source) : source;\n\tconst items = [];\n\n\twhile (!stream.eof()) {\n\t\titems.push(consumeToken(stream));\n\t}\n\n\tlet token;\n\tif (items.length === 1) {\n\t\ttoken = items[0];\n\t} else {\n\t\ttoken = new Token(stream, 'property-name', stream.start, stream.end);\n\t\tfor (let i = 0, il = items.length; i < il; i++) {\n\t\t\ttoken.add(items[i]);\n\t\t}\n\t}\n\n\treturn token;\n}\n\n/**\n * Parses CSS property value\n * @param  {String|StreamReader} source\n * @return {Token[]}\n */\nfunction parsePropertyValue(source) {\n\treturn parseList(source);\n}\n\n/**\n * Parses @media CSS rule expression\n * @param  {String|StreamReader} source\n * @return {Token[]}\n */\nfunction parseMediaExpression(source) {\n\treturn parseList(source);\n}\n\n/**\n * Parses given source into a set of tokens, separated by comma. Each token contains\n * parsed sub-items as independent tokens and so on. Mostly used to parse\n * selectors and property values\n * @param  {String|StreamReader} source     Source to parse\n * @param  {String}             [tokenType] Type of first-level tokens.\n *                                          Default is `item`\n * @return {Token[]}\n */\nfunction parseList(source, tokenType) {\n\ttokenType = tokenType || 'item';\n\tconst stream = typeof source === 'string' ? new StreamReader(source) : source;\n\tconst items = [];\n\tconst fragments = [];\n\tconst flush = () => {\n\t\tconst clean = trimFormatting(fragments);\n\n\t\tif (clean.length) {\n\t\t\tconst item = new Token(stream, tokenType, clean[0].start, last(clean).end);\n\t\t\tfor (let i = 0; i < clean.length; i++) {\n\t\t\t\titem.add(clean[i]);\n\t\t\t}\n\t\t\titems.push(item);\n\t\t}\n\n\t\tfragments.length = 0;\n\t};\n\n\tlet token;\n\twhile (!stream.eof()) {\n\t\tif (stream.eat(44 /* , */)) {\n\t\t\tflush();\n\t\t} else if (token = consumeToken(stream)) {\n\t\t\tif (token.type !== 'comment') {\n\t\t\t\tfragments.push(token);\n\t\t\t}\n\t\t} else {\n\t\t\tthrow stream.error('Unexpected character');\n\t\t}\n\t}\n\n\tflush();\n\treturn items;\n}\n\n/**\n * Creates CSS rule from given tokens\n * @param  {StreamReader} stream\n * @param  {Token[]} tokens\n * @param  {Token} [content]\n * @return {Rule}\n */\nfunction createRule(stream, tokens, contentStart, contentEnd) {\n\tif (!tokens.length) {\n\t\treturn null;\n\t}\n\n\tconst name = tokens[0];\n\tname.end = last(tokens).end;\n\n\treturn new Rule(stream, name, contentStart, contentEnd);\n}\n\n/**\n * Represents CSS rule\n * @type {Node}\n */\nclass Rule extends Node {\n\t/**\n\t * @param {StreamReader} stream\n\t * @param {Token} name         Rule’s name token\n\t * @param {Token} contentStart Rule’s content start token\n\t * @param {Token} [contentEnd] Rule’s content end token\n\t */\n\tconstructor(stream, name, contentStart, contentEnd) {\n\t\tsuper('rule');\n\t\tthis.stream = stream;\n\t\tthis.selectorToken = name;\n\t\tthis.contentStartToken = contentStart;\n\t\tthis.contentEndToken = contentEnd || contentStart;\n\t\tthis._parsedSelector = null;\n\t}\n\n\t/**\n\t * Returns rule selector\n\t * @return {String}\n\t */\n\tget selector() {\n\t\treturn valueOf(this.selectorToken);\n\t}\n\n\tget parsedSelector() {\n\t\tif (!this._parsedSelector) {\n\t\t\tthis._parsedSelector = parseSelector(this.selectorToken.limit());\n\t\t}\n\n\t\treturn this._parsedSelector;\n\t}\n\n\t/**\n\t * Returns node’s start position in stream\n\t * @return {*}\n\t */\n\tget start() {\n\t\treturn this.selectorToken && this.selectorToken.start;\n\t}\n\n\t/**\n\t * Returns node’s end position in stream\n\t * @return {*}\n\t */\n\tget end() {\n\t\tconst token = this.contentEndToken || this.contentStartToken || this.nameToken;\n\t\treturn token && token.end;\n\t}\n}\n\n/**\n * Creates CSS rule from given tokens\n * @param  {StreamReader} stream\n * @param  {Token[]} tokens\n * @param  {Token} [content]\n * @return {Rule}\n */\nfunction createAtRule(stream, tokens, contentStart, contentEnd) {\n\tif (!tokens.length) {\n\t\treturn null;\n\t}\n\n\tlet ix = 0, expression;\n\tconst name = tokens[ix++];\n    \n\tif (ix < tokens.length) {\n\t\texpression = tokens[ix++];\n\t\texpression.type = 'expression';\n\t\texpression.end = last(tokens).end;\n\t} else {\n\t\texpression = new Token(stream, 'expression', name.end, name.end);\n\t}\n\n\treturn new AtRule(stream, name, expression, contentStart, contentEnd);\n}\n\nclass AtRule extends Node {\n\tconstructor(stream, name, expression, contentStart, contentEnd) {\n\t\tsuper('at-rule');\n\t\tthis.stream = stream;\n\t\tthis.nameToken = name;\n\t\tthis.expressionToken = expression;\n\t\tthis.contentStartToken = contentStart;\n\t\tthis.contentEndToken = contentEnd || contentStart;\n\t\tthis._parsedExpression = null;\n\t}\n\n\t/**\n\t * Returns at-rule name\n\t * @return {String}\n\t */\n\tget name() {\n\t\treturn valueOf(this.nameToken && this.nameToken.item(0));\n\t}\n\n\tget expression() {\n\t\treturn valueOf(this.expressionToken);\n\t}\n\n\tget parsedExpression() {\n\t\tif (!this._parsedExpression) {\n\t\t\tthis._parsedExpression = parseMediaExpression(this.expressionToken.limit());\n\t\t}\n\n\t\treturn this._parsedExpression;\n\t}\n\n\t/**\n\t * Returns node’s start position in stream\n\t * @return {*}\n\t */\n\tget start() {\n\t\treturn this.nameToken && this.nameToken.start;\n\t}\n\n\t/**\n\t * Returns node’s end position in stream\n\t * @return {*}\n\t */\n\tget end() {\n\t\tconst token = this.contentEndToken || this.contentStartToken || this.nameToken;\n\t\treturn token && token.end;\n\t}\n}\n\n/**\n * Factory method that creates property node from given tokens\n * @param  {StreamReader} stream\n * @param  {Token[]}      tokens\n * @param  {Token}        terminator\n * @return {Property}\n */\nfunction createProperty(stream, tokens, terminator) {\n\t// NB in LESS, fragmented properties without value like `.foo.bar;` must be\n\t// treated like mixin call\n\tif (!tokens.length) {\n\t\treturn null;\n\t}\n\n\tlet separator, value, ix = 0;\n\tconst name = tokens[ix++];\n\n\tif (ix < tokens.length) {\n\t\tvalue = tokens[ix++];\n\t\tvalue.type = 'value';\n\t\tvalue.end = last(tokens).end;\n\t}\n\n\tif (name && value) {\n\t\tseparator = new Token(stream, 'separator', name.end, value.start);\n\t}\n\n\treturn new Property(\n\t\tstream,\n\t\tname,\n\t\tvalue,\n\t\tseparator,\n\t\tterminator\n\t);\n}\n\nclass Property extends Node {\n\tconstructor(stream, name, value, separator, terminator) {\n\t\tsuper('property');\n\t\tthis.stream = stream;\n\t\tthis.nameToken = name;\n\t\tthis.valueToken = value;\n\t\tthis._parsedName = null;\n\t\tthis._parsedValue = null;\n\n\t\tthis.separatorToken = separator;\n\t\tthis.terminatorToken = terminator;\n\t}\n\n\t/**\n\t * Property name\n\t * @return {String}\n\t */\n\tget name() {\n\t\treturn valueOf(this.nameToken);\n\t}\n\n\t/**\n\t * Returns parsed sub-tokens of current property name\n\t * @return {Token[]}\n\t */\n\tget parsedName() {\n\t\tif (!this._parsedName) {\n\t\t\tthis._parsedName = parsePropertyName(this.nameToken.limit());\n\t\t}\n\n\t\treturn this._parsedName;\n\t}\n\n\t/**\n\t * Property value\n\t * @return {String}\n\t */\n\tget value() {\n\t\treturn valueOf(this.valueToken);\n\t}\n\n\t/**\n\t * Parsed value parts: a list of tokens, separated by comma. Each token may\n\t * contains parsed sub-tokens and so on\n\t * @return {Token[]}\n\t */\n\tget parsedValue() {\n\t\tif (!this._parsedValue) {\n\t\t\tthis._parsedValue = parsePropertyValue(this.valueToken.limit());\n\t\t}\n\n\t\treturn this._parsedValue;\n\t}\n\n\tget separator() {\n\t\treturn valueOf(this.separatorToken);\n\t}\n\n\tget terminator() {\n\t\treturn valueOf(this.terminatorToken);\n\t}\n\n\tget start() {\n\t\tconst token = this.nameToken || this.separatorToken || this.valueToken\n\t\t\t|| this.terminatorToken;\n\t\treturn token && token.start;\n\t}\n\n\tget end() {\n\t\tconst token = this.terminatorToken || this.valueToken\n\t\t\t|| this.separatorToken || this.nameToken;\n\t\treturn token && token.end;\n\t}\n}\n\nconst LBRACE          = 40;  // (\nconst RBRACE          = 41;  // )\nconst PROP_DELIMITER  = 58;  // :\nconst PROP_TERMINATOR = 59;  // ;\nconst RULE_START      = 123; // {\nconst RULE_END        = 125; // }\n\nfunction parseStylesheet(source) {\n\tconst stream = typeof source === 'string' ? new StreamReader(source) : source;\n\tconst root = new Stylesheet();\n\tlet ctx = root, child, accum, token;\n\tlet tokens = [];\n\tconst flush = () => {\n\t\tif (accum) {\n\t\t\ttokens.push(accum);\n\t\t\taccum = null;\n\t\t}\n\t};\n\n\twhile (!stream.eof()) {\n\t\tif (eatWhitespace(stream)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (token = comment(stream)) {\n\t\t\troot.addComment(token);\n\t\t\tcontinue;\n\t\t}\n\n\t\tstream.start = stream.pos;\n\n\t\tif (stream.eatWhile(PROP_DELIMITER)) {\n\t\t\t// Property delimiter can be either a real property delimiter or a\n\t\t\t// part of pseudo-selector.\n\t\t\tif (!tokens.length) {\n\t\t\t\tif (accum) {\n\t\t\t\t\t// No consumed tokens yet but pending token: most likely it’s\n\t\t\t\t\t// a CSS property\n\t\t\t\t\tflush();\n\t\t\t\t} else {\n\t\t\t\t\t// No consumend or accumulated token, seems like a start of\n\t\t\t\t\t// pseudo-selector, e.g. `::slotted`\n\t\t\t\t\taccum = new Token(stream, 'preparse');\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Skip delimiter if there are already consumend tokens: most likely\n\t\t\t// it’s a part of pseudo-selector\n\t\t} else if (stream.eat(PROP_TERMINATOR)) {\n\t\t\tflush();\n\t\t\tctx.add(createProperty(stream, tokens, new Token(stream, 'termintator')));\n\t\t\ttokens.length = 0;\n\t\t} else if (stream.eat(RULE_START)) {\n\t\t\tflush();\n\t\t\tif (tokens.length > 0) {\n\t\t\t\tchild = tokens[0].type === 'at-keyword'\n\t\t\t\t? createAtRule(stream, tokens, new Token(stream, 'body-start'))\n\t\t\t\t: createRule(stream, tokens, new Token(stream, 'body-start'));\n\t\t\t\tctx.add(child);\n\t\t\t\tctx = child;\n\t\t\t\ttokens.length = 0;\n\t\t\t}\n\t\t\t\n\t\t} else if (stream.eat(RULE_END)) {\n\t\t\tflush();\n\n\t\t\t// Finalize context section\n\t\t\tctx.add(createProperty(stream, tokens));\n\n\t\t\tif (ctx.type !== 'stylesheet') {\n\t\t\t\t// In case of invalid stylesheet with redundant `}`,\n\t\t\t\t// don’t modify root section.\n\t\t\t\tctx.contentEndToken = new Token(stream, 'body-end');\n\t\t\t\tctx = ctx.parent;\n\t\t\t}\n\n\t\t\ttokens.length = 0;\n\t\t} else if (token = atKeyword(stream)) {\n\t\t\t// Explictly consume @-tokens since it defines how rule or property\n\t\t\t// should be pre-parsed\n\t\t\tflush();\n\t\t\ttokens.push(token);\n\t\t} else if (eatUrl(stream) || eatInterpolation(stream) || eatBacktick(stream) \n\t\t\t\t|| eatBraces(stream, root) || eatString$1(stream) || stream.next()) {\n\t\t\t// NB explicitly consume `url()` token since it may contain\n\t\t\t// an unquoted url like `http://example.com` which interferes\n\t\t\t// with single-line comment\n\t\t\taccum = accum || new Token(stream, 'preparse');\n\t\t\taccum.end = stream.pos;\n\t\t} else {\n\t\t\tthrow new Error(`Unexpected end-of-stream at ${stream.pos}`);\n\t\t}\n\t}\n\n\tif (accum) {\n\t\ttokens.push(accum);\n\t}\n\n\t// Finalize all the rest properties\n\tctx.add(createProperty(stream, tokens));\n\n\t// Finalize unterminated rules\n\tstream.start = stream.pos;\n\twhile (ctx && ctx !== root) {\n\t\tctx.contentEndToken = new Token(stream, 'body-end');\n\t\tctx = ctx.parent;\n\t}\n\n\treturn root;\n}\n\n/**\n * Parses given source into tokens\n * @param  {String|StreamReader} source\n * @param  {Function} [consumer] Token consumer function, for example, `selector`,\n * `value` etc. from `lib/tokens` module. Default is generic `consumeToken`\n * @return {Token[]}\n */\nfunction lexer(source, consumer) {\n\tconsumer = consumer || consumeToken;\n\tconst stream = typeof source === 'string' ? new StreamReader(source) : source;\n\tconst result = [];\n\tlet token;\n\n\twhile (!stream.eof() && (token = consumer(stream))) {\n\t\tresult.push(token);\n\t}\n\n\treturn result;\n}\n\n/**\n * Consumes content inside round braces. Mostly used to skip `;` token inside\n * expressions since in LESS it is also used to separate function arguments\n * @param  {StringReader} stream\n * @param  {Stylesheet}   root   A stylesheet root. Used to accumulate comments\n * @return {Boolean}\n */\nfunction eatBraces(stream, root) {\n\tif (stream.eat(LBRACE)) {\n\t\tlet stack = 1, token;\n\n\t\twhile (!stream.eof()) {\n\t\t\tif (stream.eat(RBRACE)) {\n\t\t\t\tstack--;\n\t\t\t\tif (!stack) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (stream.eat(LBRACE)) {\n\t\t\t\tstack++;\n\t\t\t} else if (eatUrl(stream) || eatString$1(stream)) {\n\t\t\t\tcontinue;\n\t\t\t} else if (token = comment(stream)) {\n\t\t\t\troot.addComment(token);\n\t\t\t\tcontinue;\n\t\t\t} else {\n\t\t\t\tstream.next();\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\nexport { lexer, Token, any, selector, value, keyword, variable, formatting, comment, whitespace, ident, string, url, interpolation, backtick, parseMediaExpression, parsePropertyName, parsePropertyValue, parseSelector, createProperty, createRule, createAtRule };export default parseStylesheet;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.config = exports.loadMessageBundle = void 0;\nvar path = require(\"path\");\nvar fs = require(\"fs\");\nvar ral_1 = require(\"../common/ral\");\nvar common_1 = require(\"../common/common\");\nvar common_2 = require(\"../common/common\");\nObject.defineProperty(exports, \"MessageFormat\", { enumerable: true, get: function () { return common_2.MessageFormat; } });\nObject.defineProperty(exports, \"BundleFormat\", { enumerable: true, get: function () { return common_2.BundleFormat; } });\nvar toString = Object.prototype.toString;\nfunction isNumber(value) {\n    return toString.call(value) === '[object Number]';\n}\nfunction isString(value) {\n    return toString.call(value) === '[object String]';\n}\nfunction isBoolean(value) {\n    return value === true || value === false;\n}\nfunction readJsonFileSync(filename) {\n    return JSON.parse(fs.readFileSync(filename, 'utf8'));\n}\nvar resolvedBundles;\nvar options;\nfunction initializeSettings() {\n    options = { locale: undefined, language: undefined, languagePackSupport: false, cacheLanguageResolution: true, messageFormat: common_1.MessageFormat.bundle };\n    if (isString(process.env.VSCODE_NLS_CONFIG)) {\n        try {\n            var vscodeOptions_1 = JSON.parse(process.env.VSCODE_NLS_CONFIG);\n            var language = void 0;\n            if (vscodeOptions_1.availableLanguages) {\n                var value = vscodeOptions_1.availableLanguages['*'];\n                if (isString(value)) {\n                    language = value;\n                }\n            }\n            if (isString(vscodeOptions_1.locale)) {\n                options.locale = vscodeOptions_1.locale.toLowerCase();\n            }\n            if (language === undefined) {\n                options.language = options.locale;\n            }\n            else if (language !== 'en') {\n                options.language = language;\n            }\n            if (isBoolean(vscodeOptions_1._languagePackSupport)) {\n                options.languagePackSupport = vscodeOptions_1._languagePackSupport;\n            }\n            if (isString(vscodeOptions_1._cacheRoot)) {\n                options.cacheRoot = vscodeOptions_1._cacheRoot;\n            }\n            if (isString(vscodeOptions_1._languagePackId)) {\n                options.languagePackId = vscodeOptions_1._languagePackId;\n            }\n            if (isString(vscodeOptions_1._translationsConfigFile)) {\n                options.translationsConfigFile = vscodeOptions_1._translationsConfigFile;\n                try {\n                    options.translationsConfig = readJsonFileSync(options.translationsConfigFile);\n                }\n                catch (error) {\n                    // We can't read the translation config file. Mark the cache as corrupted.\n                    if (vscodeOptions_1._corruptedFile) {\n                        var dirname = path.dirname(vscodeOptions_1._corruptedFile);\n                        fs.exists(dirname, function (exists) {\n                            if (exists) {\n                                fs.writeFile(vscodeOptions_1._corruptedFile, 'corrupted', 'utf8', function (err) {\n                                    console.error(err);\n                                });\n                            }\n                        });\n                    }\n                }\n            }\n        }\n        catch (_a) {\n            // Do nothing.\n        }\n    }\n    common_1.setPseudo(options.locale === 'pseudo');\n    resolvedBundles = Object.create(null);\n}\ninitializeSettings();\nfunction supportsLanguagePack() {\n    return options.languagePackSupport === true && options.cacheRoot !== undefined && options.languagePackId !== undefined && options.translationsConfigFile !== undefined\n        && options.translationsConfig !== undefined;\n}\nfunction createScopedLocalizeFunction(messages) {\n    return function (key, message) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        if (isNumber(key)) {\n            if (key >= messages.length) {\n                console.error(\"Broken localize call found. Index out of bounds. Stacktrace is\\n: \" + new Error('').stack);\n                return;\n            }\n            return common_1.format(messages[key], args);\n        }\n        else {\n            if (isString(message)) {\n                console.warn(\"Message \" + message + \" didn't get externalized correctly.\");\n                return common_1.format(message, args);\n            }\n            else {\n                console.error(\"Broken localize call found. Stacktrace is\\n: \" + new Error('').stack);\n            }\n        }\n    };\n}\nfunction resolveLanguage(file) {\n    var resolvedLanguage;\n    if (options.cacheLanguageResolution && resolvedLanguage) {\n        resolvedLanguage = resolvedLanguage;\n    }\n    else {\n        if (common_1.isPseudo || !options.language) {\n            resolvedLanguage = '.nls.json';\n        }\n        else {\n            var locale = options.language;\n            while (locale) {\n                var candidate = '.nls.' + locale + '.json';\n                if (fs.existsSync(file + candidate)) {\n                    resolvedLanguage = candidate;\n                    break;\n                }\n                else {\n                    var index = locale.lastIndexOf('-');\n                    if (index > 0) {\n                        locale = locale.substring(0, index);\n                    }\n                    else {\n                        resolvedLanguage = '.nls.json';\n                        locale = null;\n                    }\n                }\n            }\n        }\n        if (options.cacheLanguageResolution) {\n            resolvedLanguage = resolvedLanguage;\n        }\n    }\n    return file + resolvedLanguage;\n}\nfunction findInTheBoxBundle(root) {\n    var language = options.language;\n    while (language) {\n        var candidate = path.join(root, \"nls.bundle.\" + language + \".json\");\n        if (fs.existsSync(candidate)) {\n            return candidate;\n        }\n        else {\n            var index = language.lastIndexOf('-');\n            if (index > 0) {\n                language = language.substring(0, index);\n            }\n            else {\n                language = undefined;\n            }\n        }\n    }\n    // Test if we can reslove the default bundle.\n    if (language === undefined) {\n        var candidate = path.join(root, 'nls.bundle.json');\n        if (fs.existsSync(candidate)) {\n            return candidate;\n        }\n    }\n    return undefined;\n}\nfunction mkdir(directory) {\n    try {\n        fs.mkdirSync(directory);\n    }\n    catch (err) {\n        if (err.code === 'EEXIST') {\n            return;\n        }\n        else if (err.code === 'ENOENT') {\n            var parent = path.dirname(directory);\n            if (parent !== directory) {\n                mkdir(parent);\n                fs.mkdirSync(directory);\n            }\n        }\n        else {\n            throw err;\n        }\n    }\n}\nfunction createDefaultNlsBundle(folder) {\n    var metaData = readJsonFileSync(path.join(folder, 'nls.metadata.json'));\n    var result = Object.create(null);\n    for (var module_1 in metaData) {\n        var entry = metaData[module_1];\n        result[module_1] = entry.messages;\n    }\n    return result;\n}\nfunction createNLSBundle(header, metaDataPath) {\n    var languagePackLocation = options.translationsConfig[header.id];\n    if (!languagePackLocation) {\n        return undefined;\n    }\n    var languagePack = readJsonFileSync(languagePackLocation).contents;\n    var metaData = readJsonFileSync(path.join(metaDataPath, 'nls.metadata.json'));\n    var result = Object.create(null);\n    for (var module_2 in metaData) {\n        var entry = metaData[module_2];\n        var translations = languagePack[header.outDir + \"/\" + module_2];\n        if (translations) {\n            var resultMessages = [];\n            for (var i = 0; i < entry.keys.length; i++) {\n                var messageKey = entry.keys[i];\n                var key = isString(messageKey) ? messageKey : messageKey.key;\n                var translatedMessage = translations[key];\n                if (translatedMessage === undefined) {\n                    translatedMessage = entry.messages[i];\n                }\n                resultMessages.push(translatedMessage);\n            }\n            result[module_2] = resultMessages;\n        }\n        else {\n            result[module_2] = entry.messages;\n        }\n    }\n    return result;\n}\nfunction touch(file) {\n    var d = new Date();\n    fs.utimes(file, d, d, function () {\n        // Do nothing. Ignore\n    });\n}\nfunction cacheBundle(key, bundle) {\n    resolvedBundles[key] = bundle;\n    return bundle;\n}\nfunction loadNlsBundleOrCreateFromI18n(header, bundlePath) {\n    var result;\n    var bundle = path.join(options.cacheRoot, header.id + \"-\" + header.hash + \".json\");\n    var useMemoryOnly = false;\n    var writeBundle = false;\n    try {\n        result = JSON.parse(fs.readFileSync(bundle, { encoding: 'utf8', flag: 'r' }));\n        touch(bundle);\n        return result;\n    }\n    catch (err) {\n        if (err.code === 'ENOENT') {\n            writeBundle = true;\n        }\n        else if (err instanceof SyntaxError) {\n            // We have a syntax error. So no valid JSON. Use\n            console.log(\"Syntax error parsing message bundle: \" + err.message + \".\");\n            fs.unlink(bundle, function (err) {\n                if (err) {\n                    console.error(\"Deleting corrupted bundle \" + bundle + \" failed.\");\n                }\n            });\n            useMemoryOnly = true;\n        }\n        else {\n            throw err;\n        }\n    }\n    result = createNLSBundle(header, bundlePath);\n    if (!result || useMemoryOnly) {\n        return result;\n    }\n    if (writeBundle) {\n        try {\n            fs.writeFileSync(bundle, JSON.stringify(result), { encoding: 'utf8', flag: 'wx' });\n        }\n        catch (err) {\n            if (err.code === 'EEXIST') {\n                return result;\n            }\n            throw err;\n        }\n    }\n    return result;\n}\nfunction loadDefaultNlsBundle(bundlePath) {\n    try {\n        return createDefaultNlsBundle(bundlePath);\n    }\n    catch (err) {\n        console.log(\"Generating default bundle from meta data failed.\", err);\n        return undefined;\n    }\n}\nfunction loadNlsBundle(header, bundlePath) {\n    var result;\n    // Core decided to use a language pack. Do the same in the extension\n    if (supportsLanguagePack()) {\n        try {\n            result = loadNlsBundleOrCreateFromI18n(header, bundlePath);\n        }\n        catch (err) {\n            console.log(\"Load or create bundle failed \", err);\n        }\n    }\n    if (!result) {\n        // No language pack found, but core is running in language pack mode\n        // Don't try to use old in the box bundles since the might be stale\n        // Fall right back to the default bundle.\n        if (options.languagePackSupport) {\n            return loadDefaultNlsBundle(bundlePath);\n        }\n        var candidate = findInTheBoxBundle(bundlePath);\n        if (candidate) {\n            try {\n                return readJsonFileSync(candidate);\n            }\n            catch (err) {\n                console.log(\"Loading in the box message bundle failed.\", err);\n            }\n        }\n        result = loadDefaultNlsBundle(bundlePath);\n    }\n    return result;\n}\nfunction tryFindMetaDataHeaderFile(file) {\n    var result;\n    var dirname = path.dirname(file);\n    while (true) {\n        result = path.join(dirname, 'nls.metadata.header.json');\n        if (fs.existsSync(result)) {\n            break;\n        }\n        var parent = path.dirname(dirname);\n        if (parent === dirname) {\n            result = undefined;\n            break;\n        }\n        else {\n            dirname = parent;\n        }\n    }\n    return result;\n}\nfunction loadMessageBundle(file) {\n    if (!file) {\n        // No file. We are in dev mode. Return the default\n        // localize function.\n        return common_1.localize;\n    }\n    // Remove extension since we load json files.\n    var ext = path.extname(file);\n    if (ext) {\n        file = file.substr(0, file.length - ext.length);\n    }\n    if (options.messageFormat === common_1.MessageFormat.both || options.messageFormat === common_1.MessageFormat.bundle) {\n        var headerFile = tryFindMetaDataHeaderFile(file);\n        if (headerFile) {\n            var bundlePath = path.dirname(headerFile);\n            var bundle = resolvedBundles[bundlePath];\n            if (bundle === undefined) {\n                try {\n                    var header = JSON.parse(fs.readFileSync(headerFile, 'utf8'));\n                    try {\n                        var nlsBundle = loadNlsBundle(header, bundlePath);\n                        bundle = cacheBundle(bundlePath, nlsBundle ? { header: header, nlsBundle: nlsBundle } : null);\n                    }\n                    catch (err) {\n                        console.error('Failed to load nls bundle', err);\n                        bundle = cacheBundle(bundlePath, null);\n                    }\n                }\n                catch (err) {\n                    console.error('Failed to read header file', err);\n                    bundle = cacheBundle(bundlePath, null);\n                }\n            }\n            if (bundle) {\n                var module_3 = file.substr(bundlePath.length + 1).replace(/\\\\/g, '/');\n                var messages = bundle.nlsBundle[module_3];\n                if (messages === undefined) {\n                    console.error(\"Messages for file \" + file + \" not found. See console for details.\");\n                    return function () {\n                        return 'Messages not found.';\n                    };\n                }\n                return createScopedLocalizeFunction(messages);\n            }\n        }\n    }\n    if (options.messageFormat === common_1.MessageFormat.both || options.messageFormat === common_1.MessageFormat.file) {\n        // Try to load a single file bundle\n        try {\n            var json = readJsonFileSync(resolveLanguage(file));\n            if (Array.isArray(json)) {\n                return createScopedLocalizeFunction(json);\n            }\n            else {\n                if (common_1.isDefined(json.messages) && common_1.isDefined(json.keys)) {\n                    return createScopedLocalizeFunction(json.messages);\n                }\n                else {\n                    console.error(\"String bundle '\" + file + \"' uses an unsupported format.\");\n                    return function () {\n                        return 'File bundle has unsupported format. See console for details';\n                    };\n                }\n            }\n        }\n        catch (err) {\n            if (err.code !== 'ENOENT') {\n                console.error('Failed to load single file bundle', err);\n            }\n        }\n    }\n    console.error(\"Failed to load message bundle for file \" + file);\n    return function () {\n        return 'Failed to load message bundle. See console for details.';\n    };\n}\nexports.loadMessageBundle = loadMessageBundle;\nfunction config(opts) {\n    if (opts) {\n        if (isString(opts.locale)) {\n            options.locale = opts.locale.toLowerCase();\n            options.language = options.locale;\n            resolvedBundles = Object.create(null);\n        }\n        if (opts.messageFormat !== undefined) {\n            options.messageFormat = opts.messageFormat;\n        }\n        if (opts.bundleFormat === common_1.BundleFormat.standalone && options.languagePackSupport === true) {\n            options.languagePackSupport = false;\n        }\n    }\n    common_1.setPseudo(options.locale === 'pseudo');\n    return loadMessageBundle;\n}\nexports.config = config;\nral_1.default.install(Object.freeze({\n    loadMessageBundle: loadMessageBundle,\n    config: config\n}));\n//# sourceMappingURL=main.js.map","module.exports = require(\"util\");",null,"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _ral;\nfunction RAL() {\n    if (_ral === undefined) {\n        throw new Error(\"No runtime abstraction layer installed\");\n    }\n    return _ral;\n}\n(function (RAL) {\n    function install(ral) {\n        if (ral === undefined) {\n            throw new Error(\"No runtime abstraction layer provided\");\n        }\n        _ral = ral;\n    }\n    RAL.install = install;\n})(RAL || (RAL = {}));\nexports.default = RAL;\n//# sourceMappingURL=ral.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.config = exports.loadMessageBundle = exports.localize = exports.format = exports.setPseudo = exports.isPseudo = exports.isDefined = exports.BundleFormat = exports.MessageFormat = void 0;\nvar ral_1 = require(\"./ral\");\nvar MessageFormat;\n(function (MessageFormat) {\n    MessageFormat[\"file\"] = \"file\";\n    MessageFormat[\"bundle\"] = \"bundle\";\n    MessageFormat[\"both\"] = \"both\";\n})(MessageFormat = exports.MessageFormat || (exports.MessageFormat = {}));\nvar BundleFormat;\n(function (BundleFormat) {\n    // the nls.bundle format\n    BundleFormat[\"standalone\"] = \"standalone\";\n    BundleFormat[\"languagePack\"] = \"languagePack\";\n})(BundleFormat = exports.BundleFormat || (exports.BundleFormat = {}));\nvar LocalizeInfo;\n(function (LocalizeInfo) {\n    function is(value) {\n        var candidate = value;\n        return candidate && isDefined(candidate.key) && isDefined(candidate.comment);\n    }\n    LocalizeInfo.is = is;\n})(LocalizeInfo || (LocalizeInfo = {}));\nfunction isDefined(value) {\n    return typeof value !== 'undefined';\n}\nexports.isDefined = isDefined;\nexports.isPseudo = false;\nfunction setPseudo(pseudo) {\n    exports.isPseudo = pseudo;\n}\nexports.setPseudo = setPseudo;\nfunction format(message, args) {\n    var result;\n    if (exports.isPseudo) {\n        // FF3B and FF3D is the Unicode zenkaku representation for [ and ]\n        message = '\\uFF3B' + message.replace(/[aouei]/g, '$&$&') + '\\uFF3D';\n    }\n    if (args.length === 0) {\n        result = message;\n    }\n    else {\n        result = message.replace(/\\{(\\d+)\\}/g, function (match, rest) {\n            var index = rest[0];\n            var arg = args[index];\n            var replacement = match;\n            if (typeof arg === 'string') {\n                replacement = arg;\n            }\n            else if (typeof arg === 'number' || typeof arg === 'boolean' || arg === void 0 || arg === null) {\n                replacement = String(arg);\n            }\n            return replacement;\n        });\n    }\n    return result;\n}\nexports.format = format;\nfunction localize(_key, message) {\n    var args = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        args[_i - 2] = arguments[_i];\n    }\n    return format(message, args);\n}\nexports.localize = localize;\nfunction loadMessageBundle(file) {\n    return ral_1.default().loadMessageBundle(file);\n}\nexports.loadMessageBundle = loadMessageBundle;\nfunction config(opts) {\n    return ral_1.default().config(opts);\n}\nexports.config = config;\n//# sourceMappingURL=common.js.map","import StreamReader from '@emmetio/stream-reader';\nimport { eatPair, eatQuoted, isAlphaNumeric, isQuote, isSpace } from '@emmetio/stream-reader-utils';\n\nclass Node {\n\tconstructor(stream, type, open, close) {\n\t\tthis.stream = stream;\n\t\tthis.type = type;\n\t\tthis.open = open;\n\t\tthis.close = close;\n\n\t\tthis.children = [];\n\t\tthis.parent = null;\n\t}\n\n\t/**\n\t * Returns node name\n\t * @return {String}\n\t */\n\tget name() {\n\t\tif (this.type === 'tag' && this.open) {\n\t\t\treturn this.open && this.open.name && this.open.name.value;\n\t\t}\n\n\t\treturn '#' + this.type;\n\t}\n\n\t/**\n\t * Returns attributes of current node\n\t * @return {Array}\n\t */\n\tget attributes() {\n\t\treturn this.open && this.open.attributes;\n\t}\n\n\t/**\n\t * Returns node’s start position in stream\n\t * @return {*}\n\t */\n\tget start() {\n\t\treturn this.open && this.open.start;\n\t}\n\n\t/**\n\t * Returns node’s start position in stream\n\t * @return {*}\n\t */\n\tget end() {\n\t\treturn this.close ? this.close.end : this.open && this.open.end;\n\t}\n\n\tget firstChild() {\n\t\treturn this.children[0];\n\t}\n\n\tget nextSibling() {\n\t\tconst ix = this.getIndex();\n\t\treturn ix !== -1 ? this.parent.children[ix + 1] : null;\n\t}\n\n\tget previousSibling() {\n\t\tconst ix = this.getIndex();\n\t\treturn ix !== -1 ? this.parent.children[ix - 1] : null;\n\t}\n\n\t/**\n\t * Returns current element’s index in parent list of child nodes\n\t * @return {Number}\n\t */\n\tgetIndex() {\n\t\treturn this.parent ? this.parent.children.indexOf(this) : -1;\n\t}\n\n\t/**\n\t * Adds given node as a child\n\t * @param {Node} node\n\t * @return {Node} Current node\n\t */\n\taddChild(node) {\n\t\tthis.removeChild(node);\n\t\tthis.children.push(node);\n\t\tnode.parent = this;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Removes given node from current node’s child list\n\t * @param  {Node} node\n\t * @return {Node} Current node\n\t */\n\tremoveChild(node) {\n\t\tconst ix = this.children.indexOf(node);\n\t\tif (ix !== -1) {\n\t\t\tthis.children.splice(ix, 1);\n\t\t\tnode.parent = null;\n\t\t}\n\n\t\treturn this;\n\t}\n}\n\n/**\n * A token factory method\n * @param  {StreamReader}   stream\n * @param  {Point|Function} start  Tokens’ start location or stream consumer\n * @param  {Point}          [end]  Tokens’ end location\n * @return {Token}\n */\nvar token = function(stream, start, end) {\n\treturn typeof start === 'function'\n\t\t? eatToken(stream, start)\n\t\t: new Token(stream, start, end);\n};\n\n/**\n * Consumes characters from given stream that matches `fn` call and returns it\n * as token, if consumed\n * @param  {StreamReader} stream\n * @param  {Function} test\n * @return {Token}\n */\nfunction eatToken(stream, test) {\n\tconst start = stream.pos;\n\tif (stream.eatWhile(test)) {\n\t\treturn new Token(stream, start, stream.pos);\n\t}\n\n\tstream.pos = start;\n}\n\n/**\n * A structure describing text fragment in content stream\n */\nclass Token {\n\t/**\n\t * @param {ContentStreamReader} stream\n\t * @param {Point} start         Tokens’ start location in content stream\n\t * @param {Point} end           Tokens’ end location in content stream\n\t */\n\tconstructor(stream, start, end) {\n\t\tthis.stream = stream;\n\t\tthis.start = start != null ? start : stream.start;\n\t\tthis.end   = end   != null ? end   : stream.pos;\n\t\tthis._value = null;\n\t}\n\n\t/**\n\t * Returns token textual value\n\t * NB implemented as getter to reduce unnecessary memory allocations for\n\t * strings that not required\n\t * @return {String}\n\t */\n\tget value() {\n\t\tif (this._value === null) {\n\t\t\tconst start = this.stream.start;\n\t\t\tconst end = this.stream.pos;\n\n\t\t\tthis.stream.start = this.start;\n\t\t\tthis.stream.pos = this.end;\n\t\t\tthis._value = this.stream.current();\n\n\t\t\tthis.stream.start = start;\n\t\t\tthis.stream.pos = end;\n\t\t}\n\n\t\treturn this._value;\n\t}\n\n\ttoString() {\n\t\treturn this.value;\n\t}\n\n\tvalueOf() {\n\t\treturn `${this.value} [${this.start}; ${this.end}]`;\n\t}\n}\n\nconst LANGLE  = 60;\nconst RANGLE  = 62;  // < and >\nconst LSQUARE = 91;\nconst RSQUARE = 93;  // [ and ]\nconst LROUND  = 40;\nconst RROUND  = 41;  // ( and )\nconst LCURLY  = 123;\nconst RCURLY  = 125; // { and }\n\nconst opt = { throws: true };\n\n/**\n * Consumes paired tokens (like `[` and `]`) with respect of nesting and embedded\n * quoted values\n * @param  {StreamReader} stream\n * @return {Token} A token with consumed paired character\n */\nvar eatPaired = function(stream) {\n\tconst start = stream.pos;\n\tconst consumed = eatPair(stream, LANGLE, RANGLE, opt)\n\t\t|| eatPair(stream, LSQUARE, RSQUARE, opt)\n\t\t|| eatPair(stream, LROUND,  RROUND,  opt)\n\t\t|| eatPair(stream, LCURLY,  RCURLY,  opt);\n\n\tif (consumed) {\n\t\treturn token(stream, start);\n\t}\n};\n\nconst SLASH$1        = 47;  // /\nconst EQUALS       = 61;  // =\nconst RIGHT_ANGLE$1  = 62;  // >\n\n/**\n * Consumes attributes from given stream\n * @param {StreamReader} stream\n * @return {Array} Array of consumed attributes\n */\nvar eatAttributes = function(stream) {\n\tconst result = [];\n\tlet name, value, attr;\n\n\twhile (!stream.eof()) {\n\t\tstream.eatWhile(isSpace);\n\t\tattr = { start: stream.pos };\n\n\t\t// A name could be a regular name or expression:\n\t\t// React-style – <div {...props}>\n\t\t// Angular-style – <div [ng-for]>\n\t\tif (attr.name = eatAttributeName(stream)) {\n\t\t\t// Consumed attribute name. Can be an attribute with name\n\t\t\t// or boolean attribute. The value can be React-like expression\n\t\t\tif (stream.eat(EQUALS)) {\n\t\t\t\tattr.value = eatAttributeValue(stream);\n\t\t\t} else {\n\t\t\t\tattr.boolean = true;\n\t\t\t}\n\t\t\tattr.end = stream.pos;\n\t\t\tresult.push(attr);\n\t\t} else if (isTerminator(stream.peek())) {\n\t\t\t// look for tag terminator in order to skip any other possible characters\n\t\t\t// (maybe junk)\n\t\t\tbreak;\n\t\t} else {\n\t\t\tstream.next();\n\t\t}\n\t}\n\n\treturn result;\n};\n\n/**\n * Consumes attribute name from current location\n * @param  {StreamReader} stream\n * @return {Token}\n */\nfunction eatAttributeName(stream) {\n\treturn eatPaired(stream) || token(stream, isAttributeName);\n}\n\n/**\n * Consumes attribute value from given location\n * @param  {StreamReader} stream\n * @return {Token}\n */\nfunction eatAttributeValue(stream) {\n\tconst start = stream.pos;\n\tif (eatQuoted(stream)) {\n\t\t// Should return token that points to unquoted value.\n\t\t// Use stream readers’ public API to traverse instead of direct\n\t\t// manipulation\n\t\tconst current = stream.pos;\n\t\tlet valueStart, valueEnd;\n\n\t\tstream.pos = start;\n\t\tstream.next();\n\t\tvalueStart = stream.start = stream.pos;\n\n\t\tstream.pos = current;\n\t\tstream.backUp(1);\n\t\tvalueEnd = stream.pos;\n\n\t\tconst result = token(stream, valueStart, valueEnd);\n\t\tstream.pos = current;\n\t\treturn result;\n\t}\n\n\treturn eatPaired(stream) || eatUnquoted(stream);\n}\n\n/**\n * Check if given code belongs to attribute name.\n * NB some custom HTML variations allow non-default values in name, like `*ngFor`\n * @param  {Number}  code\n * @return {Boolean}\n */\nfunction isAttributeName(code) {\n\treturn code !== EQUALS && !isTerminator(code) && !isSpace(code);\n}\n\n/**\n * Check if given code is tag terminator\n * @param  {Number}  code\n * @return {Boolean}\n */\nfunction isTerminator(code) {\n\treturn code === RIGHT_ANGLE$1 || code === SLASH$1;\n}\n\n/**\n * Eats unquoted value from stream\n * @param  {StreamReader} stream\n * @return {Token}\n */\nfunction eatUnquoted(stream) {\n\treturn token(stream, isUnquoted);\n}\n\n/**\n * Check if given character code is valid unquoted value\n * @param  {Number}  code\n * @return {Boolean}\n */\nfunction isUnquoted(code) {\n\treturn !isNaN(code) && !isQuote(code) && !isSpace(code) && !isTerminator(code);\n}\n\nconst DASH        = 45; // -\nconst DOT         = 46; // .\nconst SLASH       = 47; // /\nconst COLON       = 58; // :\nconst LEFT_ANGLE  = 60; // <\nconst RIGHT_ANGLE = 62; // >\nconst UNDERSCORE  = 95; // _\n\n/**\n * Parses tag definition (open or close tag) from given stream state\n * @param {StreamReader} stream Content stream reader\n * @return {Object}\n */\nvar tag = function(stream) {\n\tconst start = stream.pos;\n\n\tif (stream.eat(LEFT_ANGLE)) {\n\t\tconst model = { type: stream.eat(SLASH) ? 'close' : 'open' };\n\n\t\tif (model.name = eatTagName(stream)) {\n\t\t\tif (model.type !== 'close') {\n\t\t\t\tmodel.attributes = eatAttributes(stream);\n\t\t\t\tstream.eatWhile(isSpace);\n\t\t\t\tmodel.selfClosing = stream.eat(SLASH);\n\t\t\t}\n\n\t\t\tif (stream.eat(RIGHT_ANGLE)) {\n\t\t\t\t// tag properly closed\n\t\t\t\treturn Object.assign(token(stream, start), model);\n\t\t\t}\n\t\t}\n\t}\n\n\t// invalid tag, revert to original position\n\tstream.pos = start;\n\treturn null;\n};\n\n/**\n * Eats HTML identifier (tag or attribute name) from given stream\n * @param  {StreamReader} stream\n * @return {Token}\n */\nfunction eatTagName(stream) {\n\treturn token(stream, isTagName);\n}\n\n/**\n * Check if given character code can be used as HTML/XML tag name\n * @param  {Number}  code\n * @return {Boolean}\n */\nfunction isTagName(code) {\n\treturn isAlphaNumeric(code)\n\t\t|| code === COLON // colon is used for namespaces\n\t\t|| code === DOT   // in rare cases declarative tag names may have dots in names\n\t\t|| code === DASH\n\t\t|| code === UNDERSCORE;\n}\n\n/**\n * Eats array of character codes from given stream\n * @param  {StreamReader} stream\n * @param  {Number[]} codes  Array of character codes\n * @return {Boolean}\n */\nfunction eatArray(stream, codes) {\n\tconst start = stream.pos;\n\n\tfor (let i = 0; i < codes.length; i++) {\n\t\tif (!stream.eat(codes[i])) {\n\t\t\tstream.pos = start;\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tstream.start = start;\n\treturn true;\n}\n\n/**\n * Consumes section from given string which starts with `open` character codes\n * and ends with `close` character codes\n * @param  {StreamReader} stream\n * @param  {Number[]} open\n * @param  {Number[]} close\n * @return {Boolean}  Returns `true` if section was consumed\n */\nfunction eatSection(stream, open, close, allowUnclosed) {\n\tconst start = stream.pos;\n\tif (eatArray(stream, open)) {\n\t\t// consumed `<!--`, read next until we find ending part or reach the end of input\n\t\twhile (!stream.eof()) {\n\t\t\tif (eatArray(stream, close)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tstream.next();\n\t\t}\n\n\t\t// unclosed section is allowed\n\t\tif (allowUnclosed) {\n\t\t\treturn true;\n\t\t}\n\n\t\tstream.pos = start;\n\t\treturn false;\n\t}\n\n\t// unable to find section, revert to initial position\n\tstream.pos = start;\n\treturn null;\n}\n\n/**\n * Converts given string into array of character codes\n * @param  {String} str\n * @return {Number[]}\n */\nfunction toCharCodes(str) {\n\treturn str.split('').map(ch => ch.charCodeAt(0));\n}\n\nconst open  = toCharCodes('<!--');\nconst close = toCharCodes('-->');\n\n/**\n * Consumes HTML comment from given stream\n * @param  {StreamReader} stream\n * @return {Token}\n */\nvar comment = function(stream) {\n\tconst start = stream.pos;\n\tif (eatSection(stream, open, close, true)) {\n\t\tconst result = token(stream, start);\n\t\tresult.type = 'comment';\n\t\treturn result;\n\t}\n\n\treturn null;\n};\n\nconst open$1  = toCharCodes('<![CDATA[');\nconst close$1 = toCharCodes(']]>');\n\n/**\n * Consumes CDATA from given stream\n * @param  {StreamReader} stream\n * @return {Token}\n */\nvar cdata = function(stream) {\n\tconst start = stream.pos;\n\tif (eatSection(stream, open$1, close$1, true)) {\n\t\tconst result = token(stream, start);\n\t\tresult.type = 'cdata';\n\t\treturn result;\n\t}\n\n\treturn null;\n};\n\nconst defaultOptions = {\n\t/**\n\t * Expect XML content in searching content. It alters how should-be-empty\n\t * elements are treated: for example, in XML mode parser will try to locate\n\t * closing pair for `<br>` tag\n\t * @type {Boolean}\n\t */\n\txml: false,\n\n\tspecial: ['script', 'style'],\n\n\t/**\n\t * List of elements that should be treated as empty (e.g. without closing tag)\n\t * in non-XML syntax\n\t * @type {Array}\n\t */\n\tempty: ['img', 'meta', 'link', 'br', 'base', 'hr', 'area', 'wbr','col', 'embed', 'input', 'param', 'source', 'track']\n};\n\n/**\n * Parses given content into a DOM-like structure\n * @param  {String|StreamReader} content\n * @param  {Object} options\n * @return {Node}\n */\nfunction parse(content, options) {\n\toptions = Object.assign({}, defaultOptions, options);\n\tconst stream = typeof content === 'string'\n\t\t? new StreamReader(content)\n\t\t: content;\n\n\tconst root = new Node(stream, 'root');\n\tconst empty = new Set(options.empty);\n\tconst special = options.special.reduce(\n\t\t(map, name) => map.set(name, toCharCodes(`</${name}>`)), new Map());\n\tconst isEmpty = (token, name) =>\n\t\ttoken.selfClosing || (!options.xml && empty.has(name));\n\n\tlet m, node, name, stack = [root];\n\n\twhile (!stream.eof()) {\n\t\tif (m = match(stream)) {\n\t\t\tname = getName(m);\n\n\t\t\tif (m.type === 'open') {\n\t\t\t\t// opening tag\n\t\t\t\tnode = new Node(stream, 'tag', m);\n\t\t\t\tlast(stack).addChild(node);\n\t\t\t\tif (special.has(name)) {\n\t\t\t\t\tnode.close = consumeSpecial(stream, special.get(name));\n\t\t\t\t} else if (!isEmpty(m, name)) {\n\t\t\t\t\tstack.push(node);\n\t\t\t\t}\n\t\t\t} else if (m.type === 'close') {\n\t\t\t\t// closing tag, find it’s matching opening tag\n\t\t\t\tfor (let i = stack.length - 1; i > 0; i--) {\n\t\t\t\t\tif (stack[i].name.toLowerCase() === name) {\n\t\t\t\t\t\tstack[i].close = m;\n\t\t\t\t\t\tstack = stack.slice(0, i);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlast(stack).addChild(new Node(stream, m.type, m));\n\t\t\t}\n\t\t} else {\n\t\t\tstream.next();\n\t\t}\n\t}\n\n\treturn root;\n}\n\n/**\n * Matches known token in current state of given stream\n * @param  {ContentStreamReader} stream\n * @return {Token}\n */\nfunction match(stream) {\n\t// fast-path optimization: check for `<` code\n\tif (stream.peek() === 60 /* < */) {\n\t\treturn comment(stream) || cdata(stream) || tag(stream);\n\t}\n}\n\n/**\n * @param  {StreamReader} stream\n * @param  {Number[]} codes\n * @return {Token}\n */\nfunction consumeSpecial(stream, codes) {\n\tconst start = stream.pos;\n\tlet m;\n\n\twhile (!stream.eof()) {\n\t\tif (eatArray(stream, codes)) {\n\t\t\tstream.pos = stream.start;\n\t\t\treturn tag(stream);\n\t\t}\n\t\tstream.next();\n\t}\n\n\tstream.pos = start;\n\treturn null;\n}\n\n/**\n * Returns name of given matched token\n * @param  {Token} tag\n * @return {String}\n */\nfunction getName(tag$$1) {\n\treturn tag$$1.name ? tag$$1.name.value.toLowerCase() : `#${tag$$1.type}`;\n}\n\nfunction last(arr) {\n\treturn arr[arr.length - 1];\n}\n\nexport { defaultOptions, match };export default parse;\n","'use strict';\n\nmodule.exports = [\n  'bmp',\n  'gif',\n  'jpg',\n  'png',\n  'psd',\n  'svg',\n  'tiff',\n  'webp',\n  'dds'\n];\n","var map = {\n\t\"./bmp\": 17,\n\t\"./bmp.js\": 17,\n\t\"./dds\": 18,\n\t\"./dds.js\": 18,\n\t\"./gif\": 19,\n\t\"./gif.js\": 19,\n\t\"./jpg\": 20,\n\t\"./jpg.js\": 20,\n\t\"./png\": 21,\n\t\"./png.js\": 21,\n\t\"./psd\": 22,\n\t\"./psd.js\": 22,\n\t\"./svg\": 23,\n\t\"./svg.js\": 23,\n\t\"./tiff\": 24,\n\t\"./tiff.js\": 24,\n\t\"./webp\": 25,\n\t\"./webp.js\": 25\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 16;","'use strict';\n\nfunction isBMP (buffer) {\n  return ('BM' === buffer.toString('ascii', 0, 2));\n}\n\nfunction calculate (buffer) {\n  return {\n    'width': buffer.readUInt32LE(18),\n    'height': Math.abs(buffer.readInt32LE(22))\n  };\n}\n\nmodule.exports = {\n  'detect': isBMP,\n  'calculate': calculate\n};\n","'use strict';\n\nfunction isDDS(buffer){\n\treturn buffer.readUInt32LE(0) === 0x20534444;\n}\n\nfunction calculate(buffer){\n\t// read file resolution metadata\n\treturn {\n\t\t'height': buffer.readUInt32LE(12),\n\t\t'width': buffer.readUInt32LE(16)\n\t};\n}\n\nmodule.exports = {\n\t'detect': isDDS,\n\t'calculate': calculate\n};\n","'use strict';\n\nvar gifRegexp = /^GIF8[79]a/;\nfunction isGIF (buffer) {\n  var signature = buffer.toString('ascii', 0, 6);\n  return (gifRegexp.test(signature));\n}\n\nfunction calculate(buffer) {\n  return {\n    'width': buffer.readUInt16LE(6),\n    'height': buffer.readUInt16LE(8)\n  };\n}\n\nmodule.exports = {\n  'detect': isGIF,\n  'calculate': calculate\n};\n","'use strict';\n\n// NOTE: we only support baseline and progressive JPGs here\n// due to the structure of the loader class, we only get a buffer\n// with a maximum size of 4096 bytes. so if the SOF marker is outside\n// if this range we can't detect the file size correctly.\n\nfunction isJPG (buffer) { //, filepath\n  var SOIMarker = buffer.toString('hex', 0, 2);\n  return ('ffd8' === SOIMarker);\n}\n\nfunction extractSize (buffer, i) {\n  return {\n    'height' : buffer.readUInt16BE(i),\n    'width' : buffer.readUInt16BE(i + 2)\n  };\n}\n\nfunction validateBuffer (buffer, i) {\n  // index should be within buffer limits\n  if (i > buffer.length) {\n    throw new TypeError('Corrupt JPG, exceeded buffer limits');\n  }\n  // Every JPEG block must begin with a 0xFF\n  if (buffer[i] !== 0xFF) {\n    throw new TypeError('Invalid JPG, marker table corrupted');\n  }\n}\n\nfunction calculate (buffer) {\n\n  // Skip 4 chars, they are for signature\n  buffer = buffer.slice(4);\n\n  var i, next;\n  while (buffer.length) {\n    // read length of the next block\n    i = buffer.readUInt16BE(0);\n\n    // ensure correct format\n    validateBuffer(buffer, i);\n\n    // 0xFFC0 is baseline standard(SOF)\n    // 0xFFC1 is baseline optimized(SOF)\n    // 0xFFC2 is progressive(SOF2)\n    next = buffer[i + 1];\n    if (next === 0xC0 || next === 0xC1 || next === 0xC2) {\n      return extractSize(buffer, i + 5);\n    }\n\n    // move to the next block\n    buffer = buffer.slice(i + 2);\n  }\n\n  throw new TypeError('Invalid JPG, no size found');\n}\n\nmodule.exports = {\n  'detect': isJPG,\n  'calculate': calculate\n};\n","'use strict';\n\nvar pngSignature = 'PNG\\r\\n\\x1a\\n';\nvar pngImageHeaderChunkName = 'IHDR';\nvar pngFriedChunkName = 'CgBI'; // Used to detect \"fried\" png's: http://www.jongware.com/pngdefry.html\n\nfunction isPNG (buffer) {\n  if (pngSignature === buffer.toString('ascii', 1, 8)) {\n    var chunkName = buffer.toString('ascii', 12, 16);\n    if (chunkName === pngFriedChunkName) {\n      chunkName = buffer.toString('ascii', 28, 32);\n    }\n    if (chunkName !== pngImageHeaderChunkName) {\n      throw new TypeError('invalid png');\n    }\n    return true;\n  }\n}\n\nfunction calculate (buffer) {\n  if (buffer.toString('ascii', 12, 16) === pngFriedChunkName) {\n    return {\n      'width': buffer.readUInt32BE(32),\n      'height': buffer.readUInt32BE(36)\n    };\n  }\n  return {\n    'width': buffer.readUInt32BE(16),\n    'height': buffer.readUInt32BE(20)\n  };\n}\n\nmodule.exports = {\n  'detect': isPNG,\n  'calculate': calculate\n};\n","'use strict';\n\nfunction isPSD (buffer) {\n  return ('8BPS' === buffer.toString('ascii', 0, 4));\n}\n\nfunction calculate (buffer) {\n  return {\n    'width': buffer.readUInt32BE(18),\n    'height': buffer.readUInt32BE(14)\n  };\n}\n\nmodule.exports = {\n  'detect': isPSD,\n  'calculate': calculate\n};\n","'use strict';\n\nvar svgReg = /<svg[^>]+[^>]*>/;\nfunction isSVG (buffer) {\n  return svgReg.test(buffer);\n}\n\nvar extractorRegExps = {\n  'root': /<svg\\s[^>]+>/,\n  'width': /\\bwidth=(['\"])([^%]+?)\\1/,\n  'height': /\\bheight=(['\"])([^%]+?)\\1/,\n  'viewbox': /\\bviewBox=(['\"])(.+?)\\1/\n};\n\nfunction parseViewbox (viewbox) {\n  var bounds = viewbox.split(' ');\n  return {\n    'width': parseInt(bounds[2], 10),\n    'height': parseInt(bounds[3], 10)\n  };\n}\n\nfunction parseAttributes (root) {\n  var width = root.match(extractorRegExps.width);\n  var height = root.match(extractorRegExps.height);\n  var viewbox = root.match(extractorRegExps.viewbox);\n  return {\n    'width': width && parseInt(width[2], 10),\n    'height': height && parseInt(height[2], 10),\n    'viewbox': viewbox && parseViewbox(viewbox[2])\n  };\n}\n\nfunction calculateByDimensions (attrs) {\n  return {\n    'width': attrs.width,\n    'height': attrs.height\n  };\n}\n\nfunction calculateByViewbox (attrs) {\n  var ratio = attrs.viewbox.width / attrs.viewbox.height;\n  if (attrs.width) {\n    return {\n      'width': attrs.width,\n      'height': Math.floor(attrs.width / ratio)\n    };\n  }\n  if (attrs.height) {\n    return {\n      'width': Math.floor(attrs.height * ratio),\n      'height': attrs.height\n    };\n  }\n  return {\n    'width': attrs.viewbox.width,\n    'height': attrs.viewbox.height\n  };\n}\n\nfunction calculate (buffer) {\n  var root = buffer.toString('utf8').match(extractorRegExps.root);\n  if (root) {\n    var attrs = parseAttributes(root[0]);\n    if (attrs.width && attrs.height) {\n      return calculateByDimensions(attrs);\n    }\n    if (attrs.viewbox) {\n      return calculateByViewbox(attrs);\n    }\n  }\n  throw new TypeError('invalid svg');\n}\n\nmodule.exports = {\n  'detect': isSVG,\n  'calculate': calculate\n};\n","'use strict';\n\n// based on http://www.compix.com/fileformattif.htm\n// TO-DO: support big-endian as well\n\nvar fs = require('fs');\nvar readUInt = require('../readUInt');\n\nfunction isTIFF (buffer) {\n  var hex4 = buffer.toString('hex', 0, 4);\n  return ('49492a00' === hex4 || '4d4d002a' === hex4);\n}\n\n// Read IFD (image-file-directory) into a buffer\nfunction readIFD (buffer, filepath, isBigEndian) {\n\n  var ifdOffset = readUInt(buffer, 32, 4, isBigEndian);\n\n  // read only till the end of the file\n  var bufferSize = 1024;\n  var fileSize = fs.statSync(filepath).size;\n  if (ifdOffset + bufferSize > fileSize) {\n    bufferSize = fileSize - ifdOffset - 10;\n  }\n\n  // populate the buffer\n  var endBuffer = new Buffer(bufferSize);\n  var descriptor = fs.openSync(filepath, 'r');\n  fs.readSync(descriptor, endBuffer, 0, bufferSize, ifdOffset);\n\n  // var ifdLength = readUInt(endBuffer, 16, 0, isBigEndian);\n  var ifdBuffer = endBuffer.slice(2); //, 2 + 12 * ifdLength);\n  return ifdBuffer;\n}\n\n// TIFF values seem to be messed up on Big-Endian, this helps\nfunction readValue (buffer, isBigEndian) {\n  var low = readUInt(buffer, 16, 8, isBigEndian);\n  var high = readUInt(buffer, 16, 10, isBigEndian);\n  return (high << 16) + low;\n}\n\n// move to the next tag\nfunction nextTag (buffer) {\n  if (buffer.length > 24) {\n    return buffer.slice(12);\n  }\n}\n\n// Extract IFD tags from TIFF metadata\nfunction extractTags (buffer, isBigEndian) {\n  var tags = {};\n  var code, type, length;\n\n  while (buffer && buffer.length) {\n    code = readUInt(buffer, 16, 0, isBigEndian);\n    type = readUInt(buffer, 16, 2, isBigEndian);\n    length = readUInt(buffer, 32, 4, isBigEndian);\n\n    // 0 means end of IFD\n    if (code === 0) {\n      break;\n    } else {\n      // 256 is width, 257 is height\n      // if (code === 256 || code === 257) {\n      if (length === 1 && (type === 3 || type === 4)) {\n        tags[code] = readValue(buffer, isBigEndian);\n      }\n\n      // move to the next tag\n      buffer = nextTag(buffer);\n    }\n  }\n  return tags;\n}\n\n// Test if the TIFF is Big Endian or Little Endian\nfunction determineEndianness (buffer) {\n  var signature = buffer.toString('ascii', 0, 2);\n  if ('II' === signature) {\n    return 'LE';\n  } else if ('MM' === signature) {\n    return 'BE';\n  }\n}\n\nfunction calculate (buffer, filepath) {\n\n  if (!filepath) {\n    throw new TypeError('Tiff doesn\\'t support buffer');\n  }\n\n  // Determine BE/LE\n  var isBigEndian = determineEndianness(buffer) === 'BE';\n\n  // read the IFD\n  var ifdBuffer = readIFD(buffer, filepath, isBigEndian);\n\n  // extract the tags from the IFD\n  var tags = extractTags(ifdBuffer, isBigEndian);\n\n  var width = tags[256];\n  var height = tags[257];\n\n  if (!width || !height) {\n    throw new TypeError('Invalid Tiff, missing tags');\n  }\n\n  return {\n    'width': width,\n    'height': height\n  };\n}\n\nmodule.exports = {\n  'detect': isTIFF,\n  'calculate': calculate\n};\n","'use strict';\n\n// based on https://developers.google.com/speed/webp/docs/riff_container\n\nfunction isWebP (buffer) {\n  var riffHeader = 'RIFF' === buffer.toString('ascii', 0, 4);\n  var webpHeader = 'WEBP' === buffer.toString('ascii', 8, 12);\n  var vp8Header  = 'VP8'  === buffer.toString('ascii', 12, 15);\n  return (riffHeader && webpHeader && vp8Header);\n}\n\nfunction calculate (buffer) {\n  var chunkHeader = buffer.toString('ascii', 12, 16);\n  buffer = buffer.slice(20, 30);\n\n  // Extended webp stream signature\n  if (chunkHeader === 'VP8X') {\n    var extendedHeader = buffer[0];\n    var validStart = (extendedHeader & 0xc0) === 0;\n    var validEnd = (extendedHeader & 0x01) === 0;\n    if (validStart && validEnd) {\n      return calculateExtended(buffer);\n    } else {\n      return false;\n    }\n  }\n\n  // Lossless webp stream signature\n  if (chunkHeader === 'VP8 ' && buffer[0] !== 0x2f) {\n    return calculateLossy(buffer);\n  }\n\n  // Lossy webp stream signature\n  var signature = buffer.toString('hex', 3, 6);\n  if (chunkHeader === 'VP8L' && signature !== '9d012a') {\n    return calculateLossless(buffer);\n  }\n\n  return false;\n}\n\nfunction calculateExtended (buffer) {\n  return {\n    'width': 1 + buffer.readUIntLE(4, 3),\n    'height': 1 + buffer.readUIntLE(7, 3)\n  }\n}\n\nfunction calculateLossless (buffer) {\n  return {\n    'width': 1 + (((buffer[2] & 0x3F) << 8) | buffer[1]),\n    'height': 1 + (((buffer[4] & 0xF) << 10) | (buffer[3] << 2) |\n                  ((buffer[2] & 0xC0) >> 6))\n  };\n}\n\nfunction calculateLossy (buffer) {\n  // `& 0x3fff` returns the last 14 bits\n  // TO-DO: include webp scaling in the calculations\n  return {\n    'width': buffer.readInt16LE(6) & 0x3fff,\n    'height': buffer.readInt16LE(8) & 0x3fff\n  };\n}\n\nmodule.exports = {\n  'detect': isWebP,\n  'calculate': calculate\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { homedir } from 'os';\n\nimport { activateEmmetExtension } from '../emmetCommon';\nimport { setHomeDir } from '../util';\n\nexport function activate(context: vscode.ExtensionContext) {\n\tcontext.subscriptions.push(vscode.commands.registerCommand('editor.emmet.action.updateImageSize', () => {\n\t\treturn import('../updateImageSize').then(uis => uis.updateImageSize());\n\t}));\n\n\tsetHomeDir(vscode.Uri.file(homedir()));\n\tactivateEmmetExtension(context);\n}\n","module.exports = require(\"os\");","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { DefaultCompletionItemProvider } from './defaultCompletionProvider';\nimport { expandEmmetAbbreviation, wrapWithAbbreviation, wrapIndividualLinesWithAbbreviation } from './abbreviationActions';\nimport { removeTag } from './removeTag';\nimport { updateTag } from './updateTag';\nimport { matchTag } from './matchTag';\nimport { balanceOut, balanceIn } from './balance';\nimport { splitJoinTag } from './splitJoinTag';\nimport { mergeLines } from './mergeLines';\nimport { toggleComment } from './toggleComment';\nimport { fetchEditPoint } from './editPoint';\nimport { fetchSelectItem } from './selectItem';\nimport { evaluateMathExpression } from './evaluateMathExpression';\nimport { incrementDecrement } from './incrementDecrement';\nimport { LANGUAGE_MODES, getMappingForIncludedLanguages, updateEmmetExtensionsPath, getPathBaseName, getSyntaxes, getEmmetMode } from './util';\nimport { reflectCssValue } from './reflectCssValue';\nimport { addFileToParseCache, removeFileFromParseCache } from './parseDocument';\n\nexport function activateEmmetExtension(context: vscode.ExtensionContext) {\n\tregisterCompletionProviders(context);\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('editor.emmet.action.wrapWithAbbreviation', (args) => {\n\t\twrapWithAbbreviation(args);\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('editor.emmet.action.wrapIndividualLinesWithAbbreviation', (args) => {\n\t\twrapIndividualLinesWithAbbreviation(args);\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('emmet.expandAbbreviation', (args) => {\n\t\texpandEmmetAbbreviation(args);\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('editor.emmet.action.removeTag', () => {\n\t\treturn removeTag();\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('editor.emmet.action.updateTag', (inputTag) => {\n\t\tif (inputTag && typeof inputTag === 'string') {\n\t\t\treturn updateTag(inputTag);\n\t\t}\n\t\treturn vscode.window.showInputBox({ prompt: 'Enter Tag' }).then(tagName => {\n\t\t\tif (tagName) {\n\t\t\t\tconst update = updateTag(tagName);\n\t\t\t\treturn update ? update : false;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('editor.emmet.action.matchTag', () => {\n\t\tmatchTag();\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('editor.emmet.action.balanceOut', () => {\n\t\tbalanceOut();\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('editor.emmet.action.balanceIn', () => {\n\t\tbalanceIn();\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('editor.emmet.action.splitJoinTag', () => {\n\t\treturn splitJoinTag();\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('editor.emmet.action.mergeLines', () => {\n\t\tmergeLines();\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('editor.emmet.action.toggleComment', () => {\n\t\ttoggleComment();\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('editor.emmet.action.nextEditPoint', () => {\n\t\tfetchEditPoint('next');\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('editor.emmet.action.prevEditPoint', () => {\n\t\tfetchEditPoint('prev');\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('editor.emmet.action.selectNextItem', () => {\n\t\tfetchSelectItem('next');\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('editor.emmet.action.selectPrevItem', () => {\n\t\tfetchSelectItem('prev');\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('editor.emmet.action.evaluateMathExpression', () => {\n\t\tevaluateMathExpression();\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('editor.emmet.action.incrementNumberByOneTenth', () => {\n\t\treturn incrementDecrement(0.1);\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('editor.emmet.action.incrementNumberByOne', () => {\n\t\treturn incrementDecrement(1);\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('editor.emmet.action.incrementNumberByTen', () => {\n\t\treturn incrementDecrement(10);\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('editor.emmet.action.decrementNumberByOneTenth', () => {\n\t\treturn incrementDecrement(-0.1);\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('editor.emmet.action.decrementNumberByOne', () => {\n\t\treturn incrementDecrement(-1);\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('editor.emmet.action.decrementNumberByTen', () => {\n\t\treturn incrementDecrement(-10);\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('editor.emmet.action.reflectCSSValue', () => {\n\t\treturn reflectCssValue();\n\t}));\n\n\tcontext.subscriptions.push(vscode.commands.registerCommand('workbench.action.showEmmetCommands', () => {\n\t\tvscode.commands.executeCommand('workbench.action.quickOpen', '>Emmet: ');\n\t}));\n\n\tupdateEmmetExtensionsPath();\n\n\tcontext.subscriptions.push(vscode.workspace.onDidChangeConfiguration((e) => {\n\t\tif (e.affectsConfiguration('emmet.includeLanguages')) {\n\t\t\tregisterCompletionProviders(context);\n\t\t}\n\t\tif (e.affectsConfiguration('emmet.extensionsPath')) {\n\t\t\tupdateEmmetExtensionsPath();\n\t\t}\n\t}));\n\n\tcontext.subscriptions.push(vscode.workspace.onDidSaveTextDocument((e) => {\n\t\tconst basefileName: string = getPathBaseName(e.fileName);\n\t\tif (basefileName.startsWith('snippets') && basefileName.endsWith('.json')) {\n\t\t\tupdateEmmetExtensionsPath(true);\n\t\t}\n\t}));\n\n\tcontext.subscriptions.push(vscode.workspace.onDidOpenTextDocument((e) => {\n\t\tconst emmetMode = getEmmetMode(e.languageId, []) ?? '';\n\t\tconst syntaxes = getSyntaxes();\n\t\tif (syntaxes.markup.includes(emmetMode) || syntaxes.stylesheet.includes(emmetMode)) {\n\t\t\taddFileToParseCache(e);\n\t\t}\n\t}));\n\n\tcontext.subscriptions.push(vscode.workspace.onDidCloseTextDocument((e) => {\n\t\tconst emmetMode = getEmmetMode(e.languageId, []) ?? '';\n\t\tconst syntaxes = getSyntaxes();\n\t\tif (syntaxes.markup.includes(emmetMode) || syntaxes.stylesheet.includes(emmetMode)) {\n\t\t\tremoveFileFromParseCache(e);\n\t\t}\n\t}));\n}\n\n/**\n * Holds any registered completion providers by their language strings\n */\nconst languageMappingForCompletionProviders: Map<string, string> = new Map<string, string>();\nconst completionProvidersMapping: Map<string, vscode.Disposable> = new Map<string, vscode.Disposable>();\n\nfunction registerCompletionProviders(context: vscode.ExtensionContext) {\n\tlet completionProvider = new DefaultCompletionItemProvider();\n\tlet includedLanguages = getMappingForIncludedLanguages();\n\n\tObject.keys(includedLanguages).forEach(language => {\n\t\tif (languageMappingForCompletionProviders.has(language) && languageMappingForCompletionProviders.get(language) === includedLanguages[language]) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (languageMappingForCompletionProviders.has(language)) {\n\t\t\tconst mapping = completionProvidersMapping.get(language);\n\t\t\tif (mapping) {\n\t\t\t\tmapping.dispose();\n\t\t\t}\n\t\t\tlanguageMappingForCompletionProviders.delete(language);\n\t\t\tcompletionProvidersMapping.delete(language);\n\t\t}\n\n\t\tconst provider = vscode.languages.registerCompletionItemProvider({ language, scheme: '*' }, completionProvider, ...LANGUAGE_MODES[includedLanguages[language]]);\n\t\tcontext.subscriptions.push(provider);\n\n\t\tlanguageMappingForCompletionProviders.set(language, includedLanguages[language]);\n\t\tcompletionProvidersMapping.set(language, provider);\n\t});\n\n\tObject.keys(LANGUAGE_MODES).forEach(language => {\n\t\tif (!languageMappingForCompletionProviders.has(language)) {\n\t\t\tconst provider = vscode.languages.registerCompletionItemProvider({ language, scheme: '*' }, completionProvider, ...LANGUAGE_MODES[language]);\n\t\t\tcontext.subscriptions.push(provider);\n\n\t\t\tlanguageMappingForCompletionProviders.set(language, language);\n\t\t\tcompletionProvidersMapping.set(language, provider);\n\t\t}\n\t});\n}\n\nexport function deactivate() {\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { Node, Stylesheet } from 'EmmetFlatNode';\nimport { isValidLocationForEmmetAbbreviation, getSyntaxFromArgs } from './abbreviationActions';\nimport { getEmmetHelper, getMappingForIncludedLanguages, parsePartialStylesheet, getEmmetConfiguration, getEmmetMode, isStyleSheet, getFlatNode, allowedMimeTypesInScriptTag, toLSTextDocument, getHtmlFlatNode } from './util';\nimport { Range as LSRange } from 'vscode-languageserver-textdocument';\nimport { getRootNode } from './parseDocument';\n\nexport class DefaultCompletionItemProvider implements vscode.CompletionItemProvider {\n\n\tprivate lastCompletionType: string | undefined;\n\n\tpublic provideCompletionItems(document: vscode.TextDocument, position: vscode.Position, _: vscode.CancellationToken, context: vscode.CompletionContext): Thenable<vscode.CompletionList | undefined> | undefined {\n\t\tconst completionResult = this.provideCompletionItemsInternal(document, position, context);\n\t\tif (!completionResult) {\n\t\t\tthis.lastCompletionType = undefined;\n\t\t\treturn;\n\t\t}\n\n\t\treturn completionResult.then(completionList => {\n\t\t\tif (!completionList || !completionList.items.length) {\n\t\t\t\tthis.lastCompletionType = undefined;\n\t\t\t\treturn completionList;\n\t\t\t}\n\t\t\tconst item = completionList.items[0];\n\t\t\tconst expandedText = item.documentation ? item.documentation.toString() : '';\n\n\t\t\tif (expandedText.startsWith('<')) {\n\t\t\t\tthis.lastCompletionType = 'html';\n\t\t\t} else if (expandedText.indexOf(':') > 0 && expandedText.endsWith(';')) {\n\t\t\t\tthis.lastCompletionType = 'css';\n\t\t\t} else {\n\t\t\t\tthis.lastCompletionType = undefined;\n\t\t\t}\n\t\t\treturn completionList;\n\t\t});\n\t}\n\n\tprivate provideCompletionItemsInternal(document: vscode.TextDocument, position: vscode.Position, context: vscode.CompletionContext): Thenable<vscode.CompletionList | undefined> | undefined {\n\t\tconst emmetConfig = vscode.workspace.getConfiguration('emmet');\n\t\tconst excludedLanguages = emmetConfig['excludeLanguages'] ? emmetConfig['excludeLanguages'] : [];\n\t\tif (excludedLanguages.indexOf(document.languageId) > -1) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst mappedLanguages = getMappingForIncludedLanguages();\n\t\tconst isSyntaxMapped = mappedLanguages[document.languageId] ? true : false;\n\t\tlet emmetMode = getEmmetMode((isSyntaxMapped ? mappedLanguages[document.languageId] : document.languageId), excludedLanguages);\n\n\t\tif (!emmetMode\n\t\t\t|| emmetConfig['showExpandedAbbreviation'] === 'never'\n\t\t\t|| ((isSyntaxMapped || emmetMode === 'jsx') && emmetConfig['showExpandedAbbreviation'] !== 'always')) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet syntax = emmetMode;\n\n\t\tconst helper = getEmmetHelper();\n\t\tlet validateLocation = syntax === 'html' || syntax === 'jsx' || syntax === 'xml';\n\t\tlet rootNode: Node | undefined;\n\t\tlet currentNode: Node | undefined;\n\n\t\tconst lsDoc = toLSTextDocument(document);\n\t\tposition = document.validatePosition(position);\n\n\t\tif (document.languageId === 'html') {\n\t\t\tif (context.triggerKind === vscode.CompletionTriggerKind.TriggerForIncompleteCompletions) {\n\t\t\t\tswitch (this.lastCompletionType) {\n\t\t\t\t\tcase 'html':\n\t\t\t\t\t\tvalidateLocation = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'css':\n\t\t\t\t\t\tvalidateLocation = false;\n\t\t\t\t\t\tsyntax = 'css';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (validateLocation) {\n\t\t\t\tconst positionOffset = document.offsetAt(position);\n\t\t\t\tconst emmetRootNode = getRootNode(document, true);\n\t\t\t\tconst foundNode = getHtmlFlatNode(document.getText(), emmetRootNode, positionOffset, false);\n\t\t\t\tif (foundNode) {\n\t\t\t\t\tif (foundNode.name === 'script') {\n\t\t\t\t\t\tconst typeNode = foundNode.attributes.find(attr => attr.name.toString() === 'type');\n\t\t\t\t\t\tif (typeNode) {\n\t\t\t\t\t\t\tconst typeAttrValue = typeNode.value.toString();\n\t\t\t\t\t\t\tif (typeAttrValue === 'application/javascript' || typeAttrValue === 'text/javascript') {\n\t\t\t\t\t\t\t\tif (!getSyntaxFromArgs({ language: 'javascript' })) {\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tvalidateLocation = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (allowedMimeTypesInScriptTag.includes(typeAttrValue)) {\n\t\t\t\t\t\t\t\tvalidateLocation = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (foundNode.name === 'style') {\n\t\t\t\t\t\tsyntax = 'css';\n\t\t\t\t\t\tvalidateLocation = false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst styleNode = foundNode.attributes.find(attr => attr.name.toString() === 'style');\n\t\t\t\t\t\tif (styleNode && styleNode.value.start <= positionOffset && positionOffset <= styleNode.value.end) {\n\t\t\t\t\t\t\tsyntax = 'css';\n\t\t\t\t\t\t\tvalidateLocation = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst expandOptions = isStyleSheet(syntax) ?\n\t\t\t{ lookAhead: false, syntax: 'stylesheet' } :\n\t\t\t{ lookAhead: true, syntax: 'markup' };\n\t\tconst extractAbbreviationResults = helper.extractAbbreviation(lsDoc, position, expandOptions);\n\t\tif (!extractAbbreviationResults || !helper.isAbbreviationValid(syntax, extractAbbreviationResults.abbreviation)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst offset = document.offsetAt(position);\n\t\tif (isStyleSheet(document.languageId) && context.triggerKind !== vscode.CompletionTriggerKind.TriggerForIncompleteCompletions) {\n\t\t\tvalidateLocation = true;\n\t\t\tlet usePartialParsing = vscode.workspace.getConfiguration('emmet')['optimizeStylesheetParsing'] === true;\n\t\t\trootNode = usePartialParsing && document.lineCount > 1000 ? parsePartialStylesheet(document, position) : <Stylesheet>getRootNode(document, true);\n\t\t\tif (!rootNode) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcurrentNode = getFlatNode(rootNode, offset, true);\n\t\t}\n\n\t\tif (validateLocation && !isValidLocationForEmmetAbbreviation(document, rootNode, currentNode, syntax, offset, toRange(extractAbbreviationResults.abbreviationRange))) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet noiseCheckPromise: Thenable<any> = Promise.resolve();\n\n\t\t// Fix for https://github.com/microsoft/vscode/issues/32647\n\t\t// Check for document symbols in js/ts/jsx/tsx and avoid triggering emmet for abbreviations of the form symbolName.sometext\n\t\t// Presence of > or * or + in the abbreviation denotes valid abbreviation that should trigger emmet\n\t\tif (!isStyleSheet(syntax) && (document.languageId === 'javascript' || document.languageId === 'javascriptreact' || document.languageId === 'typescript' || document.languageId === 'typescriptreact')) {\n\t\t\tlet abbreviation: string = extractAbbreviationResults.abbreviation;\n\t\t\tif (abbreviation.startsWith('this.')) {\n\t\t\t\tnoiseCheckPromise = Promise.resolve(true);\n\t\t\t} else {\n\t\t\t\tnoiseCheckPromise = vscode.commands.executeCommand<vscode.SymbolInformation[]>('vscode.executeDocumentSymbolProvider', document.uri).then((symbols: vscode.SymbolInformation[] | undefined) => {\n\t\t\t\t\treturn symbols && symbols.find(x => abbreviation === x.name || (abbreviation.startsWith(x.name + '.') && !/>|\\*|\\+/.test(abbreviation)));\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn noiseCheckPromise.then((noise): vscode.CompletionList | undefined => {\n\t\t\tif (noise) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet result = helper.doComplete(toLSTextDocument(document), position, syntax, getEmmetConfiguration(syntax!));\n\n\t\t\t// https://github.com/microsoft/vscode/issues/86941\n\t\t\tif (result && result.items && result.items.length === 1) {\n\t\t\t\tif (result.items[0].label === 'widows: ;') {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet newItems: vscode.CompletionItem[] = [];\n\t\t\tif (result && result.items) {\n\t\t\t\tresult.items.forEach((item: any) => {\n\t\t\t\t\tlet newItem = new vscode.CompletionItem(item.label);\n\t\t\t\t\tnewItem.documentation = item.documentation;\n\t\t\t\t\tnewItem.detail = item.detail;\n\t\t\t\t\tnewItem.insertText = new vscode.SnippetString(item.textEdit.newText);\n\t\t\t\t\tlet oldrange = item.textEdit.range;\n\t\t\t\t\tnewItem.range = new vscode.Range(oldrange.start.line, oldrange.start.character, oldrange.end.line, oldrange.end.character);\n\n\t\t\t\t\tnewItem.filterText = item.filterText;\n\t\t\t\t\tnewItem.sortText = item.sortText;\n\n\t\t\t\t\tif (emmetConfig['showSuggestionsAsSnippets'] === true) {\n\t\t\t\t\t\tnewItem.kind = vscode.CompletionItemKind.Snippet;\n\t\t\t\t\t}\n\t\t\t\t\tnewItems.push(newItem);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn new vscode.CompletionList(newItems, true);\n\t\t});\n\t}\n}\n\nfunction toRange(lsRange: LSRange) {\n\treturn new vscode.Range(lsRange.start.line, lsRange.start.character, lsRange.end.line, lsRange.end.character);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/* Based on @sergeche's work in his emmet plugin */\n\nimport { TextDocument } from 'vscode';\n\n/**\n * A stream reader for VSCode's `TextDocument`\n * Based on @emmetio/stream-reader and @emmetio/atom-plugin\n */\nexport class DocumentStreamReader {\n\tprivate document: TextDocument;\n\tprivate start: number;\n\tprivate _eof: number;\n\tprivate _sof: number;\n\tpublic pos: number;\n\n\tconstructor(document: TextDocument, pos?: number, limit?: [number, number]) {\n\t\tthis.document = document;\n\t\tthis.start = this.pos = pos ? pos : 0;\n\t\tthis._sof = limit ? limit[0] : 0;\n\t\tthis._eof = limit ? limit[1] : document.getText().length;\n\t}\n\n\t/**\n\t * Returns true only if the stream is at the start of the file.\n\t */\n\tsof(): boolean {\n\t\treturn this.pos <= this._sof;\n\t}\n\n\t/**\n\t * Returns true only if the stream is at the end of the file.\n\t */\n\teof(): boolean {\n\t\treturn this.pos >= this._eof;\n\t}\n\n\t/**\n\t * Creates a new stream instance which is limited to given range for given document\n\t */\n\tlimit(start: number, end: number): DocumentStreamReader {\n\t\treturn new DocumentStreamReader(this.document, start, [start, end]);\n\t}\n\n\t/**\n\t * Returns the next character code in the stream without advancing it.\n\t * Will return NaN at the end of the file.\n\t */\n\tpeek(): number {\n\t\tif (this.eof()) {\n\t\t\treturn NaN;\n\t\t}\n\t\treturn this.document.getText().charCodeAt(this.pos);\n\t}\n\n\t/**\n\t * Returns the next character in the stream and advances it.\n\t * Also returns NaN when no more characters are available.\n\t */\n\tnext(): number {\n\t\tif (this.eof()) {\n\t\t\treturn NaN;\n\t\t}\n\n\t\tconst code = this.document.getText().charCodeAt(this.pos);\n\t\tthis.pos++;\n\n\t\tif (this.eof()) {\n\t\t\t// restrict pos to eof, if in case it got moved beyond eof\n\t\t\tthis.pos = this._eof;\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * Backs up the stream n characters. Backing it up further than the\n\t * start of the current token will cause things to break, so be careful.\n\t */\n\tbackUp(n: number): number {\n\t\tthis.pos -= n;\n\t\tif (this.pos < 0) {\n\t\t\tthis.pos = 0;\n\t\t}\n\t\treturn this.peek();\n\t}\n\n\t/**\n\t * Get the string between the start of the current token and the\n\t * current stream position.\n\t */\n\tcurrent(): string {\n\t\treturn this.substring(this.start, this.pos);\n\t}\n\n\t/**\n\t * Returns contents for given range\n\t */\n\tsubstring(from: number, to: number): string {\n\t\treturn this.document.getText().substring(from, to);\n\t}\n\n\t/**\n\t * Creates error object with current stream state\n\t */\n\terror(message: string): Error {\n\t\tconst err = new Error(`${message} at offset ${this.pos}`);\n\t\treturn err;\n\t}\n\n\t/**\n\t * `match` can be a character code or a function that takes a character code\n\t * and returns a boolean. If the next character in the stream 'matches'\n\t * the given argument, it is consumed and returned.\n\t * Otherwise, `false` is returned.\n\t */\n\teat(match: number | Function): boolean {\n\t\tconst ch = this.peek();\n\t\tconst ok = typeof match === 'function' ? match(ch) : ch === match;\n\n\t\tif (ok) {\n\t\t\tthis.next();\n\t\t}\n\n\t\treturn ok;\n\t}\n\n\t/**\n\t * Repeatedly calls <code>eat</code> with the given argument, until it\n\t * fails. Returns <code>true</code> if any characters were eaten.\n\t */\n\teatWhile(match: number | Function): boolean {\n\t\tconst start = this.pos;\n\t\twhile (!this.eof() && this.eat(match)) { }\n\t\treturn this.pos !== start;\n\t}\n}\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nvar FullTextDocument = /** @class */ (function () {\n    function FullTextDocument(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = undefined;\n    }\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\n        get: function () {\n            return this._uri;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\n        get: function () {\n            return this._languageId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\n        get: function () {\n            return this._version;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FullTextDocument.prototype.getText = function (range) {\n        if (range) {\n            var start = this.offsetAt(range.start);\n            var end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    };\n    FullTextDocument.prototype.update = function (changes, version) {\n        for (var _i = 0, changes_1 = changes; _i < changes_1.length; _i++) {\n            var change = changes_1[_i];\n            if (FullTextDocument.isIncremental(change)) {\n                // makes sure start is before end\n                var range = getWellformedRange(change.range);\n                // update content\n                var startOffset = this.offsetAt(range.start);\n                var endOffset = this.offsetAt(range.end);\n                this._content = this._content.substring(0, startOffset) + change.text + this._content.substring(endOffset, this._content.length);\n                // update the offsets\n                var startLine = Math.max(range.start.line, 0);\n                var endLine = Math.max(range.end.line, 0);\n                var lineOffsets = this._lineOffsets;\n                var addedLineOffsets = computeLineOffsets(change.text, false, startOffset);\n                if (endLine - startLine === addedLineOffsets.length) {\n                    for (var i = 0, len = addedLineOffsets.length; i < len; i++) {\n                        lineOffsets[i + startLine + 1] = addedLineOffsets[i];\n                    }\n                }\n                else {\n                    if (addedLineOffsets.length < 10000) {\n                        lineOffsets.splice.apply(lineOffsets, [startLine + 1, endLine - startLine].concat(addedLineOffsets));\n                    }\n                    else { // avoid too many arguments for splice\n                        this._lineOffsets = lineOffsets = lineOffsets.slice(0, startLine + 1).concat(addedLineOffsets, lineOffsets.slice(endLine + 1));\n                    }\n                }\n                var diff = change.text.length - (endOffset - startOffset);\n                if (diff !== 0) {\n                    for (var i = startLine + 1 + addedLineOffsets.length, len = lineOffsets.length; i < len; i++) {\n                        lineOffsets[i] = lineOffsets[i] + diff;\n                    }\n                }\n            }\n            else if (FullTextDocument.isFull(change)) {\n                this._content = change.text;\n                this._lineOffsets = undefined;\n            }\n            else {\n                throw new Error('Unknown change event received');\n            }\n        }\n        this._version = version;\n    };\n    FullTextDocument.prototype.getLineOffsets = function () {\n        if (this._lineOffsets === undefined) {\n            this._lineOffsets = computeLineOffsets(this._content, true);\n        }\n        return this._lineOffsets;\n    };\n    FullTextDocument.prototype.positionAt = function (offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        var lineOffsets = this.getLineOffsets();\n        var low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return { line: 0, character: offset };\n        }\n        while (low < high) {\n            var mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        var line = low - 1;\n        return { line: line, character: offset - lineOffsets[line] };\n    };\n    FullTextDocument.prototype.offsetAt = function (position) {\n        var lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        var lineOffset = lineOffsets[position.line];\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n    };\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\n        get: function () {\n            return this.getLineOffsets().length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FullTextDocument.isIncremental = function (event) {\n        var candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range !== undefined &&\n            (candidate.rangeLength === undefined || typeof candidate.rangeLength === 'number');\n    };\n    FullTextDocument.isFull = function (event) {\n        var candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range === undefined && candidate.rangeLength === undefined;\n    };\n    return FullTextDocument;\n}());\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new text document.\n     *\n     * @param uri The document's uri.\n     * @param languageId  The document's language Id.\n     * @param version The document's initial version number.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Updates a TextDocument by modifing its content.\n     *\n     * @param document the document to update. Only documents created by TextDocument.create are valid inputs.\n     * @param changes the changes to apply to the document.\n     * @returns The updated TextDocument. Note: That's the same document instance passed in as first parameter.\n     *\n     */\n    function update(document, changes, version) {\n        if (document instanceof FullTextDocument) {\n            document.update(changes, version);\n            return document;\n        }\n        else {\n            throw new Error('TextDocument.update: document must be created by TextDocument.create');\n        }\n    }\n    TextDocument.update = update;\n    function applyEdits(document, edits) {\n        var text = document.getText();\n        var sortedEdits = mergeSort(edits.map(getWellformedEdit), function (a, b) {\n            var diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return diff;\n        });\n        var lastModifiedOffset = 0;\n        var spans = [];\n        for (var _i = 0, sortedEdits_1 = sortedEdits; _i < sortedEdits_1.length; _i++) {\n            var e = sortedEdits_1[_i];\n            var startOffset = document.offsetAt(e.range.start);\n            if (startOffset < lastModifiedOffset) {\n                throw new Error('Overlapping edit');\n            }\n            else if (startOffset > lastModifiedOffset) {\n                spans.push(text.substring(lastModifiedOffset, startOffset));\n            }\n            if (e.newText.length) {\n                spans.push(e.newText);\n            }\n            lastModifiedOffset = document.offsetAt(e.range.end);\n        }\n        spans.push(text.substr(lastModifiedOffset));\n        return spans.join('');\n    }\n    TextDocument.applyEdits = applyEdits;\n})(TextDocument || (TextDocument = {}));\nfunction mergeSort(data, compare) {\n    if (data.length <= 1) {\n        // sorted\n        return data;\n    }\n    var p = (data.length / 2) | 0;\n    var left = data.slice(0, p);\n    var right = data.slice(p);\n    mergeSort(left, compare);\n    mergeSort(right, compare);\n    var leftIdx = 0;\n    var rightIdx = 0;\n    var i = 0;\n    while (leftIdx < left.length && rightIdx < right.length) {\n        var ret = compare(left[leftIdx], right[rightIdx]);\n        if (ret <= 0) {\n            // smaller_equal -> take left to preserve order\n            data[i++] = left[leftIdx++];\n        }\n        else {\n            // greater -> take right\n            data[i++] = right[rightIdx++];\n        }\n    }\n    while (leftIdx < left.length) {\n        data[i++] = left[leftIdx++];\n    }\n    while (rightIdx < right.length) {\n        data[i++] = right[rightIdx++];\n    }\n    return data;\n}\nfunction computeLineOffsets(text, isAtLineStart, textOffset) {\n    if (textOffset === void 0) { textOffset = 0; }\n    var result = isAtLineStart ? [textOffset] : [];\n    for (var i = 0; i < text.length; i++) {\n        var ch = text.charCodeAt(i);\n        if (ch === 13 /* CarriageReturn */ || ch === 10 /* LineFeed */) {\n            if (ch === 13 /* CarriageReturn */ && i + 1 < text.length && text.charCodeAt(i + 1) === 10 /* LineFeed */) {\n                i++;\n            }\n            result.push(textOffset + i + 1);\n        }\n    }\n    return result;\n}\nfunction getWellformedRange(range) {\n    var start = range.start;\n    var end = range.end;\n    if (start.line > end.line || (start.line === end.line && start.character > end.character)) {\n        return { start: end, end: start };\n    }\n    return range;\n}\nfunction getWellformedEdit(textEdit) {\n    var range = getWellformedRange(textEdit.range);\n    if (range !== textEdit.range) {\n        return { newText: textEdit.newText, range: range };\n    }\n    return textEdit;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { getRootNode } from './parseDocument';\nimport { validate, getHtmlFlatNode, offsetRangeToVsRange } from './util';\nimport { HtmlNode as HtmlFlatNode } from 'EmmetFlatNode';\n\nexport function removeTag() {\n\tif (!validate(false) || !vscode.window.activeTextEditor) {\n\t\treturn;\n\t}\n\tconst editor = vscode.window.activeTextEditor;\n\tconst document = editor.document;\n\tconst rootNode = <HtmlFlatNode>getRootNode(document, true);\n\tif (!rootNode) {\n\t\treturn;\n\t}\n\n\tlet finalRangesToRemove = editor.selections.reverse()\n\t\t.reduce<vscode.Range[]>((prev, selection) =>\n\t\t\tprev.concat(getRangesToRemove(editor.document, rootNode, selection)), []);\n\n\treturn editor.edit(editBuilder => {\n\t\tfinalRangesToRemove.forEach(range => {\n\t\t\teditBuilder.replace(range, '');\n\t\t});\n\t});\n}\n\n/**\n * Calculates the ranges to remove, along with what to replace those ranges with.\n * It finds the node to remove based on the selection's start position\n * and then removes that node, reindenting the content in between.\n */\nfunction getRangesToRemove(document: vscode.TextDocument, rootNode: HtmlFlatNode, selection: vscode.Selection): vscode.Range[] {\n\tconst offset = document.offsetAt(selection.start);\n\tconst nodeToUpdate = getHtmlFlatNode(document.getText(), rootNode, offset, true);\n\tif (!nodeToUpdate) {\n\t\treturn [];\n\t}\n\n\tlet openTagRange: vscode.Range | undefined;\n\tif (nodeToUpdate.open) {\n\t\topenTagRange = offsetRangeToVsRange(document, nodeToUpdate.open.start, nodeToUpdate.open.end);\n\t}\n\tlet closeTagRange: vscode.Range | undefined;\n\tif (nodeToUpdate.close) {\n\t\tcloseTagRange = offsetRangeToVsRange(document, nodeToUpdate.close.start, nodeToUpdate.close.end);\n\t}\n\n\tlet rangesToRemove = [];\n\tif (openTagRange) {\n\t\trangesToRemove.push(openTagRange);\n\t\tif (closeTagRange) {\n\t\t\tconst indentAmountToRemove = calculateIndentAmountToRemove(document, openTagRange, closeTagRange);\n\t\t\tfor (let i = openTagRange.start.line + 1; i < closeTagRange.start.line; i++) {\n\t\t\t\trangesToRemove.push(new vscode.Range(i, 0, i, indentAmountToRemove));\n\t\t\t}\n\t\t\trangesToRemove.push(closeTagRange);\n\t\t}\n\t}\n\treturn rangesToRemove;\n}\n\n/**\n * Calculates the amount of indent to remove for getRangesToRemove.\n */\nfunction calculateIndentAmountToRemove(document: vscode.TextDocument, openRange: vscode.Range, closeRange: vscode.Range): number {\n\tconst startLine = openRange.start.line;\n\tconst endLine = closeRange.start.line;\n\n\tconst startLineIndent = document.lineAt(startLine).firstNonWhitespaceCharacterIndex;\n\tconst endLineIndent = document.lineAt(endLine).firstNonWhitespaceCharacterIndex;\n\n\tlet contentIndent: number | undefined;\n\tfor (let i = startLine + 1; i < endLine; i++) {\n\t\tconst lineIndent = document.lineAt(i).firstNonWhitespaceCharacterIndex;\n\t\tcontentIndent = !contentIndent ? lineIndent : Math.min(contentIndent, lineIndent);\n\t}\n\n\tlet indentAmount = 0;\n\tif (contentIndent) {\n\t\tif (contentIndent < startLineIndent || contentIndent < endLineIndent) {\n\t\t\tindentAmount = 0;\n\t\t}\n\t\telse {\n\t\t\tindentAmount = Math.min(contentIndent - startLineIndent, contentIndent - endLineIndent);\n\t\t}\n\t}\n\treturn indentAmount;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { getHtmlFlatNode, validate } from './util';\nimport { HtmlNode as HtmlFlatNode } from 'EmmetFlatNode';\nimport { getRootNode } from './parseDocument';\n\nexport function updateTag(tagName: string): Thenable<boolean> | undefined {\n\tif (!validate(false) || !vscode.window.activeTextEditor) {\n\t\treturn;\n\t}\n\n\tconst editor = vscode.window.activeTextEditor;\n\tconst document = editor.document;\n\tconst rootNode = <HtmlFlatNode>getRootNode(document, true);\n\tif (!rootNode) {\n\t\treturn;\n\t}\n\n\tconst rangesToUpdate = editor.selections.reverse()\n\t\t.reduce<vscode.Range[]>((prev, selection) =>\n\t\t\tprev.concat(getRangesToUpdate(document, selection, rootNode)), []);\n\n\treturn editor.edit(editBuilder => {\n\t\trangesToUpdate.forEach(range => {\n\t\t\teditBuilder.replace(range, tagName);\n\t\t});\n\t});\n}\n\nfunction getRangesFromNode(node: HtmlFlatNode, document: vscode.TextDocument): vscode.Range[] {\n\tlet ranges: vscode.Range[] = [];\n\tif (node.open) {\n\t\tconst start = document.positionAt(node.open.start);\n\t\tranges.push(new vscode.Range(start.translate(0, 1),\n\t\t\tstart.translate(0, 1).translate(0, node.name.length)));\n\t}\n\tif (node.close) {\n\t\tconst endTagStart = document.positionAt(node.close.start);\n\t\tconst end = document.positionAt(node.close.end);\n\t\tranges.push(new vscode.Range(endTagStart.translate(0, 2), end.translate(0, -1)));\n\t}\n\treturn ranges;\n}\n\nfunction getRangesToUpdate(document: vscode.TextDocument, selection: vscode.Selection, rootNode: HtmlFlatNode): vscode.Range[] {\n\tconst documentText = document.getText();\n\tconst offset = document.offsetAt(selection.start);\n\tconst nodeToUpdate = getHtmlFlatNode(documentText, rootNode, offset, true);\n\tif (!nodeToUpdate) {\n\t\treturn [];\n\t}\n\treturn getRangesFromNode(nodeToUpdate, document);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { validate, getHtmlFlatNode, offsetRangeToSelection } from './util';\nimport { getRootNode } from './parseDocument';\nimport { HtmlNode as HtmlFlatNode } from 'EmmetFlatNode';\n\nexport function matchTag() {\n\tif (!validate(false) || !vscode.window.activeTextEditor) {\n\t\treturn;\n\t}\n\n\tconst editor = vscode.window.activeTextEditor;\n\tconst document = editor.document;\n\tconst rootNode = <HtmlFlatNode>getRootNode(document, true);\n\tif (!rootNode) {\n\t\treturn;\n\t}\n\n\tlet updatedSelections: vscode.Selection[] = [];\n\teditor.selections.forEach(selection => {\n\t\tconst updatedSelection = getUpdatedSelections(document, rootNode, selection.start);\n\t\tif (updatedSelection) {\n\t\t\tupdatedSelections.push(updatedSelection);\n\t\t}\n\t});\n\tif (updatedSelections.length) {\n\t\teditor.selections = updatedSelections;\n\t\teditor.revealRange(editor.selections[updatedSelections.length - 1]);\n\t}\n}\n\nfunction getUpdatedSelections(document: vscode.TextDocument, rootNode: HtmlFlatNode, position: vscode.Position): vscode.Selection | undefined {\n\tconst offset = document.offsetAt(position);\n\tconst currentNode = getHtmlFlatNode(document.getText(), rootNode, offset, true);\n\tif (!currentNode) {\n\t\treturn;\n\t}\n\n\t// If no opening/closing tag or cursor is between open and close tag, then no-op\n\tif (!currentNode.open\n\t\t|| !currentNode.close\n\t\t|| (offset > currentNode.open.end && offset < currentNode.close.start)) {\n\t\treturn;\n\t}\n\n\t// Place cursor inside the close tag if cursor is inside the open tag, else place it inside the open tag\n\tconst finalOffset = (offset <= currentNode.open.end) ? currentNode.close.start + 2 : currentNode.start + 1;\n\treturn offsetRangeToSelection(document, finalOffset, finalOffset);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { getHtmlFlatNode, offsetRangeToSelection, validate } from './util';\nimport { getRootNode } from './parseDocument';\nimport { HtmlNode as HtmlFlatNode } from 'EmmetFlatNode';\n\nlet balanceOutStack: Array<vscode.Selection[]> = [];\nlet lastBalancedSelections: vscode.Selection[] = [];\n\nexport function balanceOut() {\n\tbalance(true);\n}\n\nexport function balanceIn() {\n\tbalance(false);\n}\n\nfunction balance(out: boolean) {\n\tif (!validate(false) || !vscode.window.activeTextEditor) {\n\t\treturn;\n\t}\n\tconst editor = vscode.window.activeTextEditor;\n\tconst document = editor.document;\n\tconst rootNode = <HtmlFlatNode>getRootNode(document, true);\n\tif (!rootNode) {\n\t\treturn;\n\t}\n\n\tconst rangeFn = out ? getRangeToBalanceOut : getRangeToBalanceIn;\n\tlet newSelections: vscode.Selection[] = [];\n\teditor.selections.forEach(selection => {\n\t\tconst range = rangeFn(document, rootNode, selection);\n\t\tnewSelections.push(range);\n\t});\n\n\t// check whether we are starting a balance elsewhere\n\tif (areSameSelections(lastBalancedSelections, editor.selections)) {\n\t\t// we are not starting elsewhere, so use the stack as-is\n\t\tif (out) {\n\t\t\t// make sure we are able to expand outwards\n\t\t\tif (!areSameSelections(editor.selections, newSelections)) {\n\t\t\t\tbalanceOutStack.push(editor.selections);\n\t\t\t}\n\t\t} else if (balanceOutStack.length) {\n\t\t\tnewSelections = balanceOutStack.pop()!;\n\t\t}\n\t} else {\n\t\t// we are starting elsewhere, so reset the stack\n\t\tbalanceOutStack = out ? [editor.selections] : [];\n\t}\n\n\teditor.selections = newSelections;\n\tlastBalancedSelections = editor.selections;\n}\n\nfunction getRangeToBalanceOut(document: vscode.TextDocument, rootNode: HtmlFlatNode, selection: vscode.Selection): vscode.Selection {\n\tconst offset = document.offsetAt(selection.start);\n\tconst nodeToBalance = getHtmlFlatNode(document.getText(), rootNode, offset, false);\n\tif (!nodeToBalance) {\n\t\treturn selection;\n\t}\n\tif (!nodeToBalance.open || !nodeToBalance.close) {\n\t\treturn offsetRangeToSelection(document, nodeToBalance.start, nodeToBalance.end);\n\t}\n\n\tconst innerSelection = offsetRangeToSelection(document, nodeToBalance.open.end, nodeToBalance.close.start);\n\tconst outerSelection = offsetRangeToSelection(document, nodeToBalance.open.start, nodeToBalance.close.end);\n\n\tif (innerSelection.contains(selection) && !innerSelection.isEqual(selection)) {\n\t\treturn innerSelection;\n\t}\n\tif (outerSelection.contains(selection) && !outerSelection.isEqual(selection)) {\n\t\treturn outerSelection;\n\t}\n\treturn selection;\n}\n\nfunction getRangeToBalanceIn(document: vscode.TextDocument, rootNode: HtmlFlatNode, selection: vscode.Selection): vscode.Selection {\n\tconst offset = document.offsetAt(selection.start);\n\tconst nodeToBalance = getHtmlFlatNode(document.getText(), rootNode, offset, true);\n\tif (!nodeToBalance) {\n\t\treturn selection;\n\t}\n\n\tconst selectionStart = document.offsetAt(selection.start);\n\tconst selectionEnd = document.offsetAt(selection.end);\n\tif (nodeToBalance.open && nodeToBalance.close) {\n\t\tconst entireNodeSelected = selectionStart === nodeToBalance.start && selectionEnd === nodeToBalance.end;\n\t\tconst startInOpenTag = selectionStart > nodeToBalance.open.start && selectionStart < nodeToBalance.open.end;\n\t\tconst startInCloseTag = selectionStart > nodeToBalance.close.start && selectionStart < nodeToBalance.close.end;\n\n\t\tif (entireNodeSelected || startInOpenTag || startInCloseTag) {\n\t\t\treturn offsetRangeToSelection(document, nodeToBalance.open.end, nodeToBalance.close.start);\n\t\t}\n\t}\n\n\tif (!nodeToBalance.firstChild) {\n\t\treturn selection;\n\t}\n\n\tconst firstChild = nodeToBalance.firstChild;\n\tif (selectionStart === firstChild.start\n\t\t&& selectionEnd === firstChild.end\n\t\t&& firstChild.open\n\t\t&& firstChild.close) {\n\t\treturn offsetRangeToSelection(document, firstChild.open.end, firstChild.close.start);\n\t}\n\n\treturn offsetRangeToSelection(document, firstChild.start, firstChild.end);\n}\n\nfunction areSameSelections(a: vscode.Selection[], b: vscode.Selection[]): boolean {\n\tif (a.length !== b.length) {\n\t\treturn false;\n\t}\n\tfor (let i = 0; i < a.length; i++) {\n\t\tif (!a[i].isEqual(b[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { validate, getEmmetMode, getEmmetConfiguration, getHtmlFlatNode, offsetRangeToVsRange } from './util';\nimport { HtmlNode as HtmlFlatNode } from 'EmmetFlatNode';\nimport { getRootNode } from './parseDocument';\n\nexport function splitJoinTag() {\n\tif (!validate(false) || !vscode.window.activeTextEditor) {\n\t\treturn;\n\t}\n\n\tconst editor = vscode.window.activeTextEditor;\n\tconst document = editor.document;\n\tconst rootNode = <HtmlFlatNode>getRootNode(editor.document, true);\n\tif (!rootNode) {\n\t\treturn;\n\t}\n\n\treturn editor.edit(editBuilder => {\n\t\teditor.selections.reverse().forEach(selection => {\n\t\t\tconst documentText = document.getText();\n\t\t\tconst offset = document.offsetAt(selection.start);\n\t\t\tconst nodeToUpdate = getHtmlFlatNode(documentText, rootNode, offset, true);\n\t\t\tif (nodeToUpdate) {\n\t\t\t\tconst textEdit = getRangesToReplace(document, nodeToUpdate);\n\t\t\t\teditBuilder.replace(textEdit.range, textEdit.newText);\n\t\t\t}\n\t\t});\n\t});\n}\n\nfunction getRangesToReplace(document: vscode.TextDocument, nodeToUpdate: HtmlFlatNode): vscode.TextEdit {\n\tlet rangeToReplace: vscode.Range;\n\tlet textToReplaceWith: string;\n\n\tif (!nodeToUpdate.open || !nodeToUpdate.close) {\n\t\t// Split Tag\n\t\tconst nodeText = document.getText().substring(nodeToUpdate.start, nodeToUpdate.end);\n\t\tconst m = nodeText.match(/(\\s*\\/)?>$/);\n\t\tconst end = nodeToUpdate.end;\n\t\tconst start = m ? end - m[0].length : end;\n\n\t\trangeToReplace = offsetRangeToVsRange(document, start, end);\n\t\ttextToReplaceWith = `></${nodeToUpdate.name}>`;\n\t} else {\n\t\t// Join Tag\n\t\tconst start = nodeToUpdate.open.end - 1;\n\t\tconst end = nodeToUpdate.end;\n\t\trangeToReplace = offsetRangeToVsRange(document, start, end);\n\t\ttextToReplaceWith = '/>';\n\n\t\tconst emmetMode = getEmmetMode(document.languageId, []) || '';\n\t\tconst emmetConfig = getEmmetConfiguration(emmetMode);\n\t\tif (emmetMode && emmetConfig.syntaxProfiles[emmetMode] &&\n\t\t\t(emmetConfig.syntaxProfiles[emmetMode]['selfClosingStyle'] === 'xhtml' || emmetConfig.syntaxProfiles[emmetMode]['self_closing_tag'] === 'xhtml')) {\n\t\t\ttextToReplaceWith = ' ' + textToReplaceWith;\n\t\t}\n\t}\n\n\treturn new vscode.TextEdit(rangeToReplace, textToReplaceWith);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { Node } from 'EmmetFlatNode';\nimport { getFlatNode, offsetRangeToVsRange, validate } from './util';\nimport { getRootNode } from './parseDocument';\n\nexport function mergeLines() {\n\tif (!validate(false) || !vscode.window.activeTextEditor) {\n\t\treturn;\n\t}\n\n\tconst editor = vscode.window.activeTextEditor;\n\n\tconst rootNode = getRootNode(editor.document, true);\n\tif (!rootNode) {\n\t\treturn;\n\t}\n\n\treturn editor.edit(editBuilder => {\n\t\teditor.selections.reverse().forEach(selection => {\n\t\t\tconst textEdit = getRangesToReplace(editor.document, selection, rootNode);\n\t\t\tif (textEdit) {\n\t\t\t\teditBuilder.replace(textEdit.range, textEdit.newText);\n\t\t\t}\n\t\t});\n\t});\n}\n\nfunction getRangesToReplace(document: vscode.TextDocument, selection: vscode.Selection, rootNode: Node): vscode.TextEdit | undefined {\n\tlet startNodeToUpdate: Node | undefined;\n\tlet endNodeToUpdate: Node | undefined;\n\n\tconst selectionStart = document.offsetAt(selection.start);\n\tconst selectionEnd = document.offsetAt(selection.end);\n\tif (selection.isEmpty) {\n\t\tstartNodeToUpdate = endNodeToUpdate = getFlatNode(rootNode, selectionStart, true);\n\t} else {\n\t\tstartNodeToUpdate = getFlatNode(rootNode, selectionStart, true);\n\t\tendNodeToUpdate = getFlatNode(rootNode, selectionEnd, true);\n\t}\n\n\tif (!startNodeToUpdate || !endNodeToUpdate) {\n\t\treturn;\n\t}\n\n\tconst startPos = document.positionAt(startNodeToUpdate.start);\n\tconst startLine = startPos.line;\n\tconst startChar = startPos.character;\n\tconst endPos = document.positionAt(endNodeToUpdate.end);\n\tconst endLine = endPos.line;\n\tif (startLine === endLine) {\n\t\treturn;\n\t}\n\n\tconst rangeToReplace = offsetRangeToVsRange(document, startNodeToUpdate.start, endNodeToUpdate.end);\n\tlet textToReplaceWith = document.lineAt(startLine).text.substr(startChar);\n\tfor (let i = startLine + 1; i <= endLine; i++) {\n\t\ttextToReplaceWith += document.lineAt(i).text.trim();\n\t}\n\n\treturn new vscode.TextEdit(rangeToReplace, textToReplaceWith);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { getNodesInBetween, getFlatNode, getHtmlFlatNode, sameNodes, isStyleSheet, validate, offsetRangeToVsRange, offsetRangeToSelection } from './util';\nimport { Node, Stylesheet, Rule } from 'EmmetFlatNode';\nimport parseStylesheet from '@emmetio/css-parser';\nimport { getRootNode } from './parseDocument';\n\nlet startCommentStylesheet: string;\nlet endCommentStylesheet: string;\nlet startCommentHTML: string;\nlet endCommentHTML: string;\n\nexport function toggleComment(): Thenable<boolean> | undefined {\n\tif (!validate() || !vscode.window.activeTextEditor) {\n\t\treturn;\n\t}\n\tsetupCommentSpacing();\n\n\tconst editor = vscode.window.activeTextEditor;\n\tconst rootNode = getRootNode(editor.document, true);\n\tif (!rootNode) {\n\t\treturn;\n\t}\n\n\treturn editor.edit(editBuilder => {\n\t\tlet allEdits: vscode.TextEdit[][] = [];\n\t\teditor.selections.reverse().forEach(selection => {\n\t\t\tconst edits = isStyleSheet(editor.document.languageId) ? toggleCommentStylesheet(editor.document, selection, <Stylesheet>rootNode) : toggleCommentHTML(editor.document, selection, rootNode!);\n\t\t\tif (edits.length > 0) {\n\t\t\t\tallEdits.push(edits);\n\t\t\t}\n\t\t});\n\n\t\t// Apply edits in order so we can skip nested ones.\n\t\tallEdits.sort((arr1, arr2) => {\n\t\t\tlet result = arr1[0].range.start.line - arr2[0].range.start.line;\n\t\t\treturn result === 0 ? arr1[0].range.start.character - arr2[0].range.start.character : result;\n\t\t});\n\t\tlet lastEditPosition = new vscode.Position(0, 0);\n\t\tfor (const edits of allEdits) {\n\t\t\tif (edits[0].range.end.isAfterOrEqual(lastEditPosition)) {\n\t\t\t\tedits.forEach(x => {\n\t\t\t\t\teditBuilder.replace(x.range, x.newText);\n\t\t\t\t\tlastEditPosition = x.range.end;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction toggleCommentHTML(document: vscode.TextDocument, selection: vscode.Selection, rootNode: Node): vscode.TextEdit[] {\n\tconst selectionStart = selection.isReversed ? selection.active : selection.anchor;\n\tconst selectionEnd = selection.isReversed ? selection.anchor : selection.active;\n\tconst selectionStartOffset = document.offsetAt(selectionStart);\n\tconst selectionEndOffset = document.offsetAt(selectionEnd);\n\tconst documentText = document.getText();\n\n\tconst startNode = getHtmlFlatNode(documentText, rootNode, selectionStartOffset, true);\n\tconst endNode = getHtmlFlatNode(documentText, rootNode, selectionEndOffset, true);\n\n\tif (!startNode || !endNode) {\n\t\treturn [];\n\t}\n\n\tif (sameNodes(startNode, endNode) && startNode.name === 'style'\n\t\t&& startNode.open && startNode.close\n\t\t&& startNode.open.end < selectionStartOffset\n\t\t&& startNode.close.start > selectionEndOffset) {\n\t\tconst buffer = ' '.repeat(startNode.open.end) +\n\t\t\tdocumentText.substring(startNode.open.end, startNode.close.start);\n\t\tconst cssRootNode = parseStylesheet(buffer);\n\t\treturn toggleCommentStylesheet(document, selection, cssRootNode);\n\t}\n\n\tlet allNodes: Node[] = getNodesInBetween(startNode, endNode);\n\tlet edits: vscode.TextEdit[] = [];\n\n\tallNodes.forEach(node => {\n\t\tedits = edits.concat(getRangesToUnCommentHTML(node, document));\n\t});\n\n\tif (startNode.type === 'comment') {\n\t\treturn edits;\n\t}\n\n\n\tedits.push(new vscode.TextEdit(offsetRangeToVsRange(document, allNodes[0].start, allNodes[0].start), startCommentHTML));\n\tedits.push(new vscode.TextEdit(offsetRangeToVsRange(document, allNodes[allNodes.length - 1].end, allNodes[allNodes.length - 1].end), endCommentHTML));\n\n\treturn edits;\n}\n\nfunction getRangesToUnCommentHTML(node: Node, document: vscode.TextDocument): vscode.TextEdit[] {\n\tlet unCommentTextEdits: vscode.TextEdit[] = [];\n\n\t// If current node is commented, then uncomment and return\n\tif (node.type === 'comment') {\n\t\tunCommentTextEdits.push(new vscode.TextEdit(offsetRangeToVsRange(document, node.start, node.start + startCommentHTML.length), ''));\n\t\tunCommentTextEdits.push(new vscode.TextEdit(offsetRangeToVsRange(document, node.end - endCommentHTML.length, node.end), ''));\n\t\treturn unCommentTextEdits;\n\t}\n\n\t// All children of current node should be uncommented\n\tnode.children.forEach(childNode => {\n\t\tunCommentTextEdits = unCommentTextEdits.concat(getRangesToUnCommentHTML(childNode, document));\n\t});\n\n\treturn unCommentTextEdits;\n}\n\nfunction toggleCommentStylesheet(document: vscode.TextDocument, selection: vscode.Selection, rootNode: Stylesheet): vscode.TextEdit[] {\n\tconst selectionStart = selection.isReversed ? selection.active : selection.anchor;\n\tconst selectionEnd = selection.isReversed ? selection.anchor : selection.active;\n\tlet selectionStartOffset = document.offsetAt(selectionStart);\n\tlet selectionEndOffset = document.offsetAt(selectionEnd);\n\n\tconst startNode = getFlatNode(rootNode, selectionStartOffset, true);\n\tconst endNode = getFlatNode(rootNode, selectionEndOffset, true);\n\n\tif (!selection.isEmpty) {\n\t\tselectionStartOffset = adjustStartNodeCss(startNode, selectionStartOffset, rootNode);\n\t\tselectionEndOffset = adjustEndNodeCss(endNode, selectionEndOffset, rootNode);\n\t\tselection = offsetRangeToSelection(document, selectionStartOffset, selectionEndOffset);\n\t} else if (startNode) {\n\t\tselectionStartOffset = startNode.start;\n\t\tselectionEndOffset = startNode.end;\n\t\tselection = offsetRangeToSelection(document, selectionStartOffset, selectionEndOffset);\n\t}\n\n\t// Uncomment the comments that intersect with the selection.\n\tlet rangesToUnComment: vscode.Range[] = [];\n\tlet edits: vscode.TextEdit[] = [];\n\trootNode.comments.forEach(comment => {\n\t\tconst commentRange = offsetRangeToVsRange(document, comment.start, comment.end);\n\t\tif (selection.intersection(commentRange)) {\n\t\t\trangesToUnComment.push(commentRange);\n\t\t\tedits.push(new vscode.TextEdit(offsetRangeToVsRange(document, comment.start, comment.start + startCommentStylesheet.length), ''));\n\t\t\tedits.push(new vscode.TextEdit(offsetRangeToVsRange(document, comment.end - endCommentStylesheet.length, comment.end), ''));\n\t\t}\n\t});\n\n\tif (edits.length > 0) {\n\t\treturn edits;\n\t}\n\n\treturn [\n\t\tnew vscode.TextEdit(new vscode.Range(selection.start, selection.start), startCommentStylesheet),\n\t\tnew vscode.TextEdit(new vscode.Range(selection.end, selection.end), endCommentStylesheet)\n\t];\n}\n\nfunction setupCommentSpacing() {\n\tconst config: boolean | undefined = vscode.workspace.getConfiguration('editor.comments').get('insertSpace');\n\tif (config) {\n\t\tstartCommentStylesheet = '/* ';\n\t\tendCommentStylesheet = ' */';\n\t\tstartCommentHTML = '<!-- ';\n\t\tendCommentHTML = ' -->';\n\t} else {\n\t\tstartCommentStylesheet = '/*';\n\t\tendCommentStylesheet = '*/';\n\t\tstartCommentHTML = '<!--';\n\t\tendCommentHTML = '-->';\n\t}\n}\n\nfunction adjustStartNodeCss(node: Node | undefined, offset: number, rootNode: Stylesheet): number {\n\tfor (const comment of rootNode.comments) {\n\t\tif (comment.start <= offset && offset <= comment.end) {\n\t\t\treturn offset;\n\t\t}\n\t}\n\n\tif (!node) {\n\t\treturn offset;\n\t}\n\n\tif (node.type === 'property') {\n\t\treturn node.start;\n\t}\n\n\tconst rule = <Rule>node;\n\tif (offset < rule.contentStartToken.end || !rule.firstChild) {\n\t\treturn rule.start;\n\t}\n\n\tif (offset < rule.firstChild.start) {\n\t\treturn offset;\n\t}\n\n\tlet newStartNode = rule.firstChild;\n\twhile (newStartNode.nextSibling && offset > newStartNode.end) {\n\t\tnewStartNode = newStartNode.nextSibling;\n\t}\n\n\treturn newStartNode.start;\n}\n\nfunction adjustEndNodeCss(node: Node | undefined, offset: number, rootNode: Stylesheet): number {\n\tfor (const comment of rootNode.comments) {\n\t\tif (comment.start <= offset && offset <= comment.end) {\n\t\t\treturn offset;\n\t\t}\n\t}\n\n\tif (!node) {\n\t\treturn offset;\n\t}\n\n\tif (node.type === 'property') {\n\t\treturn node.end;\n\t}\n\n\tconst rule = <Rule>node;\n\tif (offset === rule.contentEndToken.end || !rule.firstChild) {\n\t\treturn rule.end;\n\t}\n\n\tif (offset > rule.children[rule.children.length - 1].end) {\n\t\treturn offset;\n\t}\n\n\tlet newEndNode = rule.children[rule.children.length - 1];\n\twhile (newEndNode.previousSibling && offset < newEndNode.start) {\n\t\tnewEndNode = newEndNode.previousSibling;\n\t}\n\n\treturn newEndNode.end;\n}\n\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { validate } from './util';\n\nexport function fetchEditPoint(direction: string): void {\n\tif (!validate() || !vscode.window.activeTextEditor) {\n\t\treturn;\n\t}\n\tconst editor = vscode.window.activeTextEditor;\n\n\tlet newSelections: vscode.Selection[] = [];\n\teditor.selections.forEach(selection => {\n\t\tlet updatedSelection = direction === 'next' ? nextEditPoint(selection, editor) : prevEditPoint(selection, editor);\n\t\tnewSelections.push(updatedSelection);\n\t});\n\teditor.selections = newSelections;\n\teditor.revealRange(editor.selections[editor.selections.length - 1]);\n}\n\nfunction nextEditPoint(selection: vscode.Selection, editor: vscode.TextEditor): vscode.Selection {\n\tfor (let lineNum = selection.anchor.line; lineNum < editor.document.lineCount; lineNum++) {\n\t\tlet updatedSelection = findEditPoint(lineNum, editor, selection.anchor, 'next');\n\t\tif (updatedSelection) {\n\t\t\treturn updatedSelection;\n\t\t}\n\t}\n\treturn selection;\n}\n\nfunction prevEditPoint(selection: vscode.Selection, editor: vscode.TextEditor): vscode.Selection {\n\tfor (let lineNum = selection.anchor.line; lineNum >= 0; lineNum--) {\n\t\tlet updatedSelection = findEditPoint(lineNum, editor, selection.anchor, 'prev');\n\t\tif (updatedSelection) {\n\t\t\treturn updatedSelection;\n\t\t}\n\t}\n\treturn selection;\n}\n\n\nfunction findEditPoint(lineNum: number, editor: vscode.TextEditor, position: vscode.Position, direction: string): vscode.Selection | undefined {\n\tlet line = editor.document.lineAt(lineNum);\n\tlet lineContent = line.text;\n\n\tif (lineNum !== position.line && line.isEmptyOrWhitespace && lineContent.length) {\n\t\treturn new vscode.Selection(lineNum, lineContent.length, lineNum, lineContent.length);\n\t}\n\n\tif (lineNum === position.line && direction === 'prev') {\n\t\tlineContent = lineContent.substr(0, position.character);\n\t}\n\tlet emptyAttrIndex = direction === 'next' ? lineContent.indexOf('\"\"', lineNum === position.line ? position.character : 0) : lineContent.lastIndexOf('\"\"');\n\tlet emptyTagIndex = direction === 'next' ? lineContent.indexOf('><', lineNum === position.line ? position.character : 0) : lineContent.lastIndexOf('><');\n\n\tlet winner = -1;\n\n\tif (emptyAttrIndex > -1 && emptyTagIndex > -1) {\n\t\twinner = direction === 'next' ? Math.min(emptyAttrIndex, emptyTagIndex) : Math.max(emptyAttrIndex, emptyTagIndex);\n\t} else if (emptyAttrIndex > -1) {\n\t\twinner = emptyAttrIndex;\n\t} else {\n\t\twinner = emptyTagIndex;\n\t}\n\n\tif (winner > -1) {\n\t\treturn new vscode.Selection(lineNum, winner + 1, lineNum, winner + 1);\n\t}\n\treturn;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { validate, isStyleSheet } from './util';\nimport { nextItemHTML, prevItemHTML } from './selectItemHTML';\nimport { nextItemStylesheet, prevItemStylesheet } from './selectItemStylesheet';\nimport { HtmlNode, CssNode } from 'EmmetFlatNode';\nimport { getRootNode } from './parseDocument';\n\nexport function fetchSelectItem(direction: string): void {\n\tif (!validate() || !vscode.window.activeTextEditor) {\n\t\treturn;\n\t}\n\tconst editor = vscode.window.activeTextEditor;\n\tconst document = editor.document;\n\tconst rootNode = getRootNode(document, true);\n\tif (!rootNode) {\n\t\treturn;\n\t}\n\n\tlet newSelections: vscode.Selection[] = [];\n\teditor.selections.forEach(selection => {\n\t\tconst selectionStart = selection.isReversed ? selection.active : selection.anchor;\n\t\tconst selectionEnd = selection.isReversed ? selection.anchor : selection.active;\n\n\t\tlet updatedSelection;\n\t\tif (isStyleSheet(editor.document.languageId)) {\n\t\t\tupdatedSelection = direction === 'next' ?\n\t\t\t\tnextItemStylesheet(document, selectionStart, selectionEnd, <CssNode>rootNode) :\n\t\t\t\tprevItemStylesheet(document, selectionStart, selectionEnd, <CssNode>rootNode);\n\t\t} else {\n\t\t\tupdatedSelection = direction === 'next' ?\n\t\t\t\tnextItemHTML(document, selectionStart, selectionEnd, <HtmlNode>rootNode) :\n\t\t\t\tprevItemHTML(document, selectionStart, selectionEnd, <HtmlNode>rootNode);\n\t\t}\n\t\tnewSelections.push(updatedSelection ? updatedSelection : selection);\n\t});\n\teditor.selections = newSelections;\n\teditor.revealRange(editor.selections[editor.selections.length - 1]);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { getDeepestFlatNode, findNextWord, findPrevWord, getHtmlFlatNode, offsetRangeToSelection } from './util';\nimport { HtmlNode } from 'EmmetFlatNode';\n\nexport function nextItemHTML(document: vscode.TextDocument, selectionStart: vscode.Position, selectionEnd: vscode.Position, rootNode: HtmlNode): vscode.Selection | undefined {\n\tconst selectionEndOffset = document.offsetAt(selectionEnd);\n\tlet currentNode = getHtmlFlatNode(document.getText(), rootNode, selectionEndOffset, false);\n\tlet nextNode: HtmlNode | undefined = undefined;\n\n\tif (!currentNode) {\n\t\treturn;\n\t}\n\n\tif (currentNode.type !== 'comment') {\n\t\t// If cursor is in the tag name, select tag\n\t\tif (currentNode.open &&\n\t\t\tselectionEndOffset < currentNode.open.start + currentNode.name.length) {\n\t\t\treturn getSelectionFromNode(document, currentNode);\n\t\t}\n\n\t\t// If cursor is in the open tag, look for attributes\n\t\tif (currentNode.open &&\n\t\t\tselectionEndOffset < currentNode.open.end) {\n\t\t\tconst selectionStartOffset = document.offsetAt(selectionStart);\n\t\t\tconst attrSelection = getNextAttribute(document, selectionStartOffset, selectionEndOffset, currentNode);\n\t\t\tif (attrSelection) {\n\t\t\t\treturn attrSelection;\n\t\t\t}\n\t\t}\n\n\t\t// Get the first child of current node which is right after the cursor and is not a comment\n\t\tnextNode = currentNode.firstChild;\n\t\twhile (nextNode && (selectionEndOffset >= nextNode.end || nextNode.type === 'comment')) {\n\t\t\tnextNode = nextNode.nextSibling;\n\t\t}\n\t}\n\n\t// Get next sibling of current node which is not a comment. If none is found try the same on the parent\n\twhile (!nextNode && currentNode) {\n\t\tif (currentNode.nextSibling) {\n\t\t\tif (currentNode.nextSibling.type !== 'comment') {\n\t\t\t\tnextNode = currentNode.nextSibling;\n\t\t\t} else {\n\t\t\t\tcurrentNode = currentNode.nextSibling;\n\t\t\t}\n\t\t} else {\n\t\t\tcurrentNode = currentNode.parent;\n\t\t}\n\t}\n\n\treturn nextNode && getSelectionFromNode(document, nextNode);\n}\n\nexport function prevItemHTML(document: vscode.TextDocument, selectionStart: vscode.Position, selectionEnd: vscode.Position, rootNode: HtmlNode): vscode.Selection | undefined {\n\tconst selectionStartOffset = document.offsetAt(selectionStart);\n\tlet currentNode = getHtmlFlatNode(document.getText(), rootNode, selectionStartOffset, false);\n\tlet prevNode: HtmlNode | undefined = undefined;\n\n\tif (!currentNode) {\n\t\treturn;\n\t}\n\n\tconst selectionEndOffset = document.offsetAt(selectionEnd);\n\tif (currentNode.open &&\n\t\tcurrentNode.type !== 'comment' &&\n\t\tselectionStartOffset - 1 > currentNode.open.start) {\n\t\tif (selectionStartOffset < currentNode.open.end || !currentNode.firstChild || selectionEndOffset <= currentNode.firstChild.start) {\n\t\t\tprevNode = currentNode;\n\t\t} else {\n\t\t\t// Select the child that appears just before the cursor and is not a comment\n\t\t\tprevNode = currentNode.firstChild;\n\t\t\tlet oldOption: HtmlNode | undefined = undefined;\n\t\t\twhile (prevNode.nextSibling && selectionStartOffset >= prevNode.nextSibling.end) {\n\t\t\t\tif (prevNode && prevNode.type !== 'comment') {\n\t\t\t\t\toldOption = prevNode;\n\t\t\t\t}\n\t\t\t\tprevNode = prevNode.nextSibling;\n\t\t\t}\n\n\t\t\tprevNode = <HtmlNode>getDeepestFlatNode((prevNode && prevNode.type !== 'comment') ? prevNode : oldOption);\n\t\t}\n\t}\n\n\t// Select previous sibling which is not a comment. If none found, then select parent\n\twhile (!prevNode && currentNode) {\n\t\tif (currentNode.previousSibling) {\n\t\t\tif (currentNode.previousSibling.type !== 'comment') {\n\t\t\t\tprevNode = <HtmlNode>getDeepestFlatNode(currentNode.previousSibling);\n\t\t\t} else {\n\t\t\t\tcurrentNode = currentNode.previousSibling;\n\t\t\t}\n\t\t} else {\n\t\t\tprevNode = currentNode.parent;\n\t\t}\n\n\t}\n\n\tif (!prevNode) {\n\t\treturn undefined;\n\t}\n\n\tconst attrSelection = getPrevAttribute(document, selectionStartOffset, selectionEndOffset, prevNode);\n\treturn attrSelection ? attrSelection : getSelectionFromNode(document, prevNode);\n}\n\nfunction getSelectionFromNode(document: vscode.TextDocument, node: HtmlNode): vscode.Selection | undefined {\n\tif (node && node.open) {\n\t\tconst selectionStart = node.open.start + 1;\n\t\tconst selectionEnd = selectionStart + node.name.length;\n\t\treturn offsetRangeToSelection(document, selectionStart, selectionEnd);\n\t}\n\treturn undefined;\n}\n\nfunction getNextAttribute(document: vscode.TextDocument, selectionStart: number, selectionEnd: number, node: HtmlNode): vscode.Selection | undefined {\n\tif (!node.attributes || node.attributes.length === 0 || node.type === 'comment') {\n\t\treturn;\n\t}\n\n\tfor (const attr of node.attributes) {\n\t\tif (selectionEnd < attr.start) {\n\t\t\t// select full attr\n\t\t\treturn offsetRangeToSelection(document, attr.start, attr.end);\n\t\t}\n\n\t\tif (!attr.value || attr.value.start === attr.value.end) {\n\t\t\t// No attr value to select\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ((selectionStart === attr.start && selectionEnd === attr.end) ||\n\t\t\tselectionEnd < attr.value.start) {\n\t\t\t// cursor is in attr name,  so select full attr value\n\t\t\treturn offsetRangeToSelection(document, attr.value.start, attr.value.end);\n\t\t}\n\n\t\t// Fetch the next word in the attr value\n\t\tif (attr.value.toString().indexOf(' ') === -1) {\n\t\t\t// attr value does not have space, so no next word to find\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet pos: number | undefined = undefined;\n\t\tif (selectionStart === attr.value.start && selectionEnd === attr.value.end) {\n\t\t\tpos = -1;\n\t\t}\n\t\tif (pos === undefined && selectionEnd < attr.end) {\n\t\t\tconst selectionEndCharacter = document.positionAt(selectionEnd).character;\n\t\t\tconst attrValueStartCharacter = document.positionAt(attr.value.start).character;\n\t\t\tpos = selectionEndCharacter - attrValueStartCharacter - 1;\n\t\t}\n\n\t\tif (pos !== undefined) {\n\t\t\tconst [newSelectionStartOffset, newSelectionEndOffset] = findNextWord(attr.value.toString(), pos);\n\t\t\tif (newSelectionStartOffset === undefined || newSelectionEndOffset === undefined) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (newSelectionStartOffset >= 0 && newSelectionEndOffset >= 0) {\n\t\t\t\tconst newSelectionStart = attr.value.start + newSelectionStartOffset;\n\t\t\t\tconst newSelectionEnd = attr.value.start + newSelectionEndOffset;\n\t\t\t\treturn offsetRangeToSelection(document, newSelectionStart, newSelectionEnd);\n\t\t\t}\n\t\t}\n\n\t}\n\n\treturn;\n}\n\nfunction getPrevAttribute(document: vscode.TextDocument, selectionStart: number, selectionEnd: number, node: HtmlNode): vscode.Selection | undefined {\n\tif (!node.attributes || node.attributes.length === 0 || node.type === 'comment') {\n\t\treturn;\n\t}\n\n\tfor (let i = node.attributes.length - 1; i >= 0; i--) {\n\t\tconst attr = node.attributes[i];\n\t\tif (selectionStart <= attr.start) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!attr.value || attr.value.start === attr.value.end || selectionStart < attr.value.start) {\n\t\t\t// select full attr\n\t\t\treturn offsetRangeToSelection(document, attr.start, attr.end);\n\t\t}\n\n\t\tif (selectionStart === attr.value.start) {\n\t\t\tif (selectionEnd >= attr.value.end) {\n\t\t\t\t// select full attr\n\t\t\t\treturn offsetRangeToSelection(document, attr.start, attr.end);\n\t\t\t}\n\t\t\t// select attr value\n\t\t\treturn offsetRangeToSelection(document, attr.value.start, attr.value.end);\n\t\t}\n\n\t\t// Fetch the prev word in the attr value\n\t\tconst selectionStartCharacter = document.positionAt(selectionStart).character;\n\t\tconst attrValueStartCharacter = document.positionAt(attr.value.start).character;\n\t\tconst pos = selectionStart > attr.value.end ? attr.value.toString().length :\n\t\t\tselectionStartCharacter - attrValueStartCharacter;\n\t\tconst [newSelectionStartOffset, newSelectionEndOffset] = findPrevWord(attr.value.toString(), pos);\n\t\tif (newSelectionStartOffset === undefined || newSelectionEndOffset === undefined) {\n\t\t\treturn;\n\t\t}\n\t\tif (newSelectionStartOffset >= 0 && newSelectionEndOffset >= 0) {\n\t\t\tconst newSelectionStart = attr.value.start + newSelectionStartOffset;\n\t\t\tconst newSelectionEnd = attr.value.start + newSelectionEndOffset;\n\t\t\treturn offsetRangeToSelection(document, newSelectionStart, newSelectionEnd);\n\t\t}\n\t}\n\n\treturn;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { getDeepestFlatNode, findNextWord, findPrevWord, getFlatNode, offsetRangeToSelection } from './util';\nimport { Node, CssNode, Rule, Property } from 'EmmetFlatNode';\n\nexport function nextItemStylesheet(document: vscode.TextDocument, startPosition: vscode.Position, endPosition: vscode.Position, rootNode: Node): vscode.Selection | undefined {\n\tconst startOffset = document.offsetAt(startPosition);\n\tconst endOffset = document.offsetAt(endPosition);\n\tlet currentNode: CssNode | undefined = <CssNode>getFlatNode(rootNode, endOffset, true);\n\tif (!currentNode) {\n\t\tcurrentNode = <CssNode>rootNode;\n\t}\n\tif (!currentNode) {\n\t\treturn;\n\t}\n\t// Full property is selected, so select full property value next\n\tif (currentNode.type === 'property' &&\n\t\tstartOffset === currentNode.start &&\n\t\tendOffset === currentNode.end) {\n\t\treturn getSelectionFromProperty(document, currentNode, startOffset, endOffset, true, 'next');\n\t}\n\n\t// Part or whole of propertyValue is selected, so select the next word in the propertyValue\n\tif (currentNode.type === 'property' &&\n\t\tstartOffset >= (<Property>currentNode).valueToken.start &&\n\t\tendOffset <= (<Property>currentNode).valueToken.end) {\n\t\tlet singlePropertyValue = getSelectionFromProperty(document, currentNode, startOffset, endOffset, false, 'next');\n\t\tif (singlePropertyValue) {\n\t\t\treturn singlePropertyValue;\n\t\t}\n\t}\n\n\t// Cursor is in the selector or in a property\n\tif ((currentNode.type === 'rule' && endOffset < (<Rule>currentNode).selectorToken.end)\n\t\t|| (currentNode.type === 'property' && endOffset < (<Property>currentNode).valueToken.end)) {\n\t\treturn getSelectionFromNode(document, currentNode);\n\t}\n\n\t// Get the first child of current node which is right after the cursor\n\tlet nextNode = currentNode.firstChild;\n\twhile (nextNode && endOffset >= nextNode.end) {\n\t\tnextNode = nextNode.nextSibling;\n\t}\n\n\t// Get next sibling of current node or the parent\n\twhile (!nextNode && currentNode) {\n\t\tnextNode = currentNode.nextSibling;\n\t\tcurrentNode = currentNode.parent;\n\t}\n\n\treturn nextNode ? getSelectionFromNode(document, nextNode) : undefined;\n}\n\nexport function prevItemStylesheet(document: vscode.TextDocument, startPosition: vscode.Position, endPosition: vscode.Position, rootNode: CssNode): vscode.Selection | undefined {\n\tconst startOffset = document.offsetAt(startPosition);\n\tconst endOffset = document.offsetAt(endPosition);\n\tlet currentNode = <CssNode>getFlatNode(rootNode, startOffset, false);\n\tif (!currentNode) {\n\t\tcurrentNode = rootNode;\n\t}\n\tif (!currentNode) {\n\t\treturn;\n\t}\n\n\t// Full property value is selected, so select the whole property next\n\tif (currentNode.type === 'property' &&\n\t\tstartOffset === (<Property>currentNode).valueToken.start &&\n\t\tendOffset === (<Property>currentNode).valueToken.end) {\n\t\treturn getSelectionFromNode(document, currentNode);\n\t}\n\n\t// Part of propertyValue is selected, so select the prev word in the propertyValue\n\tif (currentNode.type === 'property' &&\n\t\tstartOffset >= (<Property>currentNode).valueToken.start &&\n\t\tendOffset <= (<Property>currentNode).valueToken.end) {\n\t\tlet singlePropertyValue = getSelectionFromProperty(document, currentNode, startOffset, endOffset, false, 'prev');\n\t\tif (singlePropertyValue) {\n\t\t\treturn singlePropertyValue;\n\t\t}\n\t}\n\n\tif (currentNode.type === 'property' || !currentNode.firstChild ||\n\t\t(currentNode.type === 'rule' && startOffset <= currentNode.firstChild.start)) {\n\t\treturn getSelectionFromNode(document, currentNode);\n\t}\n\n\t// Select the child that appears just before the cursor\n\tlet prevNode: CssNode | undefined = currentNode.firstChild;\n\twhile (prevNode.nextSibling && startOffset >= prevNode.nextSibling.end) {\n\t\tprevNode = prevNode.nextSibling;\n\t}\n\tprevNode = <CssNode | undefined>getDeepestFlatNode(prevNode);\n\n\treturn getSelectionFromProperty(document, prevNode, startOffset, endOffset, false, 'prev');\n}\n\n\nfunction getSelectionFromNode(document: vscode.TextDocument, node: Node | undefined): vscode.Selection | undefined {\n\tif (!node) {\n\t\treturn;\n\t}\n\n\tconst nodeToSelect = node.type === 'rule' ? (<Rule>node).selectorToken : node;\n\treturn offsetRangeToSelection(document, nodeToSelect.start, nodeToSelect.end);\n}\n\n\nfunction getSelectionFromProperty(document: vscode.TextDocument, node: Node | undefined, selectionStart: number, selectionEnd: number, selectFullValue: boolean, direction: string): vscode.Selection | undefined {\n\tif (!node || node.type !== 'property') {\n\t\treturn;\n\t}\n\tconst propertyNode = <Property>node;\n\n\tlet propertyValue = propertyNode.valueToken.stream.substring(propertyNode.valueToken.start, propertyNode.valueToken.end);\n\tselectFullValue = selectFullValue ||\n\t\t(direction === 'prev' && selectionStart === propertyNode.valueToken.start && selectionEnd < propertyNode.valueToken.end);\n\n\tif (selectFullValue) {\n\t\treturn offsetRangeToSelection(document, propertyNode.valueToken.start, propertyNode.valueToken.end);\n\t}\n\n\tlet pos: number = -1;\n\tif (direction === 'prev') {\n\t\tif (selectionStart === propertyNode.valueToken.start) {\n\t\t\treturn;\n\t\t}\n\t\tconst selectionStartChar = document.positionAt(selectionStart).character;\n\t\tconst tokenStartChar = document.positionAt(propertyNode.valueToken.start).character;\n\t\tpos = selectionStart > propertyNode.valueToken.end ? propertyValue.length :\n\t\t\tselectionStartChar - tokenStartChar;\n\t} else if (direction === 'next') {\n\t\tif (selectionEnd === propertyNode.valueToken.end &&\n\t\t\t(selectionStart > propertyNode.valueToken.start || !propertyValue.includes(' '))) {\n\t\t\treturn;\n\t\t}\n\t\tconst selectionEndChar = document.positionAt(selectionEnd).character;\n\t\tconst tokenStartChar = document.positionAt(propertyNode.valueToken.start).character;\n\t\tpos = selectionEnd === propertyNode.valueToken.end ? -1 :\n\t\t\tselectionEndChar - tokenStartChar - 1;\n\t}\n\n\n\tlet [newSelectionStartOffset, newSelectionEndOffset] = direction === 'prev' ? findPrevWord(propertyValue, pos) : findNextWord(propertyValue, pos);\n\tif (!newSelectionStartOffset && !newSelectionEndOffset) {\n\t\treturn;\n\t}\n\n\tconst tokenStart = document.positionAt(propertyNode.valueToken.start);\n\tconst newSelectionStart = tokenStart.translate(0, newSelectionStartOffset);\n\tconst newSelectionEnd = tokenStart.translate(0, newSelectionEndOffset);\n\n\treturn new vscode.Selection(newSelectionStart, newSelectionEnd);\n}\n\n\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/* Based on @sergeche's work in his emmet plugin */\n\nimport * as vscode from 'vscode';\nimport evaluate, { extract } from '@emmetio/math-expression';\n\nexport function evaluateMathExpression(): Thenable<boolean> {\n\tif (!vscode.window.activeTextEditor) {\n\t\tvscode.window.showInformationMessage('No editor is active');\n\t\treturn Promise.resolve(false);\n\t}\n\tconst editor = vscode.window.activeTextEditor;\n\treturn editor.edit(editBuilder => {\n\t\teditor.selections.forEach(selection => {\n\t\t\t// startpos always comes before endpos\n\t\t\tconst startpos = selection.isReversed ? selection.active : selection.anchor;\n\t\t\tconst endpos = selection.isReversed ? selection.anchor : selection.active;\n\t\t\tconst selectionText = editor.document.getText(new vscode.Range(startpos, endpos));\n\n\t\t\ttry {\n\t\t\t\tif (selectionText) {\n\t\t\t\t\t// respect selections\n\t\t\t\t\tconst result = String(evaluate(selectionText));\n\t\t\t\t\teditBuilder.replace(new vscode.Range(startpos, endpos), result);\n\t\t\t\t} else {\n\t\t\t\t\t// no selection made, extract expression from line\n\t\t\t\t\tconst lineToSelectionEnd = editor.document.getText(new vscode.Range(new vscode.Position(selection.end.line, 0), endpos));\n\t\t\t\t\tconst extractedIndices = extract(lineToSelectionEnd);\n\t\t\t\t\tif (!extractedIndices) {\n\t\t\t\t\t\tthrow new Error('Invalid extracted indices');\n\t\t\t\t\t}\n\t\t\t\t\tconst result = String(evaluate(lineToSelectionEnd.substr(extractedIndices[0], extractedIndices[1])));\n\t\t\t\t\tconst rangeToReplace = new vscode.Range(\n\t\t\t\t\t\tnew vscode.Position(selection.end.line, extractedIndices[0]),\n\t\t\t\t\t\tnew vscode.Position(selection.end.line, extractedIndices[1])\n\t\t\t\t\t);\n\t\t\t\t\teditBuilder.replace(rangeToReplace, result);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tvscode.window.showErrorMessage('Could not evaluate expression');\n\t\t\t\t// Ignore error since most likely it’s because of non-math expression\n\t\t\t\tconsole.warn('Math evaluation error', err);\n\t\t\t}\n\t\t});\n\t});\n}\n","import Scanner, { isWhiteSpace, isNumber, isSpace } from '@emmetio/scanner';\n\nconst nullary = token(\"null\" /* Null */, 0);\n/**\n * Parses given expression in forward direction\n */\nfunction parse(expr) {\n    const scanner = typeof expr === 'string' ? new Scanner(expr) : expr;\n    let ch;\n    let priority = 0;\n    let expected = (1 /* Primary */ | 4 /* LParen */ | 16 /* Sign */);\n    const tokens = [];\n    while (!scanner.eof()) {\n        scanner.eatWhile(isWhiteSpace);\n        scanner.start = scanner.pos;\n        if (consumeNumber(scanner)) {\n            if ((expected & 1 /* Primary */) === 0) {\n                error('Unexpected number', scanner);\n            }\n            tokens.push(number(scanner.current()));\n            expected = (2 /* Operator */ | 8 /* RParen */);\n        }\n        else if (isOperator(scanner.peek())) {\n            ch = scanner.next();\n            if (isSign(ch) && (expected & 16 /* Sign */)) {\n                if (isNegativeSign(ch)) {\n                    tokens.push(op1(ch, priority));\n                }\n                expected = (1 /* Primary */ | 4 /* LParen */ | 16 /* Sign */);\n            }\n            else {\n                if ((expected & 2 /* Operator */) === 0) {\n                    error('Unexpected operator', scanner);\n                }\n                tokens.push(op2(ch, priority));\n                expected = (1 /* Primary */ | 4 /* LParen */ | 16 /* Sign */);\n            }\n        }\n        else if (scanner.eat(40 /* LeftParenthesis */)) {\n            if ((expected & 4 /* LParen */) === 0) {\n                error('Unexpected \"(\"', scanner);\n            }\n            priority += 10;\n            expected = (1 /* Primary */ | 4 /* LParen */ | 16 /* Sign */ | 32 /* NullaryCall */);\n        }\n        else if (scanner.eat(41 /* RightParenthesis */)) {\n            priority -= 10;\n            if (expected & 32 /* NullaryCall */) {\n                tokens.push(nullary);\n            }\n            else if ((expected & 8 /* RParen */) === 0) {\n                error('Unexpected \")\"', scanner);\n            }\n            expected = (2 /* Operator */ | 8 /* RParen */ | 4 /* LParen */);\n        }\n        else {\n            error('Unknown character', scanner);\n        }\n    }\n    if (priority < 0 || priority >= 10) {\n        error('Unmatched \"()\"', scanner);\n    }\n    const result = orderTokens(tokens);\n    if (result === null) {\n        error('Parity', scanner);\n    }\n    return result;\n}\n/**\n * Consumes number from given stream\n * @return Returns `true` if number was consumed\n */\nfunction consumeNumber(scanner) {\n    const start = scanner.pos;\n    if (scanner.eat(46 /* Dot */) && scanner.eatWhile(isNumber)) {\n        // short decimal notation: .025\n        return true;\n    }\n    if (scanner.eatWhile(isNumber) && (!scanner.eat(46 /* Dot */) || scanner.eatWhile(isNumber))) {\n        // either integer or decimal: 10, 10.25\n        return true;\n    }\n    scanner.pos = start;\n    return false;\n}\n/**\n * Orders parsed tokens (operands and operators) in given array so that they are\n * laid off in order of execution\n */\nfunction orderTokens(tokens) {\n    const operators = [];\n    const operands = [];\n    let nOperators = 0;\n    for (let i = 0; i < tokens.length; i++) {\n        const t = tokens[i];\n        if (t.type === \"num\" /* Number */) {\n            operands.push(t);\n        }\n        else {\n            nOperators += t.type === \"op1\" /* Op1 */ ? 1 : 2;\n            while (operators.length) {\n                if (t.priority <= operators[operators.length - 1].priority) {\n                    operands.push(operators.pop());\n                }\n                else {\n                    break;\n                }\n            }\n            operators.push(t);\n        }\n    }\n    return nOperators + 1 === operands.length + operators.length\n        ? operands.concat(operators.reverse())\n        : null /* parity */;\n}\n/**\n * Number token factory\n */\nfunction number(value, priority) {\n    return token(\"num\" /* Number */, parseFloat(value), priority);\n}\n/**\n * Unary operator factory\n * @param value    Operator  character code\n * @param priority Operator execution priority\n */\nfunction op1(value, priority = 0) {\n    if (value === 45 /* Minus */) {\n        priority += 2;\n    }\n    return token(\"op1\" /* Op1 */, value, priority);\n}\n/**\n * Binary operator factory\n * @param value Operator  character code\n * @param priority Operator execution priority\n */\nfunction op2(value, priority = 0) {\n    if (value === 42 /* Multiply */) {\n        priority += 1;\n    }\n    else if (value === 47 /* Divide */ || value === 92 /* IntDivide */) {\n        priority += 2;\n    }\n    return token(\"op2\" /* Op2 */, value, priority);\n}\nfunction error(name, scanner) {\n    if (scanner) {\n        name += ` at column ${scanner.pos} of expression`;\n    }\n    throw new Error(name);\n}\nfunction isSign(ch) {\n    return isPositiveSign(ch) || isNegativeSign(ch);\n}\nfunction isPositiveSign(ch) {\n    return ch === 43 /* Plus */;\n}\nfunction isNegativeSign(ch) {\n    return ch === 45 /* Minus */;\n}\nfunction isOperator(ch) {\n    return ch === 43 /* Plus */ || ch === 45 /* Minus */ || ch === 42 /* Multiply */\n        || ch === 47 /* Divide */ || ch === 92 /* IntDivide */;\n}\nfunction token(type, value, priority = 0) {\n    return { type, value, priority };\n}\n\nconst defaultOptions = {\n    lookAhead: true,\n    whitespace: true\n};\nfunction extract(text, pos = text.length, options) {\n    const opt = Object.assign(Object.assign({}, defaultOptions), options);\n    const scanner = { text, pos };\n    let ch;\n    if (opt.lookAhead && cur(scanner) === 41 /* RightParenthesis */) {\n        // Basically, we should consume right parenthesis only with optional whitespace\n        scanner.pos++;\n        const len = text.length;\n        while (scanner.pos < len) {\n            ch = cur(scanner);\n            if (ch !== 41 /* RightParenthesis */ && !(opt.whitespace && isSpace(ch))) {\n                break;\n            }\n            scanner.pos++;\n        }\n    }\n    const end = scanner.pos;\n    let braces = 0;\n    while (scanner.pos >= 0) {\n        if (number$1(scanner)) {\n            continue;\n        }\n        ch = prev(scanner);\n        if (ch === 41 /* RightParenthesis */) {\n            braces++;\n        }\n        else if (ch === 40 /* LeftParenthesis */) {\n            if (!braces) {\n                break;\n            }\n            braces--;\n        }\n        else if (!((opt.whitespace && isSpace(ch)) || isSign(ch) || isOperator(ch))) {\n            break;\n        }\n        scanner.pos--;\n    }\n    if (scanner.pos !== end && !braces) {\n        // Trim whitespace\n        while (isSpace(cur(scanner))) {\n            scanner.pos++;\n        }\n        return [scanner.pos, end];\n    }\n    return null;\n}\n/**\n * Backward-consumes number from given scanner, if possible\n */\nfunction number$1(scanner) {\n    if (isNumber(prev(scanner))) {\n        scanner.pos--;\n        let dot = false;\n        let ch;\n        while (scanner.pos >= 0) {\n            ch = prev(scanner);\n            if (ch === 46 /* . */) {\n                if (dot) {\n                    // Decimal delimiter already consumed, abort\n                    break;\n                }\n                dot = true;\n            }\n            else if (!isNumber(ch)) {\n                break;\n            }\n            scanner.pos--;\n        }\n        return true;\n    }\n    return false;\n}\nfunction prev(scanner) {\n    return scanner.text.charCodeAt(scanner.pos - 1);\n}\nfunction cur(scanner) {\n    return scanner.text.charCodeAt(scanner.pos);\n}\n\nconst ops1 = {\n    [45 /* Minus */]: num => -num\n};\nconst ops2 = {\n    [43 /* Plus */]: (a, b) => a + b,\n    [45 /* Minus */]: (a, b) => a - b,\n    [42 /* Multiply */]: (a, b) => a * b,\n    [47 /* Divide */]: (a, b) => a / b,\n    [92 /* IntDivide */]: (a, b) => Math.floor(a / b)\n};\n/**\n * Evaluates given math expression\n * @param expr Expression to evaluate\n */\nfunction evaluate(expr) {\n    if (!Array.isArray(expr)) {\n        expr = parse(expr);\n    }\n    if (!expr || !expr.length) {\n        return null;\n    }\n    const nStack = [];\n    let n1;\n    let n2;\n    let f;\n    for (let i = 0, il = expr.length; i < il; i++) {\n        const token = expr[i];\n        if (token.type === \"num\" /* Number */) {\n            nStack.push(token.value);\n        }\n        else if (token.type === \"op2\" /* Op2 */) {\n            n2 = nStack.pop();\n            n1 = nStack.pop();\n            f = ops2[token.value];\n            nStack.push(f(n1, n2));\n        }\n        else if (token.type === \"op1\" /* Op1 */) {\n            n1 = nStack.pop();\n            f = ops1[token.value];\n            nStack.push(f(n1));\n        }\n        else {\n            throw new Error('Invalid expression');\n        }\n    }\n    if (nStack.length > 1) {\n        throw new Error('Invalid Expression (parity)');\n    }\n    return nStack[0];\n}\n\nexport default evaluate;\nexport { extract, parse };\n//# sourceMappingURL=math.es.js.map\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/* Based on @sergeche's work in his emmet plugin */\n\nimport * as vscode from 'vscode';\n\nconst reNumber = /[0-9]/;\n\n/**\n * Incerement number under caret of given editor\n */\nexport function incrementDecrement(delta: number): Thenable<boolean> | undefined {\n\tif (!vscode.window.activeTextEditor) {\n\t\tvscode.window.showInformationMessage('No editor is active');\n\t\treturn;\n\t}\n\tconst editor = vscode.window.activeTextEditor;\n\n\treturn editor.edit(editBuilder => {\n\t\teditor.selections.forEach(selection => {\n\t\t\tlet rangeToReplace = locate(editor.document, selection.isReversed ? selection.anchor : selection.active);\n\t\t\tif (!rangeToReplace) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst text = editor.document.getText(rangeToReplace);\n\t\t\tif (isValidNumber(text)) {\n\t\t\t\teditBuilder.replace(rangeToReplace, update(text, delta));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Updates given number with `delta` and returns string formatted according\n * to original string format\n */\nexport function update(numString: string, delta: number): string {\n\tlet m: RegExpMatchArray | null;\n\tlet decimals = (m = numString.match(/\\.(\\d+)$/)) ? m[1].length : 1;\n\tlet output = String((parseFloat(numString) + delta).toFixed(decimals)).replace(/\\.0+$/, '');\n\n\tif (m = numString.match(/^\\-?(0\\d+)/)) {\n\t\t// padded number: preserve padding\n\t\toutput = output.replace(/^(\\-?)(\\d+)/, (_, minus, prefix) =>\n\t\t\tminus + '0'.repeat(Math.max(0, (m ? m[1].length : 0) - prefix.length)) + prefix);\n\t}\n\n\tif (/^\\-?\\./.test(numString)) {\n\t\t// omit integer part\n\t\toutput = output.replace(/^(\\-?)0+/, '$1');\n\t}\n\n\treturn output;\n}\n\n/**\n * Locates number from given position in the document\n *\n * @return Range of number or `undefined` if not found\n */\nexport function locate(document: vscode.TextDocument, pos: vscode.Position): vscode.Range | undefined {\n\n\tconst line = document.lineAt(pos.line).text;\n\tlet start = pos.character;\n\tlet end = pos.character;\n\tlet hadDot = false, hadMinus = false;\n\tlet ch;\n\n\twhile (start > 0) {\n\t\tch = line[--start];\n\t\tif (ch === '-') {\n\t\t\thadMinus = true;\n\t\t\tbreak;\n\t\t} else if (ch === '.' && !hadDot) {\n\t\t\thadDot = true;\n\t\t} else if (!reNumber.test(ch)) {\n\t\t\tstart++;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (line[end] === '-' && !hadMinus) {\n\t\tend++;\n\t}\n\n\twhile (end < line.length) {\n\t\tch = line[end++];\n\t\tif (ch === '.' && !hadDot && reNumber.test(line[end])) {\n\t\t\t// A dot must be followed by a number. Otherwise stop parsing\n\t\t\thadDot = true;\n\t\t} else if (!reNumber.test(ch)) {\n\t\t\tend--;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// ensure that found range contains valid number\n\tif (start !== end && isValidNumber(line.slice(start, end))) {\n\t\treturn new vscode.Range(pos.line, start, pos.line, end);\n\t}\n\n\treturn;\n}\n\n/**\n * Check if given string contains valid number\n */\nfunction isValidNumber(str: string): boolean {\n\treturn str ? !isNaN(parseFloat(str)) : false;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { window, TextEditor } from 'vscode';\nimport { getCssPropertyFromRule, getCssPropertyFromDocument, offsetRangeToVsRange } from './util';\nimport { Property, Rule } from 'EmmetFlatNode';\n\nconst vendorPrefixes = ['-webkit-', '-moz-', '-ms-', '-o-', ''];\n\nexport function reflectCssValue(): Thenable<boolean> | undefined {\n\tconst editor = window.activeTextEditor;\n\tif (!editor) {\n\t\twindow.showInformationMessage('No editor is active.');\n\t\treturn;\n\t}\n\n\tconst node = getCssPropertyFromDocument(editor, editor.selection.active);\n\tif (!node) {\n\t\treturn;\n\t}\n\n\treturn updateCSSNode(editor, node);\n}\n\nfunction updateCSSNode(editor: TextEditor, property: Property): Thenable<boolean> {\n\tconst rule: Rule = property.parent;\n\tlet currentPrefix = '';\n\n\t// Find vendor prefix of given property node\n\tfor (const prefix of vendorPrefixes) {\n\t\tif (property.name.startsWith(prefix)) {\n\t\t\tcurrentPrefix = prefix;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tconst propertyName = property.name.substr(currentPrefix.length);\n\tconst propertyValue = property.value;\n\n\treturn editor.edit(builder => {\n\t\t// Find properties with vendor prefixes, update each\n\t\tvendorPrefixes.forEach(prefix => {\n\t\t\tif (prefix === currentPrefix) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst vendorProperty = getCssPropertyFromRule(rule, prefix + propertyName);\n\t\t\tif (vendorProperty) {\n\t\t\t\tconst rangeToReplace = offsetRangeToVsRange(editor.document, vendorProperty.valueToken.start, vendorProperty.valueToken.end);\n\t\t\t\tbuilder.replace(rangeToReplace, propertyValue);\n\t\t\t}\n\t\t});\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// Based on @sergeche's work on the emmet plugin for atom\n\nimport { TextEditor, Position, window, TextEdit } from 'vscode';\nimport * as path from 'path';\nimport { getImageSize } from './imageSizeHelper';\nimport { getFlatNode, iterateCSSToken, getCssPropertyFromRule, isStyleSheet, validate, offsetRangeToVsRange } from './util';\nimport { HtmlNode, CssToken, HtmlToken, Attribute, Property } from 'EmmetFlatNode';\nimport { locateFile } from './locateFile';\nimport parseStylesheet from '@emmetio/css-parser';\nimport { getRootNode } from './parseDocument';\n\n/**\n * Updates size of context image in given editor\n */\nexport function updateImageSize(): Promise<boolean> | undefined {\n\tif (!validate() || !window.activeTextEditor) {\n\t\treturn;\n\t}\n\tconst editor = window.activeTextEditor;\n\n\tconst allUpdatesPromise = editor.selections.reverse().map(selection => {\n\t\tconst position = selection.isReversed ? selection.active : selection.anchor;\n\t\tif (!isStyleSheet(editor.document.languageId)) {\n\t\t\treturn updateImageSizeHTML(editor, position);\n\t\t} else {\n\t\t\treturn updateImageSizeCSSFile(editor, position);\n\t\t}\n\t});\n\n\treturn Promise.all(allUpdatesPromise).then((updates) => {\n\t\treturn editor.edit(builder => {\n\t\t\tupdates.forEach(update => {\n\t\t\t\tupdate.forEach((textEdit: TextEdit) => {\n\t\t\t\t\tbuilder.replace(textEdit.range, textEdit.newText);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t});\n}\n\n/**\n * Updates image size of context tag of HTML model\n */\nfunction updateImageSizeHTML(editor: TextEditor, position: Position): Promise<TextEdit[]> {\n\tconst imageNode = getImageHTMLNode(editor, position);\n\n\tconst src = imageNode && getImageSrcHTML(imageNode);\n\n\tif (!src) {\n\t\treturn updateImageSizeStyleTag(editor, position);\n\t}\n\n\treturn locateFile(path.dirname(editor.document.fileName), src)\n\t\t.then(getImageSize)\n\t\t.then((size: any) => {\n\t\t\t// since this action is asynchronous, we have to ensure that editor wasn’t\n\t\t\t// changed and user didn’t moved caret outside <img> node\n\t\t\tconst img = getImageHTMLNode(editor, position);\n\t\t\tif (img && getImageSrcHTML(img) === src) {\n\t\t\t\treturn updateHTMLTag(editor, img, size.width, size.height);\n\t\t\t}\n\t\t\treturn [];\n\t\t})\n\t\t.catch(err => { console.warn('Error while updating image size:', err); return []; });\n}\n\nfunction updateImageSizeStyleTag(editor: TextEditor, position: Position): Promise<TextEdit[]> {\n\tconst getPropertyInsiderStyleTag = (editor: TextEditor): Property | null => {\n\t\tconst document = editor.document;\n\t\tconst rootNode = getRootNode(document, true);\n\t\tconst offset = document.offsetAt(position);\n\t\tconst currentNode = <HtmlNode>getFlatNode(rootNode, offset, true);\n\t\tif (currentNode && currentNode.name === 'style'\n\t\t\t&& currentNode.open && currentNode.close\n\t\t\t&& currentNode.open.end < offset\n\t\t\t&& currentNode.close.start > offset) {\n\t\t\tconst buffer = ' '.repeat(currentNode.open.end) +\n\t\t\t\tdocument.getText().substring(currentNode.open.end, currentNode.close.start);\n\t\t\tconst innerRootNode = parseStylesheet(buffer);\n\t\t\tconst innerNode = getFlatNode(innerRootNode, offset, true);\n\t\t\treturn (innerNode && innerNode.type === 'property') ? <Property>innerNode : null;\n\t\t}\n\t\treturn null;\n\t};\n\n\treturn updateImageSizeCSS(editor, position, getPropertyInsiderStyleTag);\n}\n\nfunction updateImageSizeCSSFile(editor: TextEditor, position: Position): Promise<TextEdit[]> {\n\treturn updateImageSizeCSS(editor, position, getImageCSSNode);\n}\n\n/**\n * Updates image size of context rule of stylesheet model\n */\nfunction updateImageSizeCSS(editor: TextEditor, position: Position, fetchNode: (editor: TextEditor, position: Position) => Property | null): Promise<TextEdit[]> {\n\tconst node = fetchNode(editor, position);\n\tconst src = node && getImageSrcCSS(editor, node, position);\n\n\tif (!src) {\n\t\treturn Promise.reject(new Error('No valid image source'));\n\t}\n\n\treturn locateFile(path.dirname(editor.document.fileName), src)\n\t\t.then(getImageSize)\n\t\t.then((size: any): TextEdit[] => {\n\t\t\t// since this action is asynchronous, we have to ensure that editor wasn’t\n\t\t\t// changed and user didn’t moved caret outside <img> node\n\t\t\tconst prop = fetchNode(editor, position);\n\t\t\tif (prop && getImageSrcCSS(editor, prop, position) === src) {\n\t\t\t\treturn updateCSSNode(editor, prop, size.width, size.height);\n\t\t\t}\n\t\t\treturn [];\n\t\t})\n\t\t.catch(err => { console.warn('Error while updating image size:', err); return []; });\n}\n\n/**\n * Returns <img> node under caret in given editor or `null` if such node cannot\n * be found\n */\nfunction getImageHTMLNode(editor: TextEditor, position: Position): HtmlNode | null {\n\tconst document = editor.document;\n\tconst rootNode = getRootNode(document, true);\n\tconst offset = document.offsetAt(position);\n\tconst node = <HtmlNode>getFlatNode(rootNode, offset, true);\n\n\treturn node && node.name.toLowerCase() === 'img' ? node : null;\n}\n\n/**\n * Returns css property under caret in given editor or `null` if such node cannot\n * be found\n */\nfunction getImageCSSNode(editor: TextEditor, position: Position): Property | null {\n\tconst document = editor.document;\n\tconst rootNode = getRootNode(document, true);\n\tconst offset = document.offsetAt(position);\n\tconst node = getFlatNode(rootNode, offset, true);\n\treturn node && node.type === 'property' ? <Property>node : null;\n}\n\n/**\n * Returns image source from given <img> node\n */\nfunction getImageSrcHTML(node: HtmlNode): string | undefined {\n\tconst srcAttr = getAttribute(node, 'src');\n\tif (!srcAttr) {\n\t\treturn;\n\t}\n\n\treturn (<HtmlToken>srcAttr.value).value;\n}\n\n/**\n * Returns image source from given `url()` token\n */\nfunction getImageSrcCSS(editor: TextEditor, node: Property | undefined, position: Position): string | undefined {\n\tif (!node) {\n\t\treturn;\n\t}\n\tconst urlToken = findUrlToken(editor, node, position);\n\tif (!urlToken) {\n\t\treturn;\n\t}\n\n\t// A stylesheet token may contain either quoted ('string') or unquoted URL\n\tlet urlValue = urlToken.item(0);\n\tif (urlValue && urlValue.type === 'string') {\n\t\turlValue = urlValue.item(0);\n\t}\n\n\treturn urlValue && urlValue.valueOf();\n}\n\n/**\n * Updates size of given HTML node\n */\nfunction updateHTMLTag(editor: TextEditor, node: HtmlNode, width: number, height: number): TextEdit[] {\n\tconst document = editor.document;\n\tconst srcAttr = getAttribute(node, 'src');\n\tif (!srcAttr) {\n\t\treturn [];\n\t}\n\n\tconst widthAttr = getAttribute(node, 'width');\n\tconst heightAttr = getAttribute(node, 'height');\n\tconst quote = getAttributeQuote(editor, srcAttr);\n\tconst endOfAttributes = node.attributes[node.attributes.length - 1].end;\n\n\tlet edits: TextEdit[] = [];\n\tlet textToAdd = '';\n\n\tif (!widthAttr) {\n\t\ttextToAdd += ` width=${quote}${width}${quote}`;\n\t} else {\n\t\tedits.push(new TextEdit(offsetRangeToVsRange(document, widthAttr.value.start, widthAttr.value.end), String(width)));\n\t}\n\tif (!heightAttr) {\n\t\ttextToAdd += ` height=${quote}${height}${quote}`;\n\t} else {\n\t\tedits.push(new TextEdit(offsetRangeToVsRange(document, heightAttr.value.start, heightAttr.value.end), String(height)));\n\t}\n\tif (textToAdd) {\n\t\tedits.push(new TextEdit(offsetRangeToVsRange(document, endOfAttributes, endOfAttributes), textToAdd));\n\t}\n\n\treturn edits;\n}\n\n/**\n * Updates size of given CSS rule\n */\nfunction updateCSSNode(editor: TextEditor, srcProp: Property, width: number, height: number): TextEdit[] {\n\tconst document = editor.document;\n\tconst rule = srcProp.parent;\n\tconst widthProp = getCssPropertyFromRule(rule, 'width');\n\tconst heightProp = getCssPropertyFromRule(rule, 'height');\n\n\t// Detect formatting\n\tconst separator = srcProp.separator || ': ';\n\tconst before = getPropertyDelimitor(editor, srcProp);\n\n\tlet edits: TextEdit[] = [];\n\tif (!srcProp.terminatorToken) {\n\t\tedits.push(new TextEdit(offsetRangeToVsRange(document, srcProp.end, srcProp.end), ';'));\n\t}\n\n\tlet textToAdd = '';\n\tif (!widthProp) {\n\t\ttextToAdd += `${before}width${separator}${width}px;`;\n\t} else {\n\t\tedits.push(new TextEdit(offsetRangeToVsRange(document, widthProp.valueToken.start, widthProp.valueToken.end), `${width}px`));\n\t}\n\tif (!heightProp) {\n\t\ttextToAdd += `${before}height${separator}${height}px;`;\n\t} else {\n\t\tedits.push(new TextEdit(offsetRangeToVsRange(document, heightProp.valueToken.start, heightProp.valueToken.end), `${height}px`));\n\t}\n\tif (textToAdd) {\n\t\tedits.push(new TextEdit(offsetRangeToVsRange(document, srcProp.end, srcProp.end), textToAdd));\n\t}\n\n\treturn edits;\n}\n\n/**\n * Returns attribute object with `attrName` name from given HTML node\n */\nfunction getAttribute(node: HtmlNode, attrName: string): Attribute | undefined {\n\tattrName = attrName.toLowerCase();\n\treturn node && node.attributes.find(attr => attr.name.toString().toLowerCase() === attrName);\n}\n\n/**\n * Returns quote character, used for value of given attribute. May return empty\n * string if attribute wasn’t quoted\n\n */\nfunction getAttributeQuote(editor: TextEditor, attr: Attribute): string {\n\tconst begin = attr.value ? attr.value.end : attr.end;\n\tconst end = attr.end;\n\treturn begin === end ? '' : editor.document.getText().substring(begin, end);\n}\n\n/**\n * Finds 'url' token for given `pos` point in given CSS property `node`\n */\nfunction findUrlToken(editor: TextEditor, node: Property, pos: Position): CssToken | undefined {\n\tconst offset = editor.document.offsetAt(pos);\n\tfor (let i = 0, il = (node as any).parsedValue.length, url; i < il; i++) {\n\t\titerateCSSToken((node as any).parsedValue[i], (token: CssToken) => {\n\t\t\tif (token.type === 'url' && token.start <= offset && token.end >= offset) {\n\t\t\t\turl = token;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\n\t\tif (url) {\n\t\t\treturn url;\n\t\t}\n\t}\n\treturn;\n}\n\n/**\n * Returns a string that is used to delimit properties in current node’s rule\n */\nfunction getPropertyDelimitor(editor: TextEditor, node: Property): string {\n\tlet anchor;\n\tif (anchor = (node.previousSibling || node.parent.contentStartToken)) {\n\t\treturn editor.document.getText().substring(anchor.end, node.start);\n\t} else if (anchor = (node.nextSibling || node.parent.contentEndToken)) {\n\t\treturn editor.document.getText().substring(node.end, anchor.start);\n\t}\n\n\treturn '';\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// Based on @sergeche's work on the emmet plugin for atom\n\nimport * as path from 'path';\nimport * as http from 'http';\nimport * as https from 'https';\nimport { parse as parseUrl } from 'url';\nimport * as sizeOf from 'image-size';\n\nconst reUrl = /^https?:/;\n\n/**\n * Get size of given image file. Supports files from local filesystem,\n * as well as URLs\n */\nexport function getImageSize(file: string) {\n\tfile = file.replace(/^file:\\/\\//, '');\n\treturn reUrl.test(file) ? getImageSizeFromURL(file) : getImageSizeFromFile(file);\n}\n\n/**\n * Get image size from file on local file system\n */\nfunction getImageSizeFromFile(file: string) {\n\treturn new Promise((resolve, reject) => {\n\t\tconst isDataUrl = file.match(/^data:.+?;base64,/);\n\n\t\tif (isDataUrl) {\n\t\t\t// NB should use sync version of `sizeOf()` for buffers\n\t\t\ttry {\n\t\t\t\tconst data = Buffer.from(file.slice(isDataUrl[0].length), 'base64');\n\t\t\t\treturn resolve(sizeForFileName('', sizeOf(data)));\n\t\t\t} catch (err) {\n\t\t\t\treturn reject(err);\n\t\t\t}\n\t\t}\n\n\t\tsizeOf(file, (err: any, size: any) => {\n\t\t\tif (err) {\n\t\t\t\treject(err);\n\t\t\t} else {\n\t\t\t\tresolve(sizeForFileName(path.basename(file), size));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Get image size from given remove URL\n */\nfunction getImageSizeFromURL(urlStr: string) {\n\treturn new Promise((resolve, reject) => {\n\t\tconst url = parseUrl(urlStr);\n\t\tconst getTransport = url.protocol === 'https:' ? https.get : http.get;\n\n\t\tif (!url.pathname) {\n\t\t\treturn reject('Given url doesnt have pathname property');\n\t\t}\n\t\tconst urlPath: string = url.pathname;\n\n\t\tgetTransport(url as any, resp => {\n\t\t\tconst chunks: Buffer[] = [];\n\t\t\tlet bufSize = 0;\n\n\t\t\tconst trySize = (chunks: Buffer[]) => {\n\t\t\t\ttry {\n\t\t\t\t\tconst size = sizeOf(Buffer.concat(chunks, bufSize));\n\t\t\t\t\tresp.removeListener('data', onData);\n\t\t\t\t\tresp.destroy(); // no need to read further\n\t\t\t\t\tresolve(sizeForFileName(path.basename(urlPath), size));\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// might not have enough data, skip error\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst onData = (chunk: Buffer) => {\n\t\t\t\tbufSize += chunk.length;\n\t\t\t\tchunks.push(chunk);\n\t\t\t\ttrySize(chunks);\n\t\t\t};\n\n\t\t\tresp\n\t\t\t\t.on('data', onData)\n\t\t\t\t.on('end', () => trySize(chunks))\n\t\t\t\t.once('error', err => {\n\t\t\t\t\tresp.removeListener('data', onData);\n\t\t\t\t\treject(err);\n\t\t\t\t});\n\t\t})\n\t\t\t.once('error', reject);\n\t});\n}\n\n/**\n * Returns size object for given file name. If file name contains `@Nx` token,\n * the final dimentions will be downscaled by N\n */\nfunction sizeForFileName(fileName: string, size: any) {\n\tconst m = fileName.match(/@(\\d+)x\\./);\n\tconst scale = m ? +m[1] : 1;\n\n\treturn {\n\t\trealWidth: size.width,\n\t\trealHeight: size.height,\n\t\twidth: Math.floor(size.width / scale),\n\t\theight: Math.floor(size.height / scale)\n\t};\n}\n","module.exports = require(\"http\");","module.exports = require(\"https\");","module.exports = require(\"url\");","'use strict';\n\nvar fs = require('fs');\nvar path = require('path');\n\nvar detector = require('./detector');\n\nvar handlers = {};\nvar types = require('./types');\n\n// load all available handlers\ntypes.forEach(function (type) {\n  handlers[type] = require('./types/' + type);\n});\n\n// Maximum buffer size, with a default of 128 kilobytes.\n// TO-DO: make this adaptive based on the initial signature of the image\nvar MaxBufferSize = 128*1024;\n\nfunction lookup (buffer, filepath) {\n  // detect the file type.. don't rely on the extension\n  var type = detector(buffer, filepath);\n\n  // find an appropriate handler for this file type\n  if (type in handlers) {\n    var size = handlers[type].calculate(buffer, filepath);\n    if (size !== false) {\n      size.type = type;\n      return size;\n    }\n  }\n\n  // throw up, if we don't understand the file\n  throw new TypeError('unsupported file type: ' + type + ' (file: ' + filepath + ')');\n}\n\nfunction asyncFileToBuffer (filepath, callback) {\n  // open the file in read only mode\n  fs.open(filepath, 'r', function (err, descriptor) {\n    if (err) { return callback(err); }\n    var size = fs.fstatSync(descriptor).size;\n    if (size <= 0){return callback(new Error(\"File size is not greater than 0 —— \" + filepath)); }\n    var bufferSize = Math.min(size, MaxBufferSize);\n    var buffer = new Buffer(bufferSize);\n    // read first buffer block from the file, asynchronously\n    fs.read(descriptor, buffer, 0, bufferSize, 0, function (err) {\n      if (err) { return callback(err); }\n      // close the file, we are done\n      fs.close(descriptor, function (err) {\n        callback(err, buffer);\n      });\n    });\n  });\n}\n\nfunction syncFileToBuffer (filepath) {\n  // read from the file, synchronously\n  var descriptor = fs.openSync(filepath, 'r');\n  var size = fs.fstatSync(descriptor).size;\n  var bufferSize = Math.min(size, MaxBufferSize);\n  var buffer = new Buffer(bufferSize);\n  fs.readSync(descriptor, buffer, 0, bufferSize, 0);\n  fs.closeSync(descriptor);\n  return buffer;\n}\n\n/**\n * @params input - buffer or relative/absolute path of the image file\n * @params callback - optional function for async detection\n */\nmodule.exports = function (input, callback) {\n\n  // Handle buffer input\n  if (Buffer.isBuffer(input)) {\n    return lookup(input);\n  }\n\n  // input should be a string at this point\n  if (typeof input !== 'string') {\n    throw new TypeError('invalid invocation');\n  }\n\n  // resolve the file path\n  var filepath = path.resolve(input);\n\n  if (typeof callback === 'function') {\n    asyncFileToBuffer(filepath, function (err, buffer) {\n      if (err) { return callback(err); }\n\n      // return the dimensions\n      var dimensions;\n      try {\n        dimensions = lookup(buffer, filepath);\n      } catch (e) {\n        err = e;\n      }\n      callback(err, dimensions);\n    });\n  } else {\n    var buffer = syncFileToBuffer(filepath);\n    return lookup(buffer, filepath);\n  }\n};\n\nmodule.exports.types = types;\n","'use strict';\n\nvar typeMap = {};\nvar types = require('./types');\n\n// load all available handlers\ntypes.forEach(function (type) {\n  typeMap[type] = require('./types/' + type).detect;\n});\n\nmodule.exports = function (buffer, filepath) {\n  var type, result;\n  for (type in typeMap) {\n    result = typeMap[type](buffer, filepath);\n    if (result) {\n      return type;\n    }\n  }\n};\n","'use strict';\n\n// Abstract reading multi-byte unsigned integers\nfunction readUInt (buffer, bits, offset, isBigEndian) {\n  offset = offset || 0;\n  var endian = !!isBigEndian ? 'BE' : 'LE';\n  var method = buffer['readUInt' + bits + endian];\n  return method.call(buffer, offset);\n}\n\nmodule.exports = readUInt;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// Based on @sergeche's work on the emmet plugin for atom\n// TODO: Move to https://github.com/emmetio/file-utils\n\n\n\nimport * as path from 'path';\nimport * as fs from 'fs';\n\nconst reAbsolutePosix = /^\\/+/;\nconst reAbsoluteWin32 = /^\\\\+/;\nconst reAbsolute = path.sep === '/' ? reAbsolutePosix : reAbsoluteWin32;\n\n/**\n * Locates given `filePath` on user’s file system and returns absolute path to it.\n * This method expects either URL, or relative/absolute path to resource\n * @param basePath Base path to use if filePath is not absoulte\n * @param filePath File to locate.\n */\nexport function locateFile(base: string, filePath: string): Promise<string> {\n\tif (/^\\w+:/.test(filePath)) {\n\t\t// path with protocol, already absolute\n\t\treturn Promise.resolve(filePath);\n\t}\n\n\tfilePath = path.normalize(filePath);\n\n\treturn reAbsolute.test(filePath)\n\t\t? resolveAbsolute(base, filePath)\n\t\t: resolveRelative(base, filePath);\n}\n\n/**\n * Resolves relative file path\n */\nfunction resolveRelative(basePath: string, filePath: string): Promise<string> {\n\treturn tryFile(path.resolve(basePath, filePath));\n}\n\n/**\n * Resolves absolute file path agaist given editor: tries to find file in every\n * parent of editor’s file\n */\nfunction resolveAbsolute(basePath: string, filePath: string): Promise<string> {\n\treturn new Promise((resolve, reject) => {\n\t\tfilePath = filePath.replace(reAbsolute, '');\n\n\t\tconst next = (ctx: string) => {\n\t\t\ttryFile(path.resolve(ctx, filePath))\n\t\t\t\t.then(resolve, () => {\n\t\t\t\t\tconst dir = path.dirname(ctx);\n\t\t\t\t\tif (!dir || dir === ctx) {\n\t\t\t\t\t\treturn reject(`Unable to locate absolute file ${filePath}`);\n\t\t\t\t\t}\n\n\t\t\t\t\tnext(dir);\n\t\t\t\t});\n\t\t};\n\n\t\tnext(basePath);\n\t});\n}\n\n/**\n * Check if given file exists and it’s a file, not directory\n */\nfunction tryFile(file: string): Promise<string> {\n\treturn new Promise((resolve, reject) => {\n\t\tfs.stat(file, (err, stat) => {\n\t\t\tif (err) {\n\t\t\t\treturn reject(err);\n\t\t\t}\n\n\t\t\tif (!stat.isFile()) {\n\t\t\t\treturn reject(new Error(`${file} is not a file`));\n\t\t\t}\n\n\t\t\tresolve(file);\n\t\t});\n\t});\n}\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nexport var integer;\n(function (integer) {\n    integer.MIN_VALUE = -2147483648;\n    integer.MAX_VALUE = 2147483647;\n})(integer || (integer = {}));\nexport var uinteger;\n(function (uinteger) {\n    uinteger.MIN_VALUE = 0;\n    uinteger.MAX_VALUE = 2147483647;\n})(uinteger || (uinteger = {}));\n/**\n * The Position namespace provides helper functions to work with\n * [Position](#Position) literals.\n */\nexport var Position;\n(function (Position) {\n    /**\n     * Creates a new Position literal from the given line and character.\n     * @param line The position's line.\n     * @param character The position's character.\n     */\n    function create(line, character) {\n        if (line === Number.MAX_VALUE) {\n            line = uinteger.MAX_VALUE;\n        }\n        if (character === Number.MAX_VALUE) {\n            character = uinteger.MAX_VALUE;\n        }\n        return { line: line, character: character };\n    }\n    Position.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Position](#Position) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate) && Is.uinteger(candidate.line) && Is.uinteger(candidate.character);\n    }\n    Position.is = is;\n})(Position || (Position = {}));\n/**\n * The Range namespace provides helper functions to work with\n * [Range](#Range) literals.\n */\nexport var Range;\n(function (Range) {\n    function create(one, two, three, four) {\n        if (Is.uinteger(one) && Is.uinteger(two) && Is.uinteger(three) && Is.uinteger(four)) {\n            return { start: Position.create(one, two), end: Position.create(three, four) };\n        }\n        else if (Position.is(one) && Position.is(two)) {\n            return { start: one, end: two };\n        }\n        else {\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\n        }\n    }\n    Range.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n    }\n    Range.is = is;\n})(Range || (Range = {}));\n/**\n * The Location namespace provides helper functions to work with\n * [Location](#Location) literals.\n */\nexport var Location;\n(function (Location) {\n    /**\n     * Creates a Location literal.\n     * @param uri The location's uri.\n     * @param range The location's range.\n     */\n    function create(uri, range) {\n        return { uri: uri, range: range };\n    }\n    Location.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n    }\n    Location.is = is;\n})(Location || (Location = {}));\n/**\n * The LocationLink namespace provides helper functions to work with\n * [LocationLink](#LocationLink) literals.\n */\nexport var LocationLink;\n(function (LocationLink) {\n    /**\n     * Creates a LocationLink literal.\n     * @param targetUri The definition's uri.\n     * @param targetRange The full range of the definition.\n     * @param targetSelectionRange The span of the symbol definition at the target.\n     * @param originSelectionRange The span of the symbol being defined in the originating source file.\n     */\n    function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\n        return { targetUri: targetUri, targetRange: targetRange, targetSelectionRange: targetSelectionRange, originSelectionRange: originSelectionRange };\n    }\n    LocationLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the [LocationLink](#LocationLink) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri)\n            && (Range.is(candidate.targetSelectionRange) || Is.undefined(candidate.targetSelectionRange))\n            && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\n    }\n    LocationLink.is = is;\n})(LocationLink || (LocationLink = {}));\n/**\n * The Color namespace provides helper functions to work with\n * [Color](#Color) literals.\n */\nexport var Color;\n(function (Color) {\n    /**\n     * Creates a new Color literal.\n     */\n    function create(red, green, blue, alpha) {\n        return {\n            red: red,\n            green: green,\n            blue: blue,\n            alpha: alpha,\n        };\n    }\n    Color.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Color](#Color) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.numberRange(candidate.red, 0, 1)\n            && Is.numberRange(candidate.green, 0, 1)\n            && Is.numberRange(candidate.blue, 0, 1)\n            && Is.numberRange(candidate.alpha, 0, 1);\n    }\n    Color.is = is;\n})(Color || (Color = {}));\n/**\n * The ColorInformation namespace provides helper functions to work with\n * [ColorInformation](#ColorInformation) literals.\n */\nexport var ColorInformation;\n(function (ColorInformation) {\n    /**\n     * Creates a new ColorInformation literal.\n     */\n    function create(range, color) {\n        return {\n            range: range,\n            color: color,\n        };\n    }\n    ColorInformation.create = create;\n    /**\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Range.is(candidate.range) && Color.is(candidate.color);\n    }\n    ColorInformation.is = is;\n})(ColorInformation || (ColorInformation = {}));\n/**\n * The Color namespace provides helper functions to work with\n * [ColorPresentation](#ColorPresentation) literals.\n */\nexport var ColorPresentation;\n(function (ColorPresentation) {\n    /**\n     * Creates a new ColorInformation literal.\n     */\n    function create(label, textEdit, additionalTextEdits) {\n        return {\n            label: label,\n            textEdit: textEdit,\n            additionalTextEdits: additionalTextEdits,\n        };\n    }\n    ColorPresentation.create = create;\n    /**\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.string(candidate.label)\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\n    }\n    ColorPresentation.is = is;\n})(ColorPresentation || (ColorPresentation = {}));\n/**\n * Enum of known range kinds\n */\nexport var FoldingRangeKind;\n(function (FoldingRangeKind) {\n    /**\n     * Folding range for a comment\n     */\n    FoldingRangeKind[\"Comment\"] = \"comment\";\n    /**\n     * Folding range for a imports or includes\n     */\n    FoldingRangeKind[\"Imports\"] = \"imports\";\n    /**\n     * Folding range for a region (e.g. `#region`)\n     */\n    FoldingRangeKind[\"Region\"] = \"region\";\n})(FoldingRangeKind || (FoldingRangeKind = {}));\n/**\n * The folding range namespace provides helper functions to work with\n * [FoldingRange](#FoldingRange) literals.\n */\nexport var FoldingRange;\n(function (FoldingRange) {\n    /**\n     * Creates a new FoldingRange literal.\n     */\n    function create(startLine, endLine, startCharacter, endCharacter, kind) {\n        var result = {\n            startLine: startLine,\n            endLine: endLine\n        };\n        if (Is.defined(startCharacter)) {\n            result.startCharacter = startCharacter;\n        }\n        if (Is.defined(endCharacter)) {\n            result.endCharacter = endCharacter;\n        }\n        if (Is.defined(kind)) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    FoldingRange.create = create;\n    /**\n     * Checks whether the given literal conforms to the [FoldingRange](#FoldingRange) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.uinteger(candidate.startLine) && Is.uinteger(candidate.startLine)\n            && (Is.undefined(candidate.startCharacter) || Is.uinteger(candidate.startCharacter))\n            && (Is.undefined(candidate.endCharacter) || Is.uinteger(candidate.endCharacter))\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\n    }\n    FoldingRange.is = is;\n})(FoldingRange || (FoldingRange = {}));\n/**\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\n * [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) literals.\n */\nexport var DiagnosticRelatedInformation;\n(function (DiagnosticRelatedInformation) {\n    /**\n     * Creates a new DiagnosticRelatedInformation literal.\n     */\n    function create(location, message) {\n        return {\n            location: location,\n            message: message\n        };\n    }\n    DiagnosticRelatedInformation.create = create;\n    /**\n     * Checks whether the given literal conforms to the [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\n    }\n    DiagnosticRelatedInformation.is = is;\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\n/**\n * The diagnostic's severity.\n */\nexport var DiagnosticSeverity;\n(function (DiagnosticSeverity) {\n    /**\n     * Reports an error.\n     */\n    DiagnosticSeverity.Error = 1;\n    /**\n     * Reports a warning.\n     */\n    DiagnosticSeverity.Warning = 2;\n    /**\n     * Reports an information.\n     */\n    DiagnosticSeverity.Information = 3;\n    /**\n     * Reports a hint.\n     */\n    DiagnosticSeverity.Hint = 4;\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\n/**\n * The diagnostic tags.\n *\n * @since 3.15.0\n */\nexport var DiagnosticTag;\n(function (DiagnosticTag) {\n    /**\n     * Unused or unnecessary code.\n     *\n     * Clients are allowed to render diagnostics with this tag faded out instead of having\n     * an error squiggle.\n     */\n    DiagnosticTag.Unnecessary = 1;\n    /**\n     * Deprecated or obsolete code.\n     *\n     * Clients are allowed to rendered diagnostics with this tag strike through.\n     */\n    DiagnosticTag.Deprecated = 2;\n})(DiagnosticTag || (DiagnosticTag = {}));\n/**\n * The CodeDescription namespace provides functions to deal with descriptions for diagnostic codes.\n *\n * @since 3.16.0\n */\nexport var CodeDescription;\n(function (CodeDescription) {\n    function is(value) {\n        var candidate = value;\n        return candidate !== undefined && candidate !== null && Is.string(candidate.href);\n    }\n    CodeDescription.is = is;\n})(CodeDescription || (CodeDescription = {}));\n/**\n * The Diagnostic namespace provides helper functions to work with\n * [Diagnostic](#Diagnostic) literals.\n */\nexport var Diagnostic;\n(function (Diagnostic) {\n    /**\n     * Creates a new Diagnostic literal.\n     */\n    function create(range, message, severity, code, source, relatedInformation) {\n        var result = { range: range, message: message };\n        if (Is.defined(severity)) {\n            result.severity = severity;\n        }\n        if (Is.defined(code)) {\n            result.code = code;\n        }\n        if (Is.defined(source)) {\n            result.source = source;\n        }\n        if (Is.defined(relatedInformation)) {\n            result.relatedInformation = relatedInformation;\n        }\n        return result;\n    }\n    Diagnostic.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\n     */\n    function is(value) {\n        var _a;\n        var candidate = value;\n        return Is.defined(candidate)\n            && Range.is(candidate.range)\n            && Is.string(candidate.message)\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\n            && (Is.integer(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\n            && (Is.undefined(candidate.codeDescription) || (Is.string((_a = candidate.codeDescription) === null || _a === void 0 ? void 0 : _a.href)))\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\n    }\n    Diagnostic.is = is;\n})(Diagnostic || (Diagnostic = {}));\n/**\n * The Command namespace provides helper functions to work with\n * [Command](#Command) literals.\n */\nexport var Command;\n(function (Command) {\n    /**\n     * Creates a new Command literal.\n     */\n    function create(title, command) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var result = { title: title, command: command };\n        if (Is.defined(args) && args.length > 0) {\n            result.arguments = args;\n        }\n        return result;\n    }\n    Command.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\n    }\n    Command.is = is;\n})(Command || (Command = {}));\n/**\n * The TextEdit namespace provides helper function to create replace,\n * insert and delete edits more easily.\n */\nexport var TextEdit;\n(function (TextEdit) {\n    /**\n     * Creates a replace text edit.\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     */\n    function replace(range, newText) {\n        return { range: range, newText: newText };\n    }\n    TextEdit.replace = replace;\n    /**\n     * Creates a insert text edit.\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     */\n    function insert(position, newText) {\n        return { range: { start: position, end: position }, newText: newText };\n    }\n    TextEdit.insert = insert;\n    /**\n     * Creates a delete text edit.\n     * @param range The range of text to be deleted.\n     */\n    function del(range) {\n        return { range: range, newText: '' };\n    }\n    TextEdit.del = del;\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate)\n            && Is.string(candidate.newText)\n            && Range.is(candidate.range);\n    }\n    TextEdit.is = is;\n})(TextEdit || (TextEdit = {}));\nexport var ChangeAnnotation;\n(function (ChangeAnnotation) {\n    function create(label, needsConfirmation, description) {\n        var result = { label: label };\n        if (needsConfirmation !== undefined) {\n            result.needsConfirmation = needsConfirmation;\n        }\n        if (description !== undefined) {\n            result.description = description;\n        }\n        return result;\n    }\n    ChangeAnnotation.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate !== undefined && Is.objectLiteral(candidate) && Is.string(candidate.label) &&\n            (Is.boolean(candidate.needsConfirmation) || candidate.needsConfirmation === undefined) &&\n            (Is.string(candidate.description) || candidate.description === undefined);\n    }\n    ChangeAnnotation.is = is;\n})(ChangeAnnotation || (ChangeAnnotation = {}));\nexport var ChangeAnnotationIdentifier;\n(function (ChangeAnnotationIdentifier) {\n    function is(value) {\n        var candidate = value;\n        return typeof candidate === 'string';\n    }\n    ChangeAnnotationIdentifier.is = is;\n})(ChangeAnnotationIdentifier || (ChangeAnnotationIdentifier = {}));\nexport var AnnotatedTextEdit;\n(function (AnnotatedTextEdit) {\n    /**\n     * Creates an annotated replace text edit.\n     *\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     * @param annotation The annotation.\n     */\n    function replace(range, newText, annotation) {\n        return { range: range, newText: newText, annotationId: annotation };\n    }\n    AnnotatedTextEdit.replace = replace;\n    /**\n     * Creates an annotated insert text edit.\n     *\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     * @param annotation The annotation.\n     */\n    function insert(position, newText, annotation) {\n        return { range: { start: position, end: position }, newText: newText, annotationId: annotation };\n    }\n    AnnotatedTextEdit.insert = insert;\n    /**\n     * Creates an annotated delete text edit.\n     *\n     * @param range The range of text to be deleted.\n     * @param annotation The annotation.\n     */\n    function del(range, annotation) {\n        return { range: range, newText: '', annotationId: annotation };\n    }\n    AnnotatedTextEdit.del = del;\n    function is(value) {\n        var candidate = value;\n        return TextEdit.is(candidate) && (ChangeAnnotation.is(candidate.annotationId) || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    AnnotatedTextEdit.is = is;\n})(AnnotatedTextEdit || (AnnotatedTextEdit = {}));\n/**\n * The TextDocumentEdit namespace provides helper function to create\n * an edit that manipulates a text document.\n */\nexport var TextDocumentEdit;\n(function (TextDocumentEdit) {\n    /**\n     * Creates a new `TextDocumentEdit`\n     */\n    function create(textDocument, edits) {\n        return { textDocument: textDocument, edits: edits };\n    }\n    TextDocumentEdit.create = create;\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate)\n            && OptionalVersionedTextDocumentIdentifier.is(candidate.textDocument)\n            && Array.isArray(candidate.edits);\n    }\n    TextDocumentEdit.is = is;\n})(TextDocumentEdit || (TextDocumentEdit = {}));\nexport var CreateFile;\n(function (CreateFile) {\n    function create(uri, options, annotation) {\n        var result = {\n            kind: 'create',\n            uri: uri\n        };\n        if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    CreateFile.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate && candidate.kind === 'create' && Is.string(candidate.uri) && (candidate.options === undefined ||\n            ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    CreateFile.is = is;\n})(CreateFile || (CreateFile = {}));\nexport var RenameFile;\n(function (RenameFile) {\n    function create(oldUri, newUri, options, annotation) {\n        var result = {\n            kind: 'rename',\n            oldUri: oldUri,\n            newUri: newUri\n        };\n        if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    RenameFile.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate && candidate.kind === 'rename' && Is.string(candidate.oldUri) && Is.string(candidate.newUri) && (candidate.options === undefined ||\n            ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    RenameFile.is = is;\n})(RenameFile || (RenameFile = {}));\nexport var DeleteFile;\n(function (DeleteFile) {\n    function create(uri, options, annotation) {\n        var result = {\n            kind: 'delete',\n            uri: uri\n        };\n        if (options !== undefined && (options.recursive !== undefined || options.ignoreIfNotExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    DeleteFile.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate && candidate.kind === 'delete' && Is.string(candidate.uri) && (candidate.options === undefined ||\n            ((candidate.options.recursive === undefined || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === undefined || Is.boolean(candidate.options.ignoreIfNotExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    DeleteFile.is = is;\n})(DeleteFile || (DeleteFile = {}));\nexport var WorkspaceEdit;\n(function (WorkspaceEdit) {\n    function is(value) {\n        var candidate = value;\n        return candidate &&\n            (candidate.changes !== undefined || candidate.documentChanges !== undefined) &&\n            (candidate.documentChanges === undefined || candidate.documentChanges.every(function (change) {\n                if (Is.string(change.kind)) {\n                    return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\n                }\n                else {\n                    return TextDocumentEdit.is(change);\n                }\n            }));\n    }\n    WorkspaceEdit.is = is;\n})(WorkspaceEdit || (WorkspaceEdit = {}));\nvar TextEditChangeImpl = /** @class */ (function () {\n    function TextEditChangeImpl(edits, changeAnnotations) {\n        this.edits = edits;\n        this.changeAnnotations = changeAnnotations;\n    }\n    TextEditChangeImpl.prototype.insert = function (position, newText, annotation) {\n        var edit;\n        var id;\n        if (annotation === undefined) {\n            edit = TextEdit.insert(position, newText);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.insert(position, newText, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.insert(position, newText, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    };\n    TextEditChangeImpl.prototype.replace = function (range, newText, annotation) {\n        var edit;\n        var id;\n        if (annotation === undefined) {\n            edit = TextEdit.replace(range, newText);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.replace(range, newText, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.replace(range, newText, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    };\n    TextEditChangeImpl.prototype.delete = function (range, annotation) {\n        var edit;\n        var id;\n        if (annotation === undefined) {\n            edit = TextEdit.del(range);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.del(range, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.del(range, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    };\n    TextEditChangeImpl.prototype.add = function (edit) {\n        this.edits.push(edit);\n    };\n    TextEditChangeImpl.prototype.all = function () {\n        return this.edits;\n    };\n    TextEditChangeImpl.prototype.clear = function () {\n        this.edits.splice(0, this.edits.length);\n    };\n    TextEditChangeImpl.prototype.assertChangeAnnotations = function (value) {\n        if (value === undefined) {\n            throw new Error(\"Text edit change is not configured to manage change annotations.\");\n        }\n    };\n    return TextEditChangeImpl;\n}());\n/**\n * A helper class\n */\nvar ChangeAnnotations = /** @class */ (function () {\n    function ChangeAnnotations(annotations) {\n        this._annotations = annotations === undefined ? Object.create(null) : annotations;\n        this._counter = 0;\n        this._size = 0;\n    }\n    ChangeAnnotations.prototype.all = function () {\n        return this._annotations;\n    };\n    Object.defineProperty(ChangeAnnotations.prototype, \"size\", {\n        get: function () {\n            return this._size;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ChangeAnnotations.prototype.manage = function (idOrAnnotation, annotation) {\n        var id;\n        if (ChangeAnnotationIdentifier.is(idOrAnnotation)) {\n            id = idOrAnnotation;\n        }\n        else {\n            id = this.nextId();\n            annotation = idOrAnnotation;\n        }\n        if (this._annotations[id] !== undefined) {\n            throw new Error(\"Id \" + id + \" is already in use.\");\n        }\n        if (annotation === undefined) {\n            throw new Error(\"No annotation provided for id \" + id);\n        }\n        this._annotations[id] = annotation;\n        this._size++;\n        return id;\n    };\n    ChangeAnnotations.prototype.nextId = function () {\n        this._counter++;\n        return this._counter.toString();\n    };\n    return ChangeAnnotations;\n}());\n/**\n * A workspace change helps constructing changes to a workspace.\n */\nvar WorkspaceChange = /** @class */ (function () {\n    function WorkspaceChange(workspaceEdit) {\n        var _this = this;\n        this._textEditChanges = Object.create(null);\n        if (workspaceEdit !== undefined) {\n            this._workspaceEdit = workspaceEdit;\n            if (workspaceEdit.documentChanges) {\n                this._changeAnnotations = new ChangeAnnotations(workspaceEdit.changeAnnotations);\n                workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n                workspaceEdit.documentChanges.forEach(function (change) {\n                    if (TextDocumentEdit.is(change)) {\n                        var textEditChange = new TextEditChangeImpl(change.edits, _this._changeAnnotations);\n                        _this._textEditChanges[change.textDocument.uri] = textEditChange;\n                    }\n                });\n            }\n            else if (workspaceEdit.changes) {\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\n                    _this._textEditChanges[key] = textEditChange;\n                });\n            }\n        }\n        else {\n            this._workspaceEdit = {};\n        }\n    }\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\n        /**\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\n         * use to be returned from a workspace edit operation like rename.\n         */\n        get: function () {\n            this.initDocumentChanges();\n            if (this._changeAnnotations !== undefined) {\n                if (this._changeAnnotations.size === 0) {\n                    this._workspaceEdit.changeAnnotations = undefined;\n                }\n                else {\n                    this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n                }\n            }\n            return this._workspaceEdit;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\n        if (OptionalVersionedTextDocumentIdentifier.is(key)) {\n            this.initDocumentChanges();\n            if (this._workspaceEdit.documentChanges === undefined) {\n                throw new Error('Workspace edit is not configured for document changes.');\n            }\n            var textDocument = { uri: key.uri, version: key.version };\n            var result = this._textEditChanges[textDocument.uri];\n            if (!result) {\n                var edits = [];\n                var textDocumentEdit = {\n                    textDocument: textDocument,\n                    edits: edits\n                };\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\n                result = new TextEditChangeImpl(edits, this._changeAnnotations);\n                this._textEditChanges[textDocument.uri] = result;\n            }\n            return result;\n        }\n        else {\n            this.initChanges();\n            if (this._workspaceEdit.changes === undefined) {\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\n            }\n            var result = this._textEditChanges[key];\n            if (!result) {\n                var edits = [];\n                this._workspaceEdit.changes[key] = edits;\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[key] = result;\n            }\n            return result;\n        }\n    };\n    WorkspaceChange.prototype.initDocumentChanges = function () {\n        if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {\n            this._changeAnnotations = new ChangeAnnotations();\n            this._workspaceEdit.documentChanges = [];\n            this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n        }\n    };\n    WorkspaceChange.prototype.initChanges = function () {\n        if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {\n            this._workspaceEdit.changes = Object.create(null);\n        }\n    };\n    WorkspaceChange.prototype.createFile = function (uri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        var annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        var operation;\n        var id;\n        if (annotation === undefined) {\n            operation = CreateFile.create(uri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = CreateFile.create(uri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    };\n    WorkspaceChange.prototype.renameFile = function (oldUri, newUri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        var annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        var operation;\n        var id;\n        if (annotation === undefined) {\n            operation = RenameFile.create(oldUri, newUri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = RenameFile.create(oldUri, newUri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    };\n    WorkspaceChange.prototype.deleteFile = function (uri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        var annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        var operation;\n        var id;\n        if (annotation === undefined) {\n            operation = DeleteFile.create(uri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = DeleteFile.create(uri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    };\n    return WorkspaceChange;\n}());\nexport { WorkspaceChange };\n/**\n * The TextDocumentIdentifier namespace provides helper functions to work with\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\n */\nexport var TextDocumentIdentifier;\n(function (TextDocumentIdentifier) {\n    /**\n     * Creates a new TextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     */\n    function create(uri) {\n        return { uri: uri };\n    }\n    TextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri);\n    }\n    TextDocumentIdentifier.is = is;\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\n/**\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\n */\nexport var VersionedTextDocumentIdentifier;\n(function (VersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new VersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param uri The document's text.\n     */\n    function create(uri, version) {\n        return { uri: uri, version: version };\n    }\n    VersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.integer(candidate.version);\n    }\n    VersionedTextDocumentIdentifier.is = is;\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\n/**\n * The OptionalVersionedTextDocumentIdentifier namespace provides helper functions to work with\n * [OptionalVersionedTextDocumentIdentifier](#OptionalVersionedTextDocumentIdentifier) literals.\n */\nexport var OptionalVersionedTextDocumentIdentifier;\n(function (OptionalVersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new OptionalVersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param uri The document's text.\n     */\n    function create(uri, version) {\n        return { uri: uri, version: version };\n    }\n    OptionalVersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [OptionalVersionedTextDocumentIdentifier](#OptionalVersionedTextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.integer(candidate.version));\n    }\n    OptionalVersionedTextDocumentIdentifier.is = is;\n})(OptionalVersionedTextDocumentIdentifier || (OptionalVersionedTextDocumentIdentifier = {}));\n/**\n * The TextDocumentItem namespace provides helper functions to work with\n * [TextDocumentItem](#TextDocumentItem) literals.\n */\nexport var TextDocumentItem;\n(function (TextDocumentItem) {\n    /**\n     * Creates a new TextDocumentItem literal.\n     * @param uri The document's uri.\n     * @param languageId The document's language identifier.\n     * @param version The document's version number.\n     * @param text The document's text.\n     */\n    function create(uri, languageId, version, text) {\n        return { uri: uri, languageId: languageId, version: version, text: text };\n    }\n    TextDocumentItem.create = create;\n    /**\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.integer(candidate.version) && Is.string(candidate.text);\n    }\n    TextDocumentItem.is = is;\n})(TextDocumentItem || (TextDocumentItem = {}));\n/**\n * Describes the content type that a client supports in various\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n *\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\n * are reserved for internal usage.\n */\nexport var MarkupKind;\n(function (MarkupKind) {\n    /**\n     * Plain text is supported as a content format\n     */\n    MarkupKind.PlainText = 'plaintext';\n    /**\n     * Markdown is supported as a content format\n     */\n    MarkupKind.Markdown = 'markdown';\n})(MarkupKind || (MarkupKind = {}));\n(function (MarkupKind) {\n    /**\n     * Checks whether the given value is a value of the [MarkupKind](#MarkupKind) type.\n     */\n    function is(value) {\n        var candidate = value;\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\n    }\n    MarkupKind.is = is;\n})(MarkupKind || (MarkupKind = {}));\nexport var MarkupContent;\n(function (MarkupContent) {\n    /**\n     * Checks whether the given value conforms to the [MarkupContent](#MarkupContent) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\n    }\n    MarkupContent.is = is;\n})(MarkupContent || (MarkupContent = {}));\n/**\n * The kind of a completion entry.\n */\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind.Text = 1;\n    CompletionItemKind.Method = 2;\n    CompletionItemKind.Function = 3;\n    CompletionItemKind.Constructor = 4;\n    CompletionItemKind.Field = 5;\n    CompletionItemKind.Variable = 6;\n    CompletionItemKind.Class = 7;\n    CompletionItemKind.Interface = 8;\n    CompletionItemKind.Module = 9;\n    CompletionItemKind.Property = 10;\n    CompletionItemKind.Unit = 11;\n    CompletionItemKind.Value = 12;\n    CompletionItemKind.Enum = 13;\n    CompletionItemKind.Keyword = 14;\n    CompletionItemKind.Snippet = 15;\n    CompletionItemKind.Color = 16;\n    CompletionItemKind.File = 17;\n    CompletionItemKind.Reference = 18;\n    CompletionItemKind.Folder = 19;\n    CompletionItemKind.EnumMember = 20;\n    CompletionItemKind.Constant = 21;\n    CompletionItemKind.Struct = 22;\n    CompletionItemKind.Event = 23;\n    CompletionItemKind.Operator = 24;\n    CompletionItemKind.TypeParameter = 25;\n})(CompletionItemKind || (CompletionItemKind = {}));\n/**\n * Defines whether the insert text in a completion item should be interpreted as\n * plain text or a snippet.\n */\nexport var InsertTextFormat;\n(function (InsertTextFormat) {\n    /**\n     * The primary text to be inserted is treated as a plain string.\n     */\n    InsertTextFormat.PlainText = 1;\n    /**\n     * The primary text to be inserted is treated as a snippet.\n     *\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\n     * the end of the snippet. Placeholders with equal identifiers are linked,\n     * that is typing in one will update others too.\n     *\n     * See also: https://microsoft.github.io/language-server-protocol/specifications/specification-current/#snippet_syntax\n     */\n    InsertTextFormat.Snippet = 2;\n})(InsertTextFormat || (InsertTextFormat = {}));\n/**\n * Completion item tags are extra annotations that tweak the rendering of a completion\n * item.\n *\n * @since 3.15.0\n */\nexport var CompletionItemTag;\n(function (CompletionItemTag) {\n    /**\n     * Render a completion as obsolete, usually using a strike-out.\n     */\n    CompletionItemTag.Deprecated = 1;\n})(CompletionItemTag || (CompletionItemTag = {}));\n/**\n * The InsertReplaceEdit namespace provides functions to deal with insert / replace edits.\n *\n * @since 3.16.0\n */\nexport var InsertReplaceEdit;\n(function (InsertReplaceEdit) {\n    /**\n     * Creates a new insert / replace edit\n     */\n    function create(newText, insert, replace) {\n        return { newText: newText, insert: insert, replace: replace };\n    }\n    InsertReplaceEdit.create = create;\n    /**\n     * Checks whether the given literal conforms to the [InsertReplaceEdit](#InsertReplaceEdit) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return candidate && Is.string(candidate.newText) && Range.is(candidate.insert) && Range.is(candidate.replace);\n    }\n    InsertReplaceEdit.is = is;\n})(InsertReplaceEdit || (InsertReplaceEdit = {}));\n/**\n * How whitespace and indentation is handled during completion\n * item insertion.\n *\n * @since 3.16.0\n */\nexport var InsertTextMode;\n(function (InsertTextMode) {\n    /**\n     * The insertion or replace strings is taken as it is. If the\n     * value is multi line the lines below the cursor will be\n     * inserted using the indentation defined in the string value.\n     * The client will not apply any kind of adjustments to the\n     * string.\n     */\n    InsertTextMode.asIs = 1;\n    /**\n     * The editor adjusts leading whitespace of new lines so that\n     * they match the indentation up to the cursor of the line for\n     * which the item is accepted.\n     *\n     * Consider a line like this: <2tabs><cursor><3tabs>foo. Accepting a\n     * multi line completion item is indented using 2 tabs and all\n     * following lines inserted will be indented using 2 tabs as well.\n     */\n    InsertTextMode.adjustIndentation = 2;\n})(InsertTextMode || (InsertTextMode = {}));\n/**\n * The CompletionItem namespace provides functions to deal with\n * completion items.\n */\nexport var CompletionItem;\n(function (CompletionItem) {\n    /**\n     * Create a completion item and seed it with a label.\n     * @param label The completion item's label\n     */\n    function create(label) {\n        return { label: label };\n    }\n    CompletionItem.create = create;\n})(CompletionItem || (CompletionItem = {}));\n/**\n * The CompletionList namespace provides functions to deal with\n * completion lists.\n */\nexport var CompletionList;\n(function (CompletionList) {\n    /**\n     * Creates a new completion list.\n     *\n     * @param items The completion items.\n     * @param isIncomplete The list is not complete.\n     */\n    function create(items, isIncomplete) {\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\n    }\n    CompletionList.create = create;\n})(CompletionList || (CompletionList = {}));\nexport var MarkedString;\n(function (MarkedString) {\n    /**\n     * Creates a marked string from plain text.\n     *\n     * @param plainText The plain text.\n     */\n    function fromPlainText(plainText) {\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&'); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    }\n    MarkedString.fromPlainText = fromPlainText;\n    /**\n     * Checks whether the given value conforms to the [MarkedString](#MarkedString) type.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\n    }\n    MarkedString.is = is;\n})(MarkedString || (MarkedString = {}));\nexport var Hover;\n(function (Hover) {\n    /**\n     * Checks whether the given value conforms to the [Hover](#Hover) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\n            MarkedString.is(candidate.contents) ||\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === undefined || Range.is(value.range));\n    }\n    Hover.is = is;\n})(Hover || (Hover = {}));\n/**\n * The ParameterInformation namespace provides helper functions to work with\n * [ParameterInformation](#ParameterInformation) literals.\n */\nexport var ParameterInformation;\n(function (ParameterInformation) {\n    /**\n     * Creates a new parameter information literal.\n     *\n     * @param label A label string.\n     * @param documentation A doc string.\n     */\n    function create(label, documentation) {\n        return documentation ? { label: label, documentation: documentation } : { label: label };\n    }\n    ParameterInformation.create = create;\n})(ParameterInformation || (ParameterInformation = {}));\n/**\n * The SignatureInformation namespace provides helper functions to work with\n * [SignatureInformation](#SignatureInformation) literals.\n */\nexport var SignatureInformation;\n(function (SignatureInformation) {\n    function create(label, documentation) {\n        var parameters = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            parameters[_i - 2] = arguments[_i];\n        }\n        var result = { label: label };\n        if (Is.defined(documentation)) {\n            result.documentation = documentation;\n        }\n        if (Is.defined(parameters)) {\n            result.parameters = parameters;\n        }\n        else {\n            result.parameters = [];\n        }\n        return result;\n    }\n    SignatureInformation.create = create;\n})(SignatureInformation || (SignatureInformation = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrence.\n     */\n    DocumentHighlightKind.Text = 1;\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind.Read = 2;\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind.Write = 3;\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * DocumentHighlight namespace to provide helper functions to work with\n * [DocumentHighlight](#DocumentHighlight) literals.\n */\nexport var DocumentHighlight;\n(function (DocumentHighlight) {\n    /**\n     * Create a DocumentHighlight object.\n     * @param range The range the highlight applies to.\n     */\n    function create(range, kind) {\n        var result = { range: range };\n        if (Is.number(kind)) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    DocumentHighlight.create = create;\n})(DocumentHighlight || (DocumentHighlight = {}));\n/**\n * A symbol kind.\n */\nexport var SymbolKind;\n(function (SymbolKind) {\n    SymbolKind.File = 1;\n    SymbolKind.Module = 2;\n    SymbolKind.Namespace = 3;\n    SymbolKind.Package = 4;\n    SymbolKind.Class = 5;\n    SymbolKind.Method = 6;\n    SymbolKind.Property = 7;\n    SymbolKind.Field = 8;\n    SymbolKind.Constructor = 9;\n    SymbolKind.Enum = 10;\n    SymbolKind.Interface = 11;\n    SymbolKind.Function = 12;\n    SymbolKind.Variable = 13;\n    SymbolKind.Constant = 14;\n    SymbolKind.String = 15;\n    SymbolKind.Number = 16;\n    SymbolKind.Boolean = 17;\n    SymbolKind.Array = 18;\n    SymbolKind.Object = 19;\n    SymbolKind.Key = 20;\n    SymbolKind.Null = 21;\n    SymbolKind.EnumMember = 22;\n    SymbolKind.Struct = 23;\n    SymbolKind.Event = 24;\n    SymbolKind.Operator = 25;\n    SymbolKind.TypeParameter = 26;\n})(SymbolKind || (SymbolKind = {}));\n/**\n * Symbol tags are extra annotations that tweak the rendering of a symbol.\n * @since 3.16\n */\nexport var SymbolTag;\n(function (SymbolTag) {\n    /**\n     * Render a symbol as obsolete, usually using a strike-out.\n     */\n    SymbolTag.Deprecated = 1;\n})(SymbolTag || (SymbolTag = {}));\nexport var SymbolInformation;\n(function (SymbolInformation) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the location of the symbol.\n     * @param uri The resource of the location of symbol, defaults to the current document.\n     * @param containerName The name of the symbol containing the symbol.\n     */\n    function create(name, kind, range, uri, containerName) {\n        var result = {\n            name: name,\n            kind: kind,\n            location: { uri: uri, range: range }\n        };\n        if (containerName) {\n            result.containerName = containerName;\n        }\n        return result;\n    }\n    SymbolInformation.create = create;\n})(SymbolInformation || (SymbolInformation = {}));\nexport var DocumentSymbol;\n(function (DocumentSymbol) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param detail The detail of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the symbol.\n     * @param selectionRange The selectionRange of the symbol.\n     * @param children Children of the symbol.\n     */\n    function create(name, detail, kind, range, selectionRange, children) {\n        var result = {\n            name: name,\n            detail: detail,\n            kind: kind,\n            range: range,\n            selectionRange: selectionRange\n        };\n        if (children !== undefined) {\n            result.children = children;\n        }\n        return result;\n    }\n    DocumentSymbol.create = create;\n    /**\n     * Checks whether the given literal conforms to the [DocumentSymbol](#DocumentSymbol) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return candidate &&\n            Is.string(candidate.name) && Is.number(candidate.kind) &&\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\n            (candidate.detail === undefined || Is.string(candidate.detail)) &&\n            (candidate.deprecated === undefined || Is.boolean(candidate.deprecated)) &&\n            (candidate.children === undefined || Array.isArray(candidate.children)) &&\n            (candidate.tags === undefined || Array.isArray(candidate.tags));\n    }\n    DocumentSymbol.is = is;\n})(DocumentSymbol || (DocumentSymbol = {}));\n/**\n * A set of predefined code action kinds\n */\nexport var CodeActionKind;\n(function (CodeActionKind) {\n    /**\n     * Empty kind.\n     */\n    CodeActionKind.Empty = '';\n    /**\n     * Base kind for quickfix actions: 'quickfix'\n     */\n    CodeActionKind.QuickFix = 'quickfix';\n    /**\n     * Base kind for refactoring actions: 'refactor'\n     */\n    CodeActionKind.Refactor = 'refactor';\n    /**\n     * Base kind for refactoring extraction actions: 'refactor.extract'\n     *\n     * Example extract actions:\n     *\n     * - Extract method\n     * - Extract function\n     * - Extract variable\n     * - Extract interface from class\n     * - ...\n     */\n    CodeActionKind.RefactorExtract = 'refactor.extract';\n    /**\n     * Base kind for refactoring inline actions: 'refactor.inline'\n     *\n     * Example inline actions:\n     *\n     * - Inline function\n     * - Inline variable\n     * - Inline constant\n     * - ...\n     */\n    CodeActionKind.RefactorInline = 'refactor.inline';\n    /**\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\n     *\n     * Example rewrite actions:\n     *\n     * - Convert JavaScript function to class\n     * - Add or remove parameter\n     * - Encapsulate field\n     * - Make method static\n     * - Move method to base class\n     * - ...\n     */\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\n    /**\n     * Base kind for source actions: `source`\n     *\n     * Source code actions apply to the entire file.\n     */\n    CodeActionKind.Source = 'source';\n    /**\n     * Base kind for an organize imports source action: `source.organizeImports`\n     */\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\n    /**\n     * Base kind for auto-fix source actions: `source.fixAll`.\n     *\n     * Fix all actions automatically fix errors that have a clear fix that do not require user input.\n     * They should not suppress errors or perform unsafe fixes such as generating new types or classes.\n     *\n     * @since 3.15.0\n     */\n    CodeActionKind.SourceFixAll = 'source.fixAll';\n})(CodeActionKind || (CodeActionKind = {}));\n/**\n * The CodeActionContext namespace provides helper functions to work with\n * [CodeActionContext](#CodeActionContext) literals.\n */\nexport var CodeActionContext;\n(function (CodeActionContext) {\n    /**\n     * Creates a new CodeActionContext literal.\n     */\n    function create(diagnostics, only) {\n        var result = { diagnostics: diagnostics };\n        if (only !== undefined && only !== null) {\n            result.only = only;\n        }\n        return result;\n    }\n    CodeActionContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === undefined || Is.typedArray(candidate.only, Is.string));\n    }\n    CodeActionContext.is = is;\n})(CodeActionContext || (CodeActionContext = {}));\nexport var CodeAction;\n(function (CodeAction) {\n    function create(title, kindOrCommandOrEdit, kind) {\n        var result = { title: title };\n        var checkKind = true;\n        if (typeof kindOrCommandOrEdit === 'string') {\n            checkKind = false;\n            result.kind = kindOrCommandOrEdit;\n        }\n        else if (Command.is(kindOrCommandOrEdit)) {\n            result.command = kindOrCommandOrEdit;\n        }\n        else {\n            result.edit = kindOrCommandOrEdit;\n        }\n        if (checkKind && kind !== undefined) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    CodeAction.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate && Is.string(candidate.title) &&\n            (candidate.diagnostics === undefined || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\n            (candidate.kind === undefined || Is.string(candidate.kind)) &&\n            (candidate.edit !== undefined || candidate.command !== undefined) &&\n            (candidate.command === undefined || Command.is(candidate.command)) &&\n            (candidate.isPreferred === undefined || Is.boolean(candidate.isPreferred)) &&\n            (candidate.edit === undefined || WorkspaceEdit.is(candidate.edit));\n    }\n    CodeAction.is = is;\n})(CodeAction || (CodeAction = {}));\n/**\n * The CodeLens namespace provides helper functions to work with\n * [CodeLens](#CodeLens) literals.\n */\nexport var CodeLens;\n(function (CodeLens) {\n    /**\n     * Creates a new CodeLens literal.\n     */\n    function create(range, data) {\n        var result = { range: range };\n        if (Is.defined(data)) {\n            result.data = data;\n        }\n        return result;\n    }\n    CodeLens.create = create;\n    /**\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n    }\n    CodeLens.is = is;\n})(CodeLens || (CodeLens = {}));\n/**\n * The FormattingOptions namespace provides helper functions to work with\n * [FormattingOptions](#FormattingOptions) literals.\n */\nexport var FormattingOptions;\n(function (FormattingOptions) {\n    /**\n     * Creates a new FormattingOptions literal.\n     */\n    function create(tabSize, insertSpaces) {\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\n    }\n    FormattingOptions.create = create;\n    /**\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.uinteger(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n    }\n    FormattingOptions.is = is;\n})(FormattingOptions || (FormattingOptions = {}));\n/**\n * The DocumentLink namespace provides helper functions to work with\n * [DocumentLink](#DocumentLink) literals.\n */\nexport var DocumentLink;\n(function (DocumentLink) {\n    /**\n     * Creates a new DocumentLink literal.\n     */\n    function create(range, target, data) {\n        return { range: range, target: target, data: data };\n    }\n    DocumentLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n    }\n    DocumentLink.is = is;\n})(DocumentLink || (DocumentLink = {}));\n/**\n * The SelectionRange namespace provides helper function to work with\n * SelectionRange literals.\n */\nexport var SelectionRange;\n(function (SelectionRange) {\n    /**\n     * Creates a new SelectionRange\n     * @param range the range.\n     * @param parent an optional parent.\n     */\n    function create(range, parent) {\n        return { range: range, parent: parent };\n    }\n    SelectionRange.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate !== undefined && Range.is(candidate.range) && (candidate.parent === undefined || SelectionRange.is(candidate.parent));\n    }\n    SelectionRange.is = is;\n})(SelectionRange || (SelectionRange = {}));\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\n/**\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\n */\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new ITextDocument literal from the given uri and content.\n     * @param uri The document's uri.\n     * @param languageId  The document's language Id.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.uinteger(candidate.lineCount)\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n    }\n    TextDocument.is = is;\n    function applyEdits(document, edits) {\n        var text = document.getText();\n        var sortedEdits = mergeSort(edits, function (a, b) {\n            var diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return diff;\n        });\n        var lastModifiedOffset = text.length;\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\n            var e = sortedEdits[i];\n            var startOffset = document.offsetAt(e.range.start);\n            var endOffset = document.offsetAt(e.range.end);\n            if (endOffset <= lastModifiedOffset) {\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n            }\n            else {\n                throw new Error('Overlapping edit');\n            }\n            lastModifiedOffset = startOffset;\n        }\n        return text;\n    }\n    TextDocument.applyEdits = applyEdits;\n    function mergeSort(data, compare) {\n        if (data.length <= 1) {\n            // sorted\n            return data;\n        }\n        var p = (data.length / 2) | 0;\n        var left = data.slice(0, p);\n        var right = data.slice(p);\n        mergeSort(left, compare);\n        mergeSort(right, compare);\n        var leftIdx = 0;\n        var rightIdx = 0;\n        var i = 0;\n        while (leftIdx < left.length && rightIdx < right.length) {\n            var ret = compare(left[leftIdx], right[rightIdx]);\n            if (ret <= 0) {\n                // smaller_equal -> take left to preserve order\n                data[i++] = left[leftIdx++];\n            }\n            else {\n                // greater -> take right\n                data[i++] = right[rightIdx++];\n            }\n        }\n        while (leftIdx < left.length) {\n            data[i++] = left[leftIdx++];\n        }\n        while (rightIdx < right.length) {\n            data[i++] = right[rightIdx++];\n        }\n        return data;\n    }\n})(TextDocument || (TextDocument = {}));\n/**\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\n */\nvar FullTextDocument = /** @class */ (function () {\n    function FullTextDocument(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = undefined;\n    }\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\n        get: function () {\n            return this._uri;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\n        get: function () {\n            return this._languageId;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\n        get: function () {\n            return this._version;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    FullTextDocument.prototype.getText = function (range) {\n        if (range) {\n            var start = this.offsetAt(range.start);\n            var end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    };\n    FullTextDocument.prototype.update = function (event, version) {\n        this._content = event.text;\n        this._version = version;\n        this._lineOffsets = undefined;\n    };\n    FullTextDocument.prototype.getLineOffsets = function () {\n        if (this._lineOffsets === undefined) {\n            var lineOffsets = [];\n            var text = this._content;\n            var isLineStart = true;\n            for (var i = 0; i < text.length; i++) {\n                if (isLineStart) {\n                    lineOffsets.push(i);\n                    isLineStart = false;\n                }\n                var ch = text.charAt(i);\n                isLineStart = (ch === '\\r' || ch === '\\n');\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                    i++;\n                }\n            }\n            if (isLineStart && text.length > 0) {\n                lineOffsets.push(text.length);\n            }\n            this._lineOffsets = lineOffsets;\n        }\n        return this._lineOffsets;\n    };\n    FullTextDocument.prototype.positionAt = function (offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        var lineOffsets = this.getLineOffsets();\n        var low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return Position.create(0, offset);\n        }\n        while (low < high) {\n            var mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        var line = low - 1;\n        return Position.create(line, offset - lineOffsets[line]);\n    };\n    FullTextDocument.prototype.offsetAt = function (position) {\n        var lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        var lineOffset = lineOffsets[position.line];\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n    };\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\n        get: function () {\n            return this.getLineOffsets().length;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return FullTextDocument;\n}());\nvar Is;\n(function (Is) {\n    var toString = Object.prototype.toString;\n    function defined(value) {\n        return typeof value !== 'undefined';\n    }\n    Is.defined = defined;\n    function undefined(value) {\n        return typeof value === 'undefined';\n    }\n    Is.undefined = undefined;\n    function boolean(value) {\n        return value === true || value === false;\n    }\n    Is.boolean = boolean;\n    function string(value) {\n        return toString.call(value) === '[object String]';\n    }\n    Is.string = string;\n    function number(value) {\n        return toString.call(value) === '[object Number]';\n    }\n    Is.number = number;\n    function numberRange(value, min, max) {\n        return toString.call(value) === '[object Number]' && min <= value && value <= max;\n    }\n    Is.numberRange = numberRange;\n    function integer(value) {\n        return toString.call(value) === '[object Number]' && -2147483648 <= value && value <= 2147483647;\n    }\n    Is.integer = integer;\n    function uinteger(value) {\n        return toString.call(value) === '[object Number]' && 0 <= value && value <= 2147483647;\n    }\n    Is.uinteger = uinteger;\n    function func(value) {\n        return toString.call(value) === '[object Function]';\n    }\n    Is.func = func;\n    function objectLiteral(value) {\n        // Strictly speaking class instances pass this check as well. Since the LSP\n        // doesn't use classes we ignore this for now. If we do we need to add something\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\n        return value !== null && typeof value === 'object';\n    }\n    Is.objectLiteral = objectLiteral;\n    function typedArray(value, check) {\n        return Array.isArray(value) && value.every(check);\n    }\n    Is.typedArray = typedArray;\n})(Is || (Is = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { createScanner } from './scanner';\nvar ParseOptions;\n(function (ParseOptions) {\n    ParseOptions.DEFAULT = {\n        allowTrailingComma: false\n    };\n})(ParseOptions || (ParseOptions = {}));\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport function getLocation(text, position) {\n    var segments = []; // strings or numbers\n    var earlyReturnException = new Object();\n    var previousNode = undefined;\n    var previousNodeInst = {\n        value: {},\n        offset: 0,\n        length: 0,\n        type: 'object',\n        parent: undefined\n    };\n    var isAtPropertyKey = false;\n    function setPreviousNode(value, offset, length, type) {\n        previousNodeInst.value = value;\n        previousNodeInst.offset = offset;\n        previousNodeInst.length = length;\n        previousNodeInst.type = type;\n        previousNodeInst.colonOffset = undefined;\n        previousNode = previousNodeInst;\n    }\n    try {\n        visit(text, {\n            onObjectBegin: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = undefined;\n                isAtPropertyKey = position > offset;\n                segments.push(''); // push a placeholder (will be replaced)\n            },\n            onObjectProperty: function (name, offset, length) {\n                if (position < offset) {\n                    throw earlyReturnException;\n                }\n                setPreviousNode(name, offset, length, 'property');\n                segments[segments.length - 1] = name;\n                if (position <= offset + length) {\n                    throw earlyReturnException;\n                }\n            },\n            onObjectEnd: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = undefined;\n                segments.pop();\n            },\n            onArrayBegin: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = undefined;\n                segments.push(0);\n            },\n            onArrayEnd: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = undefined;\n                segments.pop();\n            },\n            onLiteralValue: function (value, offset, length) {\n                if (position < offset) {\n                    throw earlyReturnException;\n                }\n                setPreviousNode(value, offset, length, getNodeType(value));\n                if (position <= offset + length) {\n                    throw earlyReturnException;\n                }\n            },\n            onSeparator: function (sep, offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                if (sep === ':' && previousNode && previousNode.type === 'property') {\n                    previousNode.colonOffset = offset;\n                    isAtPropertyKey = false;\n                    previousNode = undefined;\n                }\n                else if (sep === ',') {\n                    var last = segments[segments.length - 1];\n                    if (typeof last === 'number') {\n                        segments[segments.length - 1] = last + 1;\n                    }\n                    else {\n                        isAtPropertyKey = true;\n                        segments[segments.length - 1] = '';\n                    }\n                    previousNode = undefined;\n                }\n            }\n        });\n    }\n    catch (e) {\n        if (e !== earlyReturnException) {\n            throw e;\n        }\n    }\n    return {\n        path: segments,\n        previousNode: previousNode,\n        isAtPropertyKey: isAtPropertyKey,\n        matches: function (pattern) {\n            var k = 0;\n            for (var i = 0; k < pattern.length && i < segments.length; i++) {\n                if (pattern[k] === segments[i] || pattern[k] === '*') {\n                    k++;\n                }\n                else if (pattern[k] !== '**') {\n                    return false;\n                }\n            }\n            return k === pattern.length;\n        }\n    };\n}\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport function parse(text, errors, options) {\n    if (errors === void 0) { errors = []; }\n    if (options === void 0) { options = ParseOptions.DEFAULT; }\n    var currentProperty = null;\n    var currentParent = [];\n    var previousParents = [];\n    function onValue(value) {\n        if (Array.isArray(currentParent)) {\n            currentParent.push(value);\n        }\n        else if (currentProperty !== null) {\n            currentParent[currentProperty] = value;\n        }\n    }\n    var visitor = {\n        onObjectBegin: function () {\n            var object = {};\n            onValue(object);\n            previousParents.push(currentParent);\n            currentParent = object;\n            currentProperty = null;\n        },\n        onObjectProperty: function (name) {\n            currentProperty = name;\n        },\n        onObjectEnd: function () {\n            currentParent = previousParents.pop();\n        },\n        onArrayBegin: function () {\n            var array = [];\n            onValue(array);\n            previousParents.push(currentParent);\n            currentParent = array;\n            currentProperty = null;\n        },\n        onArrayEnd: function () {\n            currentParent = previousParents.pop();\n        },\n        onLiteralValue: onValue,\n        onError: function (error, offset, length) {\n            errors.push({ error: error, offset: offset, length: length });\n        }\n    };\n    visit(text, visitor, options);\n    return currentParent[0];\n}\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport function parseTree(text, errors, options) {\n    if (errors === void 0) { errors = []; }\n    if (options === void 0) { options = ParseOptions.DEFAULT; }\n    var currentParent = { type: 'array', offset: -1, length: -1, children: [], parent: undefined }; // artificial root\n    function ensurePropertyComplete(endOffset) {\n        if (currentParent.type === 'property') {\n            currentParent.length = endOffset - currentParent.offset;\n            currentParent = currentParent.parent;\n        }\n    }\n    function onValue(valueNode) {\n        currentParent.children.push(valueNode);\n        return valueNode;\n    }\n    var visitor = {\n        onObjectBegin: function (offset) {\n            currentParent = onValue({ type: 'object', offset: offset, length: -1, parent: currentParent, children: [] });\n        },\n        onObjectProperty: function (name, offset, length) {\n            currentParent = onValue({ type: 'property', offset: offset, length: -1, parent: currentParent, children: [] });\n            currentParent.children.push({ type: 'string', value: name, offset: offset, length: length, parent: currentParent });\n        },\n        onObjectEnd: function (offset, length) {\n            ensurePropertyComplete(offset + length); // in case of a missing value for a property: make sure property is complete\n            currentParent.length = offset + length - currentParent.offset;\n            currentParent = currentParent.parent;\n            ensurePropertyComplete(offset + length);\n        },\n        onArrayBegin: function (offset, length) {\n            currentParent = onValue({ type: 'array', offset: offset, length: -1, parent: currentParent, children: [] });\n        },\n        onArrayEnd: function (offset, length) {\n            currentParent.length = offset + length - currentParent.offset;\n            currentParent = currentParent.parent;\n            ensurePropertyComplete(offset + length);\n        },\n        onLiteralValue: function (value, offset, length) {\n            onValue({ type: getNodeType(value), offset: offset, length: length, parent: currentParent, value: value });\n            ensurePropertyComplete(offset + length);\n        },\n        onSeparator: function (sep, offset, length) {\n            if (currentParent.type === 'property') {\n                if (sep === ':') {\n                    currentParent.colonOffset = offset;\n                }\n                else if (sep === ',') {\n                    ensurePropertyComplete(offset);\n                }\n            }\n        },\n        onError: function (error, offset, length) {\n            errors.push({ error: error, offset: offset, length: length });\n        }\n    };\n    visit(text, visitor, options);\n    var result = currentParent.children[0];\n    if (result) {\n        delete result.parent;\n    }\n    return result;\n}\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport function findNodeAtLocation(root, path) {\n    if (!root) {\n        return undefined;\n    }\n    var node = root;\n    for (var _i = 0, path_1 = path; _i < path_1.length; _i++) {\n        var segment = path_1[_i];\n        if (typeof segment === 'string') {\n            if (node.type !== 'object' || !Array.isArray(node.children)) {\n                return undefined;\n            }\n            var found = false;\n            for (var _a = 0, _b = node.children; _a < _b.length; _a++) {\n                var propertyNode = _b[_a];\n                if (Array.isArray(propertyNode.children) && propertyNode.children[0].value === segment) {\n                    node = propertyNode.children[1];\n                    found = true;\n                    break;\n                }\n            }\n            if (!found) {\n                return undefined;\n            }\n        }\n        else {\n            var index = segment;\n            if (node.type !== 'array' || index < 0 || !Array.isArray(node.children) || index >= node.children.length) {\n                return undefined;\n            }\n            node = node.children[index];\n        }\n    }\n    return node;\n}\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport function getNodePath(node) {\n    if (!node.parent || !node.parent.children) {\n        return [];\n    }\n    var path = getNodePath(node.parent);\n    if (node.parent.type === 'property') {\n        var key = node.parent.children[0].value;\n        path.push(key);\n    }\n    else if (node.parent.type === 'array') {\n        var index = node.parent.children.indexOf(node);\n        if (index !== -1) {\n            path.push(index);\n        }\n    }\n    return path;\n}\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport function getNodeValue(node) {\n    switch (node.type) {\n        case 'array':\n            return node.children.map(getNodeValue);\n        case 'object':\n            var obj = Object.create(null);\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var prop = _a[_i];\n                var valueNode = prop.children[1];\n                if (valueNode) {\n                    obj[prop.children[0].value] = getNodeValue(valueNode);\n                }\n            }\n            return obj;\n        case 'null':\n        case 'string':\n        case 'number':\n        case 'boolean':\n            return node.value;\n        default:\n            return undefined;\n    }\n}\nexport function contains(node, offset, includeRightBound) {\n    if (includeRightBound === void 0) { includeRightBound = false; }\n    return (offset >= node.offset && offset < (node.offset + node.length)) || includeRightBound && (offset === (node.offset + node.length));\n}\n/**\n * Finds the most inner node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport function findNodeAtOffset(node, offset, includeRightBound) {\n    if (includeRightBound === void 0) { includeRightBound = false; }\n    if (contains(node, offset, includeRightBound)) {\n        var children = node.children;\n        if (Array.isArray(children)) {\n            for (var i = 0; i < children.length && children[i].offset <= offset; i++) {\n                var item = findNodeAtOffset(children[i], offset, includeRightBound);\n                if (item) {\n                    return item;\n                }\n            }\n        }\n        return node;\n    }\n    return undefined;\n}\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport function visit(text, visitor, options) {\n    if (options === void 0) { options = ParseOptions.DEFAULT; }\n    var _scanner = createScanner(text, false);\n    function toNoArgVisit(visitFunction) {\n        return visitFunction ? function () { return visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength(), _scanner.getTokenStartLine(), _scanner.getTokenStartCharacter()); } : function () { return true; };\n    }\n    function toOneArgVisit(visitFunction) {\n        return visitFunction ? function (arg) { return visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength(), _scanner.getTokenStartLine(), _scanner.getTokenStartCharacter()); } : function () { return true; };\n    }\n    var onObjectBegin = toNoArgVisit(visitor.onObjectBegin), onObjectProperty = toOneArgVisit(visitor.onObjectProperty), onObjectEnd = toNoArgVisit(visitor.onObjectEnd), onArrayBegin = toNoArgVisit(visitor.onArrayBegin), onArrayEnd = toNoArgVisit(visitor.onArrayEnd), onLiteralValue = toOneArgVisit(visitor.onLiteralValue), onSeparator = toOneArgVisit(visitor.onSeparator), onComment = toNoArgVisit(visitor.onComment), onError = toOneArgVisit(visitor.onError);\n    var disallowComments = options && options.disallowComments;\n    var allowTrailingComma = options && options.allowTrailingComma;\n    function scanNext() {\n        while (true) {\n            var token = _scanner.scan();\n            switch (_scanner.getTokenError()) {\n                case 4 /* InvalidUnicode */:\n                    handleError(14 /* InvalidUnicode */);\n                    break;\n                case 5 /* InvalidEscapeCharacter */:\n                    handleError(15 /* InvalidEscapeCharacter */);\n                    break;\n                case 3 /* UnexpectedEndOfNumber */:\n                    handleError(13 /* UnexpectedEndOfNumber */);\n                    break;\n                case 1 /* UnexpectedEndOfComment */:\n                    if (!disallowComments) {\n                        handleError(11 /* UnexpectedEndOfComment */);\n                    }\n                    break;\n                case 2 /* UnexpectedEndOfString */:\n                    handleError(12 /* UnexpectedEndOfString */);\n                    break;\n                case 6 /* InvalidCharacter */:\n                    handleError(16 /* InvalidCharacter */);\n                    break;\n            }\n            switch (token) {\n                case 12 /* LineCommentTrivia */:\n                case 13 /* BlockCommentTrivia */:\n                    if (disallowComments) {\n                        handleError(10 /* InvalidCommentToken */);\n                    }\n                    else {\n                        onComment();\n                    }\n                    break;\n                case 16 /* Unknown */:\n                    handleError(1 /* InvalidSymbol */);\n                    break;\n                case 15 /* Trivia */:\n                case 14 /* LineBreakTrivia */:\n                    break;\n                default:\n                    return token;\n            }\n        }\n    }\n    function handleError(error, skipUntilAfter, skipUntil) {\n        if (skipUntilAfter === void 0) { skipUntilAfter = []; }\n        if (skipUntil === void 0) { skipUntil = []; }\n        onError(error);\n        if (skipUntilAfter.length + skipUntil.length > 0) {\n            var token = _scanner.getToken();\n            while (token !== 17 /* EOF */) {\n                if (skipUntilAfter.indexOf(token) !== -1) {\n                    scanNext();\n                    break;\n                }\n                else if (skipUntil.indexOf(token) !== -1) {\n                    break;\n                }\n                token = scanNext();\n            }\n        }\n    }\n    function parseString(isValue) {\n        var value = _scanner.getTokenValue();\n        if (isValue) {\n            onLiteralValue(value);\n        }\n        else {\n            onObjectProperty(value);\n        }\n        scanNext();\n        return true;\n    }\n    function parseLiteral() {\n        switch (_scanner.getToken()) {\n            case 11 /* NumericLiteral */:\n                var tokenValue = _scanner.getTokenValue();\n                var value = Number(tokenValue);\n                if (isNaN(value)) {\n                    handleError(2 /* InvalidNumberFormat */);\n                    value = 0;\n                }\n                onLiteralValue(value);\n                break;\n            case 7 /* NullKeyword */:\n                onLiteralValue(null);\n                break;\n            case 8 /* TrueKeyword */:\n                onLiteralValue(true);\n                break;\n            case 9 /* FalseKeyword */:\n                onLiteralValue(false);\n                break;\n            default:\n                return false;\n        }\n        scanNext();\n        return true;\n    }\n    function parseProperty() {\n        if (_scanner.getToken() !== 10 /* StringLiteral */) {\n            handleError(3 /* PropertyNameExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            return false;\n        }\n        parseString(false);\n        if (_scanner.getToken() === 6 /* ColonToken */) {\n            onSeparator(':');\n            scanNext(); // consume colon\n            if (!parseValue()) {\n                handleError(4 /* ValueExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            }\n        }\n        else {\n            handleError(5 /* ColonExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n        }\n        return true;\n    }\n    function parseObject() {\n        onObjectBegin();\n        scanNext(); // consume open brace\n        var needsComma = false;\n        while (_scanner.getToken() !== 2 /* CloseBraceToken */ && _scanner.getToken() !== 17 /* EOF */) {\n            if (_scanner.getToken() === 5 /* CommaToken */) {\n                if (!needsComma) {\n                    handleError(4 /* ValueExpected */, [], []);\n                }\n                onSeparator(',');\n                scanNext(); // consume comma\n                if (_scanner.getToken() === 2 /* CloseBraceToken */ && allowTrailingComma) {\n                    break;\n                }\n            }\n            else if (needsComma) {\n                handleError(6 /* CommaExpected */, [], []);\n            }\n            if (!parseProperty()) {\n                handleError(4 /* ValueExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            }\n            needsComma = true;\n        }\n        onObjectEnd();\n        if (_scanner.getToken() !== 2 /* CloseBraceToken */) {\n            handleError(7 /* CloseBraceExpected */, [2 /* CloseBraceToken */], []);\n        }\n        else {\n            scanNext(); // consume close brace\n        }\n        return true;\n    }\n    function parseArray() {\n        onArrayBegin();\n        scanNext(); // consume open bracket\n        var needsComma = false;\n        while (_scanner.getToken() !== 4 /* CloseBracketToken */ && _scanner.getToken() !== 17 /* EOF */) {\n            if (_scanner.getToken() === 5 /* CommaToken */) {\n                if (!needsComma) {\n                    handleError(4 /* ValueExpected */, [], []);\n                }\n                onSeparator(',');\n                scanNext(); // consume comma\n                if (_scanner.getToken() === 4 /* CloseBracketToken */ && allowTrailingComma) {\n                    break;\n                }\n            }\n            else if (needsComma) {\n                handleError(6 /* CommaExpected */, [], []);\n            }\n            if (!parseValue()) {\n                handleError(4 /* ValueExpected */, [], [4 /* CloseBracketToken */, 5 /* CommaToken */]);\n            }\n            needsComma = true;\n        }\n        onArrayEnd();\n        if (_scanner.getToken() !== 4 /* CloseBracketToken */) {\n            handleError(8 /* CloseBracketExpected */, [4 /* CloseBracketToken */], []);\n        }\n        else {\n            scanNext(); // consume close bracket\n        }\n        return true;\n    }\n    function parseValue() {\n        switch (_scanner.getToken()) {\n            case 3 /* OpenBracketToken */:\n                return parseArray();\n            case 1 /* OpenBraceToken */:\n                return parseObject();\n            case 10 /* StringLiteral */:\n                return parseString(true);\n            default:\n                return parseLiteral();\n        }\n    }\n    scanNext();\n    if (_scanner.getToken() === 17 /* EOF */) {\n        if (options.allowEmptyContent) {\n            return true;\n        }\n        handleError(4 /* ValueExpected */, [], []);\n        return false;\n    }\n    if (!parseValue()) {\n        handleError(4 /* ValueExpected */, [], []);\n        return false;\n    }\n    if (_scanner.getToken() !== 17 /* EOF */) {\n        handleError(9 /* EndOfFileExpected */, [], []);\n    }\n    return true;\n}\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport function stripComments(text, replaceCh) {\n    var _scanner = createScanner(text), parts = [], kind, offset = 0, pos;\n    do {\n        pos = _scanner.getPosition();\n        kind = _scanner.scan();\n        switch (kind) {\n            case 12 /* LineCommentTrivia */:\n            case 13 /* BlockCommentTrivia */:\n            case 17 /* EOF */:\n                if (offset !== pos) {\n                    parts.push(text.substring(offset, pos));\n                }\n                if (replaceCh !== undefined) {\n                    parts.push(_scanner.getTokenValue().replace(/[^\\r\\n]/g, replaceCh));\n                }\n                offset = _scanner.getPosition();\n                break;\n        }\n    } while (kind !== 17 /* EOF */);\n    return parts.join('');\n}\nexport function getNodeType(value) {\n    switch (typeof value) {\n        case 'boolean': return 'boolean';\n        case 'number': return 'number';\n        case 'string': return 'string';\n        case 'object': {\n            if (!value) {\n                return 'null';\n            }\n            else if (Array.isArray(value)) {\n                return 'array';\n            }\n            return 'object';\n        }\n        default: return 'null';\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport function createScanner(text, ignoreTrivia) {\n    if (ignoreTrivia === void 0) { ignoreTrivia = false; }\n    var len = text.length;\n    var pos = 0, value = '', tokenOffset = 0, token = 16 /* Unknown */, lineNumber = 0, lineStartOffset = 0, tokenLineStartOffset = 0, prevTokenLineStartOffset = 0, scanError = 0 /* None */;\n    function scanHexDigits(count, exact) {\n        var digits = 0;\n        var value = 0;\n        while (digits < count || !exact) {\n            var ch = text.charCodeAt(pos);\n            if (ch >= 48 /* _0 */ && ch <= 57 /* _9 */) {\n                value = value * 16 + ch - 48 /* _0 */;\n            }\n            else if (ch >= 65 /* A */ && ch <= 70 /* F */) {\n                value = value * 16 + ch - 65 /* A */ + 10;\n            }\n            else if (ch >= 97 /* a */ && ch <= 102 /* f */) {\n                value = value * 16 + ch - 97 /* a */ + 10;\n            }\n            else {\n                break;\n            }\n            pos++;\n            digits++;\n        }\n        if (digits < count) {\n            value = -1;\n        }\n        return value;\n    }\n    function setPosition(newPosition) {\n        pos = newPosition;\n        value = '';\n        tokenOffset = 0;\n        token = 16 /* Unknown */;\n        scanError = 0 /* None */;\n    }\n    function scanNumber() {\n        var start = pos;\n        if (text.charCodeAt(pos) === 48 /* _0 */) {\n            pos++;\n        }\n        else {\n            pos++;\n            while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n            }\n        }\n        if (pos < text.length && text.charCodeAt(pos) === 46 /* dot */) {\n            pos++;\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n            }\n            else {\n                scanError = 3 /* UnexpectedEndOfNumber */;\n                return text.substring(start, pos);\n            }\n        }\n        var end = pos;\n        if (pos < text.length && (text.charCodeAt(pos) === 69 /* E */ || text.charCodeAt(pos) === 101 /* e */)) {\n            pos++;\n            if (pos < text.length && text.charCodeAt(pos) === 43 /* plus */ || text.charCodeAt(pos) === 45 /* minus */) {\n                pos++;\n            }\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n                end = pos;\n            }\n            else {\n                scanError = 3 /* UnexpectedEndOfNumber */;\n            }\n        }\n        return text.substring(start, end);\n    }\n    function scanString() {\n        var result = '', start = pos;\n        while (true) {\n            if (pos >= len) {\n                result += text.substring(start, pos);\n                scanError = 2 /* UnexpectedEndOfString */;\n                break;\n            }\n            var ch = text.charCodeAt(pos);\n            if (ch === 34 /* doubleQuote */) {\n                result += text.substring(start, pos);\n                pos++;\n                break;\n            }\n            if (ch === 92 /* backslash */) {\n                result += text.substring(start, pos);\n                pos++;\n                if (pos >= len) {\n                    scanError = 2 /* UnexpectedEndOfString */;\n                    break;\n                }\n                var ch2 = text.charCodeAt(pos++);\n                switch (ch2) {\n                    case 34 /* doubleQuote */:\n                        result += '\\\"';\n                        break;\n                    case 92 /* backslash */:\n                        result += '\\\\';\n                        break;\n                    case 47 /* slash */:\n                        result += '/';\n                        break;\n                    case 98 /* b */:\n                        result += '\\b';\n                        break;\n                    case 102 /* f */:\n                        result += '\\f';\n                        break;\n                    case 110 /* n */:\n                        result += '\\n';\n                        break;\n                    case 114 /* r */:\n                        result += '\\r';\n                        break;\n                    case 116 /* t */:\n                        result += '\\t';\n                        break;\n                    case 117 /* u */:\n                        var ch3 = scanHexDigits(4, true);\n                        if (ch3 >= 0) {\n                            result += String.fromCharCode(ch3);\n                        }\n                        else {\n                            scanError = 4 /* InvalidUnicode */;\n                        }\n                        break;\n                    default:\n                        scanError = 5 /* InvalidEscapeCharacter */;\n                }\n                start = pos;\n                continue;\n            }\n            if (ch >= 0 && ch <= 0x1f) {\n                if (isLineBreak(ch)) {\n                    result += text.substring(start, pos);\n                    scanError = 2 /* UnexpectedEndOfString */;\n                    break;\n                }\n                else {\n                    scanError = 6 /* InvalidCharacter */;\n                    // mark as error but continue with string\n                }\n            }\n            pos++;\n        }\n        return result;\n    }\n    function scanNext() {\n        value = '';\n        scanError = 0 /* None */;\n        tokenOffset = pos;\n        lineStartOffset = lineNumber;\n        prevTokenLineStartOffset = tokenLineStartOffset;\n        if (pos >= len) {\n            // at the end\n            tokenOffset = len;\n            return token = 17 /* EOF */;\n        }\n        var code = text.charCodeAt(pos);\n        // trivia: whitespace\n        if (isWhiteSpace(code)) {\n            do {\n                pos++;\n                value += String.fromCharCode(code);\n                code = text.charCodeAt(pos);\n            } while (isWhiteSpace(code));\n            return token = 15 /* Trivia */;\n        }\n        // trivia: newlines\n        if (isLineBreak(code)) {\n            pos++;\n            value += String.fromCharCode(code);\n            if (code === 13 /* carriageReturn */ && text.charCodeAt(pos) === 10 /* lineFeed */) {\n                pos++;\n                value += '\\n';\n            }\n            lineNumber++;\n            tokenLineStartOffset = pos;\n            return token = 14 /* LineBreakTrivia */;\n        }\n        switch (code) {\n            // tokens: []{}:,\n            case 123 /* openBrace */:\n                pos++;\n                return token = 1 /* OpenBraceToken */;\n            case 125 /* closeBrace */:\n                pos++;\n                return token = 2 /* CloseBraceToken */;\n            case 91 /* openBracket */:\n                pos++;\n                return token = 3 /* OpenBracketToken */;\n            case 93 /* closeBracket */:\n                pos++;\n                return token = 4 /* CloseBracketToken */;\n            case 58 /* colon */:\n                pos++;\n                return token = 6 /* ColonToken */;\n            case 44 /* comma */:\n                pos++;\n                return token = 5 /* CommaToken */;\n            // strings\n            case 34 /* doubleQuote */:\n                pos++;\n                value = scanString();\n                return token = 10 /* StringLiteral */;\n            // comments\n            case 47 /* slash */:\n                var start = pos - 1;\n                // Single-line comment\n                if (text.charCodeAt(pos + 1) === 47 /* slash */) {\n                    pos += 2;\n                    while (pos < len) {\n                        if (isLineBreak(text.charCodeAt(pos))) {\n                            break;\n                        }\n                        pos++;\n                    }\n                    value = text.substring(start, pos);\n                    return token = 12 /* LineCommentTrivia */;\n                }\n                // Multi-line comment\n                if (text.charCodeAt(pos + 1) === 42 /* asterisk */) {\n                    pos += 2;\n                    var safeLength = len - 1; // For lookahead.\n                    var commentClosed = false;\n                    while (pos < safeLength) {\n                        var ch = text.charCodeAt(pos);\n                        if (ch === 42 /* asterisk */ && text.charCodeAt(pos + 1) === 47 /* slash */) {\n                            pos += 2;\n                            commentClosed = true;\n                            break;\n                        }\n                        pos++;\n                        if (isLineBreak(ch)) {\n                            if (ch === 13 /* carriageReturn */ && text.charCodeAt(pos) === 10 /* lineFeed */) {\n                                pos++;\n                            }\n                            lineNumber++;\n                            tokenLineStartOffset = pos;\n                        }\n                    }\n                    if (!commentClosed) {\n                        pos++;\n                        scanError = 1 /* UnexpectedEndOfComment */;\n                    }\n                    value = text.substring(start, pos);\n                    return token = 13 /* BlockCommentTrivia */;\n                }\n                // just a single slash\n                value += String.fromCharCode(code);\n                pos++;\n                return token = 16 /* Unknown */;\n            // numbers\n            case 45 /* minus */:\n                value += String.fromCharCode(code);\n                pos++;\n                if (pos === len || !isDigit(text.charCodeAt(pos))) {\n                    return token = 16 /* Unknown */;\n                }\n            // found a minus, followed by a number so\n            // we fall through to proceed with scanning\n            // numbers\n            case 48 /* _0 */:\n            case 49 /* _1 */:\n            case 50 /* _2 */:\n            case 51 /* _3 */:\n            case 52 /* _4 */:\n            case 53 /* _5 */:\n            case 54 /* _6 */:\n            case 55 /* _7 */:\n            case 56 /* _8 */:\n            case 57 /* _9 */:\n                value += scanNumber();\n                return token = 11 /* NumericLiteral */;\n            // literals and unknown symbols\n            default:\n                // is a literal? Read the full word.\n                while (pos < len && isUnknownContentCharacter(code)) {\n                    pos++;\n                    code = text.charCodeAt(pos);\n                }\n                if (tokenOffset !== pos) {\n                    value = text.substring(tokenOffset, pos);\n                    // keywords: true, false, null\n                    switch (value) {\n                        case 'true': return token = 8 /* TrueKeyword */;\n                        case 'false': return token = 9 /* FalseKeyword */;\n                        case 'null': return token = 7 /* NullKeyword */;\n                    }\n                    return token = 16 /* Unknown */;\n                }\n                // some\n                value += String.fromCharCode(code);\n                pos++;\n                return token = 16 /* Unknown */;\n        }\n    }\n    function isUnknownContentCharacter(code) {\n        if (isWhiteSpace(code) || isLineBreak(code)) {\n            return false;\n        }\n        switch (code) {\n            case 125 /* closeBrace */:\n            case 93 /* closeBracket */:\n            case 123 /* openBrace */:\n            case 91 /* openBracket */:\n            case 34 /* doubleQuote */:\n            case 58 /* colon */:\n            case 44 /* comma */:\n            case 47 /* slash */:\n                return false;\n        }\n        return true;\n    }\n    function scanNextNonTrivia() {\n        var result;\n        do {\n            result = scanNext();\n        } while (result >= 12 /* LineCommentTrivia */ && result <= 15 /* Trivia */);\n        return result;\n    }\n    return {\n        setPosition: setPosition,\n        getPosition: function () { return pos; },\n        scan: ignoreTrivia ? scanNextNonTrivia : scanNext,\n        getToken: function () { return token; },\n        getTokenValue: function () { return value; },\n        getTokenOffset: function () { return tokenOffset; },\n        getTokenLength: function () { return pos - tokenOffset; },\n        getTokenStartLine: function () { return lineStartOffset; },\n        getTokenStartCharacter: function () { return tokenOffset - prevTokenLineStartOffset; },\n        getTokenError: function () { return scanError; },\n    };\n}\nfunction isWhiteSpace(ch) {\n    return ch === 32 /* space */ || ch === 9 /* tab */ || ch === 11 /* verticalTab */ || ch === 12 /* formFeed */ ||\n        ch === 160 /* nonBreakingSpace */ || ch === 5760 /* ogham */ || ch >= 8192 /* enQuad */ && ch <= 8203 /* zeroWidthSpace */ ||\n        ch === 8239 /* narrowNoBreakSpace */ || ch === 8287 /* mathematicalSpace */ || ch === 12288 /* ideographicSpace */ || ch === 65279 /* byteOrderMark */;\n}\nfunction isLineBreak(ch) {\n    return ch === 10 /* lineFeed */ || ch === 13 /* carriageReturn */ || ch === 8232 /* lineSeparator */ || ch === 8233 /* paragraphSeparator */;\n}\nfunction isDigit(ch) {\n    return ch >= 48 /* _0 */ && ch <= 57 /* _9 */;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as formatter from './impl/format';\nimport * as edit from './impl/edit';\nimport * as scanner from './impl/scanner';\nimport * as parser from './impl/parser';\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport var createScanner = scanner.createScanner;\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport var getLocation = parser.getLocation;\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore, always check the errors list to find out if the input was valid.\n */\nexport var parse = parser.parse;\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport var parseTree = parser.parseTree;\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport var findNodeAtLocation = parser.findNodeAtLocation;\n/**\n * Finds the innermost node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport var findNodeAtOffset = parser.findNodeAtOffset;\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport var getNodePath = parser.getNodePath;\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport var getNodeValue = parser.getNodeValue;\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport var visit = parser.visit;\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport var stripComments = parser.stripComments;\nexport function printParseErrorCode(code) {\n    switch (code) {\n        case 1 /* InvalidSymbol */: return 'InvalidSymbol';\n        case 2 /* InvalidNumberFormat */: return 'InvalidNumberFormat';\n        case 3 /* PropertyNameExpected */: return 'PropertyNameExpected';\n        case 4 /* ValueExpected */: return 'ValueExpected';\n        case 5 /* ColonExpected */: return 'ColonExpected';\n        case 6 /* CommaExpected */: return 'CommaExpected';\n        case 7 /* CloseBraceExpected */: return 'CloseBraceExpected';\n        case 8 /* CloseBracketExpected */: return 'CloseBracketExpected';\n        case 9 /* EndOfFileExpected */: return 'EndOfFileExpected';\n        case 10 /* InvalidCommentToken */: return 'InvalidCommentToken';\n        case 11 /* UnexpectedEndOfComment */: return 'UnexpectedEndOfComment';\n        case 12 /* UnexpectedEndOfString */: return 'UnexpectedEndOfString';\n        case 13 /* UnexpectedEndOfNumber */: return 'UnexpectedEndOfNumber';\n        case 14 /* InvalidUnicode */: return 'InvalidUnicode';\n        case 15 /* InvalidEscapeCharacter */: return 'InvalidEscapeCharacter';\n        case 16 /* InvalidCharacter */: return 'InvalidCharacter';\n    }\n    return '<unknown ParseErrorCode>';\n}\n/**\n * Computes the edits needed to format a JSON document.\n *\n * @param documentText The input text\n * @param range The range to format or `undefined` to format the full content\n * @param options The formatting options\n * @returns A list of edit operations describing the formatting changes to the original document. Edits can be either inserts, replacements or\n * removals of text segments. All offsets refer to the original state of the document. No two edits must change or remove the same range of\n * text in the original document. However, multiple edits can have\n * the same offset, for example multiple inserts, or an insert followed by a remove or replace. The order in the array defines which edit is applied first.\n * To apply edits to an input, you can use `applyEdits`.\n */\nexport function format(documentText, range, options) {\n    return formatter.format(documentText, range, options);\n}\n/**\n * Computes the edits needed to modify a value in the JSON document.\n *\n * @param documentText The input text\n * @param path The path of the value to change. The path represents either to the document root, a property or an array item.\n * If the path points to an non-existing property or item, it will be created.\n * @param value The new value for the specified property or item. If the value is undefined,\n * the property or item will be removed.\n * @param options Options\n * @returns A list of edit operations describing the formatting changes to the original document. Edits can be either inserts, replacements or\n * removals of text segments. All offsets refer to the original state of the document. No two edits must change or remove the same range of\n * text in the original document. However, multiple edits can have\n * the same offset, for example multiple inserts, or an insert followed by a remove or replace. The order in the array defines which edit is applied first.\n * To apply edits to an input, you can use `applyEdits`.\n */\nexport function modify(text, path, value, options) {\n    return edit.setProperty(text, path, value, options);\n}\n/**\n * Applies edits to a input string.\n */\nexport function applyEdits(text, edits) {\n    for (var i = edits.length - 1; i >= 0; i--) {\n        text = edit.applyEdit(text, edits[i]);\n    }\n    return text;\n}\n","export const cssData = {\r\n    \"properties\": [\"additive-symbols\", \"align-content\", \"align-items\", \"justify-items\", \"justify-self\", \"justify-items\", \"align-self\", \"all\", \"alt\", \"animation\", \"animation-delay\", \"animation-direction\", \"animation-duration\", \"animation-fill-mode\", \"animation-iteration-count\", \"animation-name\", \"animation-play-state\", \"animation-timing-function\", \"backface-visibility\", \"background\", \"background-attachment\", \"background-blend-mode\", \"background-clip\", \"background-color\", \"background-image\", \"background-origin\", \"background-position\", \"background-position-x\", \"background-position-y\", \"background-repeat\", \"background-size\", \"behavior\", \"block-size\", \"border\", \"border-block-end\", \"border-block-start\", \"border-block-end-color\", \"border-block-start-color\", \"border-block-end-style\", \"border-block-start-style\", \"border-block-end-width\", \"border-block-start-width\", \"border-bottom\", \"border-bottom-color\", \"border-bottom-left-radius\", \"border-bottom-right-radius\", \"border-bottom-style\", \"border-bottom-width\", \"border-collapse\", \"border-color\", \"border-image\", \"border-image-outset\", \"border-image-repeat\", \"border-image-slice\", \"border-image-source\", \"border-image-width\", \"border-inline-end\", \"border-inline-start\", \"border-inline-end-color\", \"border-inline-start-color\", \"border-inline-end-style\", \"border-inline-start-style\", \"border-inline-end-width\", \"border-inline-start-width\", \"border-left\", \"border-left-color\", \"border-left-style\", \"border-left-width\", \"border-radius\", \"border-right\", \"border-right-color\", \"border-right-style\", \"border-right-width\", \"border-spacing\", \"border-style\", \"border-top\", \"border-top-color\", \"border-top-left-radius\", \"border-top-right-radius\", \"border-top-style\", \"border-top-width\", \"border-width\", \"bottom\", \"box-decoration-break\", \"box-shadow\", \"box-sizing\", \"break-after\", \"break-before\", \"break-inside\", \"caption-side\", \"caret-color\", \"clear\", \"clip\", \"clip-path\", \"clip-rule\", \"color\", \"color-interpolation-filters\", \"column-count\", \"column-fill\", \"column-gap\", \"column-rule\", \"column-rule-color\", \"column-rule-style\", \"column-rule-width\", \"columns\", \"column-span\", \"column-width\", \"contain\", \"content\", \"counter-increment\", \"counter-reset\", \"cursor\", \"direction\", \"display\", \"empty-cells\", \"enable-background\", \"fallback\", \"fill\", \"fill-opacity\", \"fill-rule\", \"filter\", \"flex\", \"flex-basis\", \"flex-direction\", \"flex-flow\", \"flex-grow\", \"flex-shrink\", \"flex-wrap\", \"float\", \"flood-color\", \"flood-opacity\", \"font\", \"font-family\", \"font-feature-settings\", \"font-kerning\", \"font-language-override\", \"font-size\", \"font-size-adjust\", \"font-stretch\", \"font-style\", \"font-synthesis\", \"font-variant\", \"font-variant-alternates\", \"font-variant-caps\", \"font-variant-east-asian\", \"font-variant-ligatures\", \"font-variant-numeric\", \"font-variant-position\", \"font-weight\", \"glyph-orientation-horizontal\", \"glyph-orientation-vertical\", \"grid-area\", \"grid-auto-columns\", \"grid-auto-flow\", \"grid-auto-rows\", \"grid-column\", \"grid-column-end\", \"grid-column-gap\", \"grid-column-start\", \"grid-gap\", \"grid-row\", \"grid-row-end\", \"grid-row-gap\", \"grid-row-start\", \"grid-template\", \"grid-template-areas\", \"grid-template-columns\", \"grid-template-rows\", \"height\", \"hyphens\", \"image-orientation\", \"image-rendering\", \"ime-mode\", \"inline-size\", \"isolation\", \"justify-content\", \"kerning\", \"left\", \"letter-spacing\", \"lighting-color\", \"line-break\", \"line-height\", \"list-style\", \"list-style-image\", \"list-style-position\", \"list-style-type\", \"margin\", \"margin-block-end\", \"margin-block-start\", \"margin-bottom\", \"margin-inline-end\", \"margin-inline-start\", \"margin-left\", \"margin-right\", \"margin-top\", \"marker\", \"marker-end\", \"marker-mid\", \"marker-start\", \"mask-type\", \"max-block-size\", \"max-height\", \"max-inline-size\", \"max-width\", \"min-block-size\", \"min-height\", \"min-inline-size\", \"min-width\", \"mix-blend-mode\", \"motion\", \"motion-offset\", \"motion-path\", \"motion-rotation\", \"-moz-animation\", \"-moz-animation-delay\", \"-moz-animation-direction\", \"-moz-animation-duration\", \"-moz-animation-iteration-count\", \"-moz-animation-name\", \"-moz-animation-play-state\", \"-moz-animation-timing-function\", \"-moz-appearance\", \"-moz-backface-visibility\", \"-moz-background-clip\", \"-moz-background-inline-policy\", \"-moz-background-origin\", \"-moz-border-bottom-colors\", \"-moz-border-image\", \"-moz-border-left-colors\", \"-moz-border-right-colors\", \"-moz-border-top-colors\", \"-moz-box-align\", \"-moz-box-direction\", \"-moz-box-flex\", \"-moz-box-flexgroup\", \"-moz-box-ordinal-group\", \"-moz-box-orient\", \"-moz-box-pack\", \"-moz-box-sizing\", \"-moz-column-count\", \"-moz-column-gap\", \"-moz-column-rule\", \"-moz-column-rule-color\", \"-moz-column-rule-style\", \"-moz-column-rule-width\", \"-moz-columns\", \"-moz-column-width\", \"-moz-font-feature-settings\", \"-moz-hyphens\", \"-moz-perspective\", \"-moz-perspective-origin\", \"-moz-text-align-last\", \"-moz-text-decoration-color\", \"-moz-text-decoration-line\", \"-moz-text-decoration-style\", \"-moz-text-size-adjust\", \"-moz-transform\", \"-moz-transform-origin\", \"-moz-transition\", \"-moz-transition-delay\", \"-moz-transition-duration\", \"-moz-transition-property\", \"-moz-transition-timing-function\", \"-moz-user-focus\", \"-moz-user-select\", \"-ms-accelerator\", \"-ms-behavior\", \"-ms-block-progression\", \"-ms-content-zoom-chaining\", \"-ms-content-zooming\", \"-ms-content-zoom-limit\", \"-ms-content-zoom-limit-max\", \"-ms-content-zoom-limit-min\", \"-ms-content-zoom-snap\", \"-ms-content-zoom-snap-points\", \"-ms-content-zoom-snap-type\", \"-ms-filter\", \"-ms-flex\", \"-ms-flex-align\", \"-ms-flex-direction\", \"-ms-flex-flow\", \"-ms-flex-item-align\", \"-ms-flex-line-pack\", \"-ms-flex-order\", \"-ms-flex-pack\", \"-ms-flex-wrap\", \"-ms-flow-from\", \"-ms-flow-into\", \"-ms-grid-column\", \"-ms-grid-column-align\", \"-ms-grid-columns\", \"-ms-grid-column-span\", \"-ms-grid-layer\", \"-ms-grid-row\", \"-ms-grid-row-align\", \"-ms-grid-rows\", \"-ms-grid-row-span\", \"-ms-high-contrast-adjust\", \"-ms-hyphenate-limit-chars\", \"-ms-hyphenate-limit-lines\", \"-ms-hyphenate-limit-zone\", \"-ms-hyphens\", \"-ms-ime-mode\", \"-ms-interpolation-mode\", \"-ms-layout-grid\", \"-ms-layout-grid-char\", \"-ms-layout-grid-line\", \"-ms-layout-grid-mode\", \"-ms-layout-grid-type\", \"-ms-line-break\", \"-ms-overflow-style\", \"-ms-perspective\", \"-ms-perspective-origin\", \"-ms-perspective-origin-x\", \"-ms-perspective-origin-y\", \"-ms-progress-appearance\", \"-ms-scrollbar-3dlight-color\", \"-ms-scrollbar-arrow-color\", \"-ms-scrollbar-base-color\", \"-ms-scrollbar-darkshadow-color\", \"-ms-scrollbar-face-color\", \"-ms-scrollbar-highlight-color\", \"-ms-scrollbar-shadow-color\", \"-ms-scrollbar-track-color\", \"-ms-scroll-chaining\", \"-ms-scroll-limit\", \"-ms-scroll-limit-x-max\", \"-ms-scroll-limit-x-min\", \"-ms-scroll-limit-y-max\", \"-ms-scroll-limit-y-min\", \"-ms-scroll-rails\", \"-ms-scroll-snap-points-x\", \"-ms-scroll-snap-points-y\", \"-ms-scroll-snap-type\", \"-ms-scroll-snap-x\", \"-ms-scroll-snap-y\", \"-ms-scroll-translation\", \"-ms-text-align-last\", \"-ms-text-autospace\", \"-ms-text-combine-horizontal\", \"-ms-text-justify\", \"-ms-text-kashida-space\", \"-ms-text-overflow\", \"-ms-text-size-adjust\", \"-ms-text-underline-position\", \"-ms-touch-action\", \"-ms-touch-select\", \"-ms-transform\", \"-ms-transform-origin\", \"-ms-transform-origin-x\", \"-ms-transform-origin-y\", \"-ms-transform-origin-z\", \"-ms-user-select\", \"-ms-word-break\", \"-ms-word-wrap\", \"-ms-wrap-flow\", \"-ms-wrap-margin\", \"-ms-wrap-through\", \"-ms-writing-mode\", \"-ms-zoom\", \"-ms-zoom-animation\", \"nav-down\", \"nav-index\", \"nav-left\", \"nav-right\", \"nav-up\", \"negative\", \"-o-animation\", \"-o-animation-delay\", \"-o-animation-direction\", \"-o-animation-duration\", \"-o-animation-fill-mode\", \"-o-animation-iteration-count\", \"-o-animation-name\", \"-o-animation-play-state\", \"-o-animation-timing-function\", \"object-fit\", \"object-position\", \"-o-border-image\", \"-o-object-fit\", \"-o-object-position\", \"opacity\", \"order\", \"orphans\", \"-o-table-baseline\", \"-o-tab-size\", \"-o-text-overflow\", \"-o-transform\", \"-o-transform-origin\", \"-o-transition\", \"-o-transition-delay\", \"-o-transition-duration\", \"-o-transition-property\", \"-o-transition-timing-function\", \"offset-block-end\", \"offset-block-start\", \"offset-inline-end\", \"offset-inline-start\", \"outline\", \"outline-color\", \"outline-offset\", \"outline-style\", \"outline-width\", \"overflow\", \"overflow-wrap\", \"overflow-x\", \"overflow-y\", \"pad\", \"padding\", \"padding-bottom\", \"padding-block-end\", \"padding-block-start\", \"padding-inline-end\", \"padding-inline-start\", \"padding-left\", \"padding-right\", \"padding-top\", \"page-break-after\", \"page-break-before\", \"page-break-inside\", \"paint-order\", \"perspective\", \"perspective-origin\", \"pointer-events\", \"position\", \"prefix\", \"quotes\", \"range\", \"resize\", \"right\", \"ruby-align\", \"ruby-overhang\", \"ruby-position\", \"ruby-span\", \"scrollbar-3dlight-color\", \"scrollbar-arrow-color\", \"scrollbar-base-color\", \"scrollbar-darkshadow-color\", \"scrollbar-face-color\", \"scrollbar-highlight-color\", \"scrollbar-shadow-color\", \"scrollbar-track-color\", \"scroll-behavior\", \"scroll-snap-coordinate\", \"scroll-snap-destination\", \"scroll-snap-points-x\", \"scroll-snap-points-y\", \"scroll-snap-type\", \"shape-image-threshold\", \"shape-margin\", \"shape-outside\", \"shape-rendering\", \"size\", \"src\", \"stop-color\", \"stop-opacity\", \"stroke\", \"stroke-dasharray\", \"stroke-dashoffset\", \"stroke-linecap\", \"stroke-linejoin\", \"stroke-miterlimit\", \"stroke-opacity\", \"stroke-width\", \"suffix\", \"system\", \"symbols\", \"table-layout\", \"tab-size\", \"text-align\", \"text-align-last\", \"text-anchor\", \"text-decoration\", \"text-decoration-color\", \"text-decoration-line\", \"text-decoration-style\", \"text-indent\", \"text-justify\", \"text-orientation\", \"text-overflow\", \"text-rendering\", \"text-shadow\", \"text-transform\", \"text-underline-position\", \"top\", \"touch-action\", \"transform\", \"transform-origin\", \"transform-style\", \"transition\", \"transition-delay\", \"transition-duration\", \"transition-property\", \"transition-timing-function\", \"unicode-bidi\", \"unicode-range\", \"user-select\", \"vertical-align\", \"visibility\", \"-webkit-animation\", \"-webkit-animation-delay\", \"-webkit-animation-direction\", \"-webkit-animation-duration\", \"-webkit-animation-fill-mode\", \"-webkit-animation-iteration-count\", \"-webkit-animation-name\", \"-webkit-animation-play-state\", \"-webkit-animation-timing-function\", \"-webkit-appearance\", \"-webkit-backdrop-filter\", \"-webkit-backface-visibility\", \"-webkit-background-clip\", \"-webkit-background-composite\", \"-webkit-background-origin\", \"-webkit-border-image\", \"-webkit-box-align\", \"-webkit-box-direction\", \"-webkit-box-flex\", \"-webkit-box-flex-group\", \"-webkit-box-ordinal-group\", \"-webkit-box-orient\", \"-webkit-box-pack\", \"-webkit-box-reflect\", \"-webkit-box-sizing\", \"-webkit-break-after\", \"-webkit-break-before\", \"-webkit-break-inside\", \"-webkit-column-break-after\", \"-webkit-column-break-before\", \"-webkit-column-break-inside\", \"-webkit-column-count\", \"-webkit-column-gap\", \"-webkit-column-rule\", \"-webkit-column-rule-color\", \"-webkit-column-rule-style\", \"-webkit-column-rule-width\", \"-webkit-columns\", \"-webkit-column-span\", \"-webkit-column-width\", \"-webkit-filter\", \"-webkit-flow-from\", \"-webkit-flow-into\", \"-webkit-font-feature-settings\", \"-webkit-hyphens\", \"-webkit-line-break\", \"-webkit-margin-bottom-collapse\", \"-webkit-margin-collapse\", \"-webkit-margin-start\", \"-webkit-margin-top-collapse\", \"-webkit-mask-clip\", \"-webkit-mask-image\", \"-webkit-mask-origin\", \"-webkit-mask-repeat\", \"-webkit-mask-size\", \"-webkit-nbsp-mode\", \"-webkit-overflow-scrolling\", \"-webkit-padding-start\", \"-webkit-perspective\", \"-webkit-perspective-origin\", \"-webkit-region-fragment\", \"-webkit-tap-highlight-color\", \"-webkit-text-fill-color\", \"-webkit-text-size-adjust\", \"-webkit-text-stroke\", \"-webkit-text-stroke-color\", \"-webkit-text-stroke-width\", \"-webkit-touch-callout\", \"-webkit-transform\", \"-webkit-transform-origin\", \"-webkit-transform-origin-x\", \"-webkit-transform-origin-y\", \"-webkit-transform-origin-z\", \"-webkit-transform-style\", \"-webkit-transition\", \"-webkit-transition-delay\", \"-webkit-transition-duration\", \"-webkit-transition-property\", \"-webkit-transition-timing-function\", \"-webkit-user-drag\", \"-webkit-user-modify\", \"-webkit-user-select\", \"white-space\", \"widows\", \"width\", \"will-change\", \"word-break\", \"word-spacing\", \"word-wrap\", \"writing-mode\", \"z-index\", \"zoom\"]\r\n};\r\nexport const htmlData = {\r\n    \"tags\": [\r\n        \"body\", \"head\", \"html\",\r\n        \"address\", \"blockquote\", \"dd\", \"div\", \"section\", \"article\", \"aside\", \"header\", \"footer\", \"nav\", \"menu\", \"dl\", \"dt\", \"fieldset\", \"form\", \"frame\", \"frameset\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"iframe\", \"noframes\", \"object\", \"ol\", \"p\", \"ul\", \"applet\", \"center\", \"dir\", \"hr\", \"pre\",\r\n        \"a\", \"abbr\", \"acronym\", \"area\", \"b\", \"base\", \"basefont\", \"bdo\", \"big\", \"br\", \"button\", \"caption\", \"cite\", \"code\", \"col\", \"colgroup\", \"del\", \"dfn\", \"em\", \"font\", \"i\", \"img\", \"input\", \"ins\", \"isindex\", \"kbd\", \"label\", \"legend\", \"li\", \"link\", \"map\", \"meta\", \"noscript\", \"optgroup\", \"option\", \"param\", \"q\", \"s\", \"samp\", \"script\", \"select\", \"small\", \"span\", \"strike\", \"strong\", \"style\", \"sub\", \"sup\", \"table\", \"tbody\", \"td\", \"textarea\", \"tfoot\", \"th\", \"thead\", \"title\", \"tr\", \"tt\", \"u\", \"var\",\r\n        \"canvas\", \"main\", \"figure\", \"plaintext\"\r\n    ]\r\n};\r\n//# sourceMappingURL=data.js.map","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar _a;\nvar isWindows;\nif (typeof process === 'object') {\n    isWindows = process.platform === 'win32';\n}\nelse if (typeof navigator === 'object') {\n    var userAgent = navigator.userAgent;\n    isWindows = userAgent.indexOf('Windows') >= 0;\n}\nfunction isHighSurrogate(charCode) {\n    return (0xD800 <= charCode && charCode <= 0xDBFF);\n}\nfunction isLowSurrogate(charCode) {\n    return (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\nfunction isLowerAsciiHex(code) {\n    return code >= 97 /* a */ && code <= 102 /* f */;\n}\nfunction isLowerAsciiLetter(code) {\n    return code >= 97 /* a */ && code <= 122 /* z */;\n}\nfunction isUpperAsciiLetter(code) {\n    return code >= 65 /* A */ && code <= 90 /* Z */;\n}\nfunction isAsciiLetter(code) {\n    return isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\n}\n//#endregion\nvar _schemePattern = /^\\w[\\w\\d+.-]*$/;\nvar _singleSlashStart = /^\\//;\nvar _doubleSlashStart = /^\\/\\//;\nfunction _validateUri(ret, _strict) {\n    // scheme, must be set\n    if (!ret.scheme && _strict) {\n        throw new Error(\"[UriError]: Scheme is missing: {scheme: \\\"\\\", authority: \\\"\" + ret.authority + \"\\\", path: \\\"\" + ret.path + \"\\\", query: \\\"\" + ret.query + \"\\\", fragment: \\\"\" + ret.fragment + \"\\\"}\");\n    }\n    // scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n    // ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n    if (ret.scheme && !_schemePattern.test(ret.scheme)) {\n        throw new Error('[UriError]: Scheme contains illegal characters.');\n    }\n    // path, http://tools.ietf.org/html/rfc3986#section-3.3\n    // If a URI contains an authority component, then the path component\n    // must either be empty or begin with a slash (\"/\") character.  If a URI\n    // does not contain an authority component, then the path cannot begin\n    // with two slash characters (\"//\").\n    if (ret.path) {\n        if (ret.authority) {\n            if (!_singleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n            }\n        }\n        else {\n            if (_doubleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n            }\n        }\n    }\n}\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme, _strict) {\n    if (!scheme && !_strict) {\n        return 'file';\n    }\n    return scheme;\n}\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme, path) {\n    // the slash-character is our 'default base' as we don't\n    // support constructing URIs relative to other URIs. This\n    // also means that we alter and potentially break paths.\n    // see https://tools.ietf.org/html/rfc3986#section-5.1.4\n    switch (scheme) {\n        case 'https':\n        case 'http':\n        case 'file':\n            if (!path) {\n                path = _slash;\n            }\n            else if (path[0] !== _slash) {\n                path = _slash + path;\n            }\n            break;\n    }\n    return path;\n}\nvar _empty = '';\nvar _slash = '/';\nvar _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n * ```txt\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n * ```\n */\nvar URI = /** @class */ (function () {\n    /**\n     * @internal\n     */\n    function URI(schemeOrData, authority, path, query, fragment, _strict) {\n        if (_strict === void 0) { _strict = false; }\n        if (typeof schemeOrData === 'object') {\n            this.scheme = schemeOrData.scheme || _empty;\n            this.authority = schemeOrData.authority || _empty;\n            this.path = schemeOrData.path || _empty;\n            this.query = schemeOrData.query || _empty;\n            this.fragment = schemeOrData.fragment || _empty;\n            // no validation because it's this URI\n            // that creates uri components.\n            // _validateUri(this);\n        }\n        else {\n            this.scheme = _schemeFix(schemeOrData, _strict);\n            this.authority = authority || _empty;\n            this.path = _referenceResolution(this.scheme, path || _empty);\n            this.query = query || _empty;\n            this.fragment = fragment || _empty;\n            _validateUri(this, _strict);\n        }\n    }\n    URI.isUri = function (thing) {\n        if (thing instanceof URI) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return typeof thing.authority === 'string'\n            && typeof thing.fragment === 'string'\n            && typeof thing.path === 'string'\n            && typeof thing.query === 'string'\n            && typeof thing.scheme === 'string'\n            && typeof thing.fsPath === 'function'\n            && typeof thing.with === 'function'\n            && typeof thing.toString === 'function';\n    };\n    Object.defineProperty(URI.prototype, \"fsPath\", {\n        // ---- filesystem path -----------------------\n        /**\n         * Returns a string representing the corresponding file system path of this URI.\n         * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n         * platform specific path separator.\n         *\n         * * Will *not* validate the path for invalid characters and semantics.\n         * * Will *not* look at the scheme of this URI.\n         * * The result shall *not* be used for display purposes but for accessing a file on disk.\n         *\n         *\n         * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n         * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n         *\n         * ```ts\n            const u = URI.parse('file://server/c$/folder/file.txt')\n            u.authority === 'server'\n            u.path === '/shares/c$/file.txt'\n            u.fsPath === '\\\\server\\c$\\folder\\file.txt'\n        ```\n         *\n         * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n         * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n         * with URIs that represent files on disk (`file` scheme).\n         */\n        get: function () {\n            // if (this.scheme !== 'file') {\n            // \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n            // }\n            return uriToFsPath(this, false);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // ---- modify to new -------------------------\n    URI.prototype.with = function (change) {\n        if (!change) {\n            return this;\n        }\n        var scheme = change.scheme, authority = change.authority, path = change.path, query = change.query, fragment = change.fragment;\n        if (scheme === undefined) {\n            scheme = this.scheme;\n        }\n        else if (scheme === null) {\n            scheme = _empty;\n        }\n        if (authority === undefined) {\n            authority = this.authority;\n        }\n        else if (authority === null) {\n            authority = _empty;\n        }\n        if (path === undefined) {\n            path = this.path;\n        }\n        else if (path === null) {\n            path = _empty;\n        }\n        if (query === undefined) {\n            query = this.query;\n        }\n        else if (query === null) {\n            query = _empty;\n        }\n        if (fragment === undefined) {\n            fragment = this.fragment;\n        }\n        else if (fragment === null) {\n            fragment = _empty;\n        }\n        if (scheme === this.scheme\n            && authority === this.authority\n            && path === this.path\n            && query === this.query\n            && fragment === this.fragment) {\n            return this;\n        }\n        return new _URI(scheme, authority, path, query, fragment);\n    };\n    // ---- parse & validate ------------------------\n    /**\n     * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\n     * `file:///usr/home`, or `scheme:with/path`.\n     *\n     * @param value A string which represents an URI (see `URI#toString`).\n     */\n    URI.parse = function (value, _strict) {\n        if (_strict === void 0) { _strict = false; }\n        var match = _regexp.exec(value);\n        if (!match) {\n            return new _URI(_empty, _empty, _empty, _empty, _empty);\n        }\n        return new _URI(match[2] || _empty, percentDecode(match[4] || _empty), percentDecode(match[5] || _empty), percentDecode(match[7] || _empty), percentDecode(match[9] || _empty), _strict);\n    };\n    /**\n     * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n     * `/usr/home`, or `\\\\server\\share\\some\\path`.\n     *\n     * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n     * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n     * `URI.parse('file://' + path)` because the path might contain characters that are\n     * interpreted (# and ?). See the following sample:\n     * ```ts\n    const good = URI.file('/coding/c#/project1');\n    good.scheme === 'file';\n    good.path === '/coding/c#/project1';\n    good.fragment === '';\n    const bad = URI.parse('file://' + '/coding/c#/project1');\n    bad.scheme === 'file';\n    bad.path === '/coding/c'; // path is now broken\n    bad.fragment === '/project1';\n    ```\n     *\n     * @param path A file system path (see `URI#fsPath`)\n     */\n    URI.file = function (path) {\n        var authority = _empty;\n        // normalize to fwd-slashes on windows,\n        // on other systems bwd-slashes are valid\n        // filename character, eg /f\\oo/ba\\r.txt\n        if (isWindows) {\n            path = path.replace(/\\\\/g, _slash);\n        }\n        // check for authority as used in UNC shares\n        // or use the path as given\n        if (path[0] === _slash && path[1] === _slash) {\n            var idx = path.indexOf(_slash, 2);\n            if (idx === -1) {\n                authority = path.substring(2);\n                path = _slash;\n            }\n            else {\n                authority = path.substring(2, idx);\n                path = path.substring(idx) || _slash;\n            }\n        }\n        return new _URI('file', authority, path, _empty, _empty);\n    };\n    URI.from = function (components) {\n        return new _URI(components.scheme, components.authority, components.path, components.query, components.fragment);\n    };\n    // /**\n    //  * Join a URI path with path fragments and normalizes the resulting path.\n    //  *\n    //  * @param uri The input URI.\n    //  * @param pathFragment The path fragment to add to the URI path.\n    //  * @returns The resulting URI.\n    //  */\n    // static joinPath(uri: URI, ...pathFragment: string[]): URI {\n    // \tif (!uri.path) {\n    // \t\tthrow new Error(`[UriError]: cannot call joinPaths on URI without path`);\n    // \t}\n    // \tlet newPath: string;\n    // \tif (isWindows && uri.scheme === 'file') {\n    // \t\tnewPath = URI.file(paths.win32.join(uriToFsPath(uri, true), ...pathFragment)).path;\n    // \t} else {\n    // \t\tnewPath = paths.posix.join(uri.path, ...pathFragment);\n    // \t}\n    // \treturn uri.with({ path: newPath });\n    // }\n    // ---- printing/externalize ---------------------------\n    /**\n     * Creates a string representation for this URI. It's guaranteed that calling\n     * `URI.parse` with the result of this function creates an URI which is equal\n     * to this URI.\n     *\n     * * The result shall *not* be used for display purposes but for externalization or transport.\n     * * The result will be encoded using the percentage encoding and encoding happens mostly\n     * ignore the scheme-specific encoding rules.\n     *\n     * @param skipEncoding Do not encode the result, default is `false`\n     */\n    URI.prototype.toString = function (skipEncoding) {\n        if (skipEncoding === void 0) { skipEncoding = false; }\n        return _asFormatted(this, skipEncoding);\n    };\n    URI.prototype.toJSON = function () {\n        return this;\n    };\n    URI.revive = function (data) {\n        if (!data) {\n            return data;\n        }\n        else if (data instanceof URI) {\n            return data;\n        }\n        else {\n            var result = new _URI(data);\n            result._formatted = data.external;\n            result._fsPath = data._sep === _pathSepMarker ? data.fsPath : null;\n            return result;\n        }\n    };\n    return URI;\n}());\nexport { URI };\nvar _pathSepMarker = isWindows ? 1 : undefined;\n// eslint-disable-next-line @typescript-eslint/class-name-casing\nvar _URI = /** @class */ (function (_super) {\n    __extends(_URI, _super);\n    function _URI() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._formatted = null;\n        _this._fsPath = null;\n        return _this;\n    }\n    Object.defineProperty(_URI.prototype, \"fsPath\", {\n        get: function () {\n            if (!this._fsPath) {\n                this._fsPath = uriToFsPath(this, false);\n            }\n            return this._fsPath;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _URI.prototype.toString = function (skipEncoding) {\n        if (skipEncoding === void 0) { skipEncoding = false; }\n        if (!skipEncoding) {\n            if (!this._formatted) {\n                this._formatted = _asFormatted(this, false);\n            }\n            return this._formatted;\n        }\n        else {\n            // we don't cache that\n            return _asFormatted(this, true);\n        }\n    };\n    _URI.prototype.toJSON = function () {\n        var res = {\n            $mid: 1\n        };\n        // cached state\n        if (this._fsPath) {\n            res.fsPath = this._fsPath;\n            res._sep = _pathSepMarker;\n        }\n        if (this._formatted) {\n            res.external = this._formatted;\n        }\n        // uri components\n        if (this.path) {\n            res.path = this.path;\n        }\n        if (this.scheme) {\n            res.scheme = this.scheme;\n        }\n        if (this.authority) {\n            res.authority = this.authority;\n        }\n        if (this.query) {\n            res.query = this.query;\n        }\n        if (this.fragment) {\n            res.fragment = this.fragment;\n        }\n        return res;\n    };\n    return _URI;\n}(URI));\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nvar encodeTable = (_a = {},\n    _a[58 /* Colon */] = '%3A',\n    _a[47 /* Slash */] = '%2F',\n    _a[63 /* QuestionMark */] = '%3F',\n    _a[35 /* Hash */] = '%23',\n    _a[91 /* OpenSquareBracket */] = '%5B',\n    _a[93 /* CloseSquareBracket */] = '%5D',\n    _a[64 /* AtSign */] = '%40',\n    _a[33 /* ExclamationMark */] = '%21',\n    _a[36 /* DollarSign */] = '%24',\n    _a[38 /* Ampersand */] = '%26',\n    _a[39 /* SingleQuote */] = '%27',\n    _a[40 /* OpenParen */] = '%28',\n    _a[41 /* CloseParen */] = '%29',\n    _a[42 /* Asterisk */] = '%2A',\n    _a[43 /* Plus */] = '%2B',\n    _a[44 /* Comma */] = '%2C',\n    _a[59 /* Semicolon */] = '%3B',\n    _a[61 /* Equals */] = '%3D',\n    _a[32 /* Space */] = '%20',\n    _a);\nfunction encodeURIComponentFast(uriComponent, allowSlash) {\n    var res = undefined;\n    var nativeEncodePos = -1;\n    for (var pos = 0; pos < uriComponent.length; pos++) {\n        var code = uriComponent.charCodeAt(pos);\n        // unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n        if ((code >= 97 /* a */ && code <= 122 /* z */)\n            || (code >= 65 /* A */ && code <= 90 /* Z */)\n            || (code >= 48 /* Digit0 */ && code <= 57 /* Digit9 */)\n            || code === 45 /* Dash */\n            || code === 46 /* Period */\n            || code === 95 /* Underline */\n            || code === 126 /* Tilde */\n            || (allowSlash && code === 47 /* Slash */)) {\n            // check if we are delaying native encode\n            if (nativeEncodePos !== -1) {\n                res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                nativeEncodePos = -1;\n            }\n            // check if we write into a new string (by default we try to return the param)\n            if (res !== undefined) {\n                res += uriComponent.charAt(pos);\n            }\n        }\n        else {\n            // encoding needed, we need to allocate a new string\n            if (res === undefined) {\n                res = uriComponent.substr(0, pos);\n            }\n            // check with default table first\n            var escaped = encodeTable[code];\n            if (escaped !== undefined) {\n                // check if we are delaying native encode\n                if (nativeEncodePos !== -1) {\n                    res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                    nativeEncodePos = -1;\n                }\n                // append escaped variant to result\n                res += escaped;\n            }\n            else if (nativeEncodePos === -1) {\n                // use native encode only when needed\n                nativeEncodePos = pos;\n            }\n        }\n    }\n    if (nativeEncodePos !== -1) {\n        res += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n    }\n    return res !== undefined ? res : uriComponent;\n}\nfunction encodeURIComponentMinimal(path) {\n    var res = undefined;\n    for (var pos = 0; pos < path.length; pos++) {\n        var code = path.charCodeAt(pos);\n        if (code === 35 /* Hash */ || code === 63 /* QuestionMark */) {\n            if (res === undefined) {\n                res = path.substr(0, pos);\n            }\n            res += encodeTable[code];\n        }\n        else {\n            if (res !== undefined) {\n                res += path[pos];\n            }\n        }\n    }\n    return res !== undefined ? res : path;\n}\n/**\n * Compute `fsPath` for the given uri\n */\nexport function uriToFsPath(uri, keepDriveLetterCasing) {\n    var value;\n    if (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n        // unc path: file://shares/c$/far/boo\n        value = \"//\" + uri.authority + uri.path;\n    }\n    else if (uri.path.charCodeAt(0) === 47 /* Slash */\n        && (uri.path.charCodeAt(1) >= 65 /* A */ && uri.path.charCodeAt(1) <= 90 /* Z */ || uri.path.charCodeAt(1) >= 97 /* a */ && uri.path.charCodeAt(1) <= 122 /* z */)\n        && uri.path.charCodeAt(2) === 58 /* Colon */) {\n        if (!keepDriveLetterCasing) {\n            // windows drive letter: file:///c:/far/boo\n            value = uri.path[1].toLowerCase() + uri.path.substr(2);\n        }\n        else {\n            value = uri.path.substr(1);\n        }\n    }\n    else {\n        // other path\n        value = uri.path;\n    }\n    if (isWindows) {\n        value = value.replace(/\\//g, '\\\\');\n    }\n    return value;\n}\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri, skipEncoding) {\n    var encoder = !skipEncoding\n        ? encodeURIComponentFast\n        : encodeURIComponentMinimal;\n    var res = '';\n    var scheme = uri.scheme, authority = uri.authority, path = uri.path, query = uri.query, fragment = uri.fragment;\n    if (scheme) {\n        res += scheme;\n        res += ':';\n    }\n    if (authority || scheme === 'file') {\n        res += _slash;\n        res += _slash;\n    }\n    if (authority) {\n        var idx = authority.indexOf('@');\n        if (idx !== -1) {\n            // <user>@<auth>\n            var userinfo = authority.substr(0, idx);\n            authority = authority.substr(idx + 1);\n            idx = userinfo.indexOf(':');\n            if (idx === -1) {\n                res += encoder(userinfo, false);\n            }\n            else {\n                // <user>:<pass>@<auth>\n                res += encoder(userinfo.substr(0, idx), false);\n                res += ':';\n                res += encoder(userinfo.substr(idx + 1), false);\n            }\n            res += '@';\n        }\n        authority = authority.toLowerCase();\n        idx = authority.indexOf(':');\n        if (idx === -1) {\n            res += encoder(authority, false);\n        }\n        else {\n            // <auth>:<port>\n            res += encoder(authority.substr(0, idx), false);\n            res += authority.substr(idx);\n        }\n    }\n    if (path) {\n        // lower-case windows drive letters in /C:/fff or C:/fff\n        if (path.length >= 3 && path.charCodeAt(0) === 47 /* Slash */ && path.charCodeAt(2) === 58 /* Colon */) {\n            var code = path.charCodeAt(1);\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\n                path = \"/\" + String.fromCharCode(code + 32) + \":\" + path.substr(3); // \"/c:\".length === 3\n            }\n        }\n        else if (path.length >= 2 && path.charCodeAt(1) === 58 /* Colon */) {\n            var code = path.charCodeAt(0);\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\n                path = String.fromCharCode(code + 32) + \":\" + path.substr(2); // \"/c:\".length === 3\n            }\n        }\n        // encode the rest of the path\n        res += encoder(path, true);\n    }\n    if (query) {\n        res += '?';\n        res += encoder(query, false);\n    }\n    if (fragment) {\n        res += '#';\n        res += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n    }\n    return res;\n}\n// --- decode\nfunction decodeURIComponentGraceful(str) {\n    try {\n        return decodeURIComponent(str);\n    }\n    catch (_a) {\n        if (str.length > 3) {\n            return str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n        }\n        else {\n            return str;\n        }\n    }\n}\nvar _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\nfunction percentDecode(str) {\n    if (!str.match(_rEncodedAsHex)) {\n        return str;\n    }\n    return str.replace(_rEncodedAsHex, function (match) { return decodeURIComponentGraceful(match); });\n}\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport var FileType;\r\n(function (FileType) {\r\n    /**\r\n     * The file type is unknown.\r\n     */\r\n    FileType[FileType[\"Unknown\"] = 0] = \"Unknown\";\r\n    /**\r\n     * A regular file.\r\n     */\r\n    FileType[FileType[\"File\"] = 1] = \"File\";\r\n    /**\r\n     * A directory.\r\n     */\r\n    FileType[FileType[\"Directory\"] = 2] = \"Directory\";\r\n    /**\r\n     * A symbolic link to a file.\r\n     */\r\n    FileType[FileType[\"SymbolicLink\"] = 64] = \"SymbolicLink\";\r\n})(FileType || (FileType = {}));\r\n// following https://nodejs.org/api/path.html#path_path_isabsolute_path\r\nconst PathMatchRegex = new RegExp('^(/|//|\\\\\\\\\\\\\\\\|[A-Za-z]:(/|\\\\\\\\))');\r\nconst Dot = '.'.charCodeAt(0);\r\nexport function isAbsolutePath(path) {\r\n    return PathMatchRegex.test(path);\r\n}\r\nexport function resolvePath(uri, path) {\r\n    if (isAbsolutePath(path)) {\r\n        return uri.with({ path: normalizePath(path.split('/')) });\r\n    }\r\n    return joinPath(uri, path);\r\n}\r\nexport function normalizePath(parts) {\r\n    const newParts = [];\r\n    for (const part of parts) {\r\n        if (part.length === 0 || part.length === 1 && part.charCodeAt(0) === Dot) {\r\n            // ignore\r\n        }\r\n        else if (part.length === 2 && part.charCodeAt(0) === Dot && part.charCodeAt(1) === Dot) {\r\n            newParts.pop();\r\n        }\r\n        else {\r\n            newParts.push(part);\r\n        }\r\n    }\r\n    if (parts.length > 1 && parts[parts.length - 1].length === 0) {\r\n        newParts.push('');\r\n    }\r\n    let res = newParts.join('/');\r\n    if (parts[0].length === 0) {\r\n        res = '/' + res;\r\n    }\r\n    return res;\r\n}\r\nexport function joinPath(uri, ...paths) {\r\n    const parts = uri.path.split('/');\r\n    for (const path of paths) {\r\n        parts.push(...path.split('/'));\r\n    }\r\n    return uri.with({ path: normalizePath(parts) });\r\n}\r\n//# sourceMappingURL=fileService.js.map","import Scanner, { isAlphaNumericWord, isSpace, isQuote as isQuote$1, isNumber, isAlpha, ScannerError } from '@emmetio/scanner';\n\nfunction tokenScanner(tokens) {\n    return {\n        tokens,\n        start: 0,\n        pos: 0,\n        size: tokens.length\n    };\n}\nfunction peek(scanner) {\n    return scanner.tokens[scanner.pos];\n}\nfunction next(scanner) {\n    return scanner.tokens[scanner.pos++];\n}\nfunction slice(scanner, from = scanner.start, to = scanner.pos) {\n    return scanner.tokens.slice(from, to);\n}\nfunction readable(scanner) {\n    return scanner.pos < scanner.size;\n}\nfunction consume(scanner, test) {\n    const token = peek(scanner);\n    if (token && test(token)) {\n        scanner.pos++;\n        return true;\n    }\n    return false;\n}\nfunction error(scanner, message, token = peek(scanner)) {\n    if (token && token.start != null) {\n        message += ` at ${token.start}`;\n    }\n    const err = new Error(message);\n    err['pos'] = token && token.start;\n    return err;\n}\n\nfunction abbreviation(abbr, options = {}) {\n    const scanner = tokenScanner(abbr);\n    const result = statements(scanner, options);\n    if (readable(scanner)) {\n        throw error(scanner, 'Unexpected character');\n    }\n    return result;\n}\nfunction statements(scanner, options) {\n    const result = {\n        type: 'TokenGroup',\n        elements: []\n    };\n    let ctx = result;\n    let node;\n    const stack = [];\n    while (readable(scanner)) {\n        if (node = element(scanner, options) || group(scanner, options)) {\n            ctx.elements.push(node);\n            if (consume(scanner, isChildOperator)) {\n                stack.push(ctx);\n                ctx = node;\n            }\n            else if (consume(scanner, isSiblingOperator)) {\n                continue;\n            }\n            else if (consume(scanner, isClimbOperator)) {\n                do {\n                    if (stack.length) {\n                        ctx = stack.pop();\n                    }\n                } while (consume(scanner, isClimbOperator));\n            }\n        }\n        else {\n            break;\n        }\n    }\n    return result;\n}\n/**\n * Consumes group from given scanner\n */\nfunction group(scanner, options) {\n    if (consume(scanner, isGroupStart)) {\n        const result = statements(scanner, options);\n        const token = next(scanner);\n        if (isBracket(token, 'group', false)) {\n            result.repeat = repeater(scanner);\n        }\n        return result;\n    }\n}\n/**\n * Consumes single element from given scanner\n */\nfunction element(scanner, options) {\n    let attr;\n    const elem = {\n        type: 'TokenElement',\n        name: void 0,\n        attributes: void 0,\n        value: void 0,\n        repeat: void 0,\n        selfClose: false,\n        elements: []\n    };\n    if (elementName(scanner, options)) {\n        elem.name = slice(scanner);\n    }\n    while (readable(scanner)) {\n        scanner.start = scanner.pos;\n        if (!elem.repeat && !isEmpty(elem) && consume(scanner, isRepeater)) {\n            elem.repeat = scanner.tokens[scanner.pos - 1];\n        }\n        else if (!elem.value && text(scanner)) {\n            elem.value = getText(scanner);\n        }\n        else if (attr = shortAttribute(scanner, 'id', options) || shortAttribute(scanner, 'class', options) || attributeSet(scanner)) {\n            if (!elem.attributes) {\n                elem.attributes = Array.isArray(attr) ? attr.slice() : [attr];\n            }\n            else {\n                elem.attributes = elem.attributes.concat(attr);\n            }\n        }\n        else {\n            if (!isEmpty(elem) && consume(scanner, isCloseOperator)) {\n                elem.selfClose = true;\n                if (!elem.repeat && consume(scanner, isRepeater)) {\n                    elem.repeat = scanner.tokens[scanner.pos - 1];\n                }\n            }\n            break;\n        }\n    }\n    return !isEmpty(elem) ? elem : void 0;\n}\n/**\n * Consumes attribute set from given scanner\n */\nfunction attributeSet(scanner) {\n    if (consume(scanner, isAttributeSetStart)) {\n        const attributes = [];\n        let attr;\n        while (readable(scanner)) {\n            if (attr = attribute(scanner)) {\n                attributes.push(attr);\n            }\n            else if (consume(scanner, isAttributeSetEnd)) {\n                break;\n            }\n            else if (!consume(scanner, isWhiteSpace)) {\n                throw error(scanner, `Unexpected \"${peek(scanner).type}\" token`);\n            }\n        }\n        return attributes;\n    }\n}\n/**\n * Consumes attribute shorthand (class or id) from given scanner\n */\nfunction shortAttribute(scanner, type, options) {\n    if (isOperator(peek(scanner), type)) {\n        scanner.pos++;\n        const attr = {\n            name: [createLiteral(type)]\n        };\n        // Consume expression after shorthand start for React-like components\n        if (options.jsx && text(scanner)) {\n            attr.value = getText(scanner);\n            attr.expression = true;\n        }\n        else {\n            attr.value = literal(scanner) ? slice(scanner) : void 0;\n        }\n        return attr;\n    }\n}\n/**\n * Consumes single attribute from given scanner\n */\nfunction attribute(scanner) {\n    if (quoted(scanner)) {\n        // Consumed quoted value: it’s a value for default attribute\n        return {\n            value: slice(scanner)\n        };\n    }\n    if (literal(scanner, true)) {\n        return {\n            name: slice(scanner),\n            value: consume(scanner, isEquals) && (quoted(scanner) || literal(scanner, true))\n                ? slice(scanner)\n                : void 0\n        };\n    }\n}\nfunction repeater(scanner) {\n    return isRepeater(peek(scanner))\n        ? scanner.tokens[scanner.pos++]\n        : void 0;\n}\n/**\n * Consumes quoted value from given scanner, if possible\n */\nfunction quoted(scanner) {\n    const start = scanner.pos;\n    const quote = peek(scanner);\n    if (isQuote(quote)) {\n        scanner.pos++;\n        while (readable(scanner)) {\n            if (isQuote(next(scanner), quote.single)) {\n                scanner.start = start;\n                return true;\n            }\n        }\n        throw error(scanner, 'Unclosed quote', quote);\n    }\n    return false;\n}\n/**\n * Consumes literal (unquoted value) from given scanner\n */\nfunction literal(scanner, allowBrackets) {\n    const start = scanner.pos;\n    const brackets = {\n        attribute: 0,\n        expression: 0,\n        group: 0\n    };\n    while (readable(scanner)) {\n        const token = peek(scanner);\n        if (brackets.expression) {\n            // If we’re inside expression, we should consume all content in it\n            if (isBracket(token, 'expression')) {\n                brackets[token.context] += token.open ? 1 : -1;\n            }\n        }\n        else if (isQuote(token) || isOperator(token) || isWhiteSpace(token) || isRepeater(token)) {\n            break;\n        }\n        else if (isBracket(token)) {\n            if (!allowBrackets) {\n                break;\n            }\n            if (token.open) {\n                brackets[token.context]++;\n            }\n            else if (!brackets[token.context]) {\n                // Stop if found unmatched closing brace: it must be handled\n                // by parent consumer\n                break;\n            }\n            else {\n                brackets[token.context]--;\n            }\n        }\n        scanner.pos++;\n    }\n    if (start !== scanner.pos) {\n        scanner.start = start;\n        return true;\n    }\n    return false;\n}\n/**\n * Consumes element name from given scanner\n */\nfunction elementName(scanner, options) {\n    const start = scanner.pos;\n    if (options.jsx && consume(scanner, isCapitalizedLiteral)) {\n        // Check for edge case: consume immediate capitalized class names\n        // for React-like components, e.g. `Foo.Bar.Baz`\n        while (readable(scanner)) {\n            const { pos } = scanner;\n            if (!consume(scanner, isClassNameOperator) || !consume(scanner, isCapitalizedLiteral)) {\n                scanner.pos = pos;\n                break;\n            }\n        }\n    }\n    while (readable(scanner) && consume(scanner, isElementName)) {\n        // empty\n    }\n    if (scanner.pos !== start) {\n        scanner.start = start;\n        return true;\n    }\n    return false;\n}\n/**\n * Consumes text value from given scanner\n */\nfunction text(scanner) {\n    const start = scanner.pos;\n    if (consume(scanner, isTextStart)) {\n        let brackets = 0;\n        while (readable(scanner)) {\n            const token = next(scanner);\n            if (isBracket(token, 'expression')) {\n                if (token.open) {\n                    brackets++;\n                }\n                else if (!brackets) {\n                    break;\n                }\n                else {\n                    brackets--;\n                }\n            }\n        }\n        scanner.start = start;\n        return true;\n    }\n    return false;\n}\nfunction getText(scanner) {\n    let from = scanner.start;\n    let to = scanner.pos;\n    if (isBracket(scanner.tokens[from], 'expression', true)) {\n        from++;\n    }\n    if (isBracket(scanner.tokens[to - 1], 'expression', false)) {\n        to--;\n    }\n    return slice(scanner, from, to);\n}\nfunction isBracket(token, context, isOpen) {\n    return Boolean(token && token.type === 'Bracket'\n        && (!context || token.context === context)\n        && (isOpen == null || token.open === isOpen));\n}\nfunction isOperator(token, type) {\n    return Boolean(token && token.type === 'Operator' && (!type || token.operator === type));\n}\nfunction isQuote(token, isSingle) {\n    return Boolean(token && token.type === 'Quote' && (isSingle == null || token.single === isSingle));\n}\nfunction isWhiteSpace(token) {\n    return Boolean(token && token.type === 'WhiteSpace');\n}\nfunction isEquals(token) {\n    return isOperator(token, 'equal');\n}\nfunction isRepeater(token) {\n    return Boolean(token && token.type === 'Repeater');\n}\nfunction isLiteral(token) {\n    return token.type === 'Literal';\n}\nfunction isCapitalizedLiteral(token) {\n    if (isLiteral(token)) {\n        const ch = token.value.charCodeAt(0);\n        return ch >= 65 && ch <= 90;\n    }\n    return false;\n}\nfunction isElementName(token) {\n    return token.type === 'Literal' || token.type === 'RepeaterNumber' || token.type === 'RepeaterPlaceholder';\n}\nfunction isClassNameOperator(token) {\n    return isOperator(token, 'class');\n}\nfunction isAttributeSetStart(token) {\n    return isBracket(token, 'attribute', true);\n}\nfunction isAttributeSetEnd(token) {\n    return isBracket(token, 'attribute', false);\n}\nfunction isTextStart(token) {\n    return isBracket(token, 'expression', true);\n}\nfunction isGroupStart(token) {\n    return isBracket(token, 'group', true);\n}\nfunction createLiteral(value) {\n    return { type: 'Literal', value };\n}\nfunction isEmpty(elem) {\n    return !elem.name && !elem.value && !elem.attributes;\n}\nfunction isChildOperator(token) {\n    return isOperator(token, 'child');\n}\nfunction isSiblingOperator(token) {\n    return isOperator(token, 'sibling');\n}\nfunction isClimbOperator(token) {\n    return isOperator(token, 'climb');\n}\nfunction isCloseOperator(token) {\n    return isOperator(token, 'close');\n}\n\n/**\n * If consumes escape character, sets current stream range to escaped value\n */\nfunction escaped(scanner) {\n    if (scanner.eat(92 /* Escape */)) {\n        scanner.start = scanner.pos;\n        if (!scanner.eof()) {\n            scanner.pos++;\n        }\n        return true;\n    }\n    return false;\n}\n\nfunction tokenize(source) {\n    const scanner = new Scanner(source);\n    const result = [];\n    const ctx = {\n        group: 0,\n        attribute: 0,\n        expression: 0,\n        quote: 0\n    };\n    let ch = 0;\n    let token;\n    while (!scanner.eof()) {\n        ch = scanner.peek();\n        token = getToken(scanner, ctx);\n        if (token) {\n            result.push(token);\n            if (token.type === 'Quote') {\n                ctx.quote = ch === ctx.quote ? 0 : ch;\n            }\n            else if (token.type === 'Bracket') {\n                ctx[token.context] += token.open ? 1 : -1;\n            }\n        }\n        else {\n            throw scanner.error('Unexpected character');\n        }\n    }\n    return result;\n}\n/**\n * Returns next token from given scanner, if possible\n */\nfunction getToken(scanner, ctx) {\n    return field(scanner, ctx)\n        || repeaterPlaceholder(scanner)\n        || repeaterNumber(scanner)\n        || repeater$1(scanner)\n        || whiteSpace(scanner)\n        || literal$1(scanner, ctx)\n        || operator(scanner)\n        || quote(scanner)\n        || bracket(scanner);\n}\n/**\n * Consumes literal from given scanner\n */\nfunction literal$1(scanner, ctx) {\n    const start = scanner.pos;\n    let value = '';\n    while (!scanner.eof()) {\n        // Consume escaped sequence no matter of context\n        if (escaped(scanner)) {\n            value += scanner.current();\n            continue;\n        }\n        const ch = scanner.peek();\n        if (ch === ctx.quote || ch === 36 /* Dollar */ || isAllowedOperator(ch, ctx)) {\n            // 1. Found matching quote\n            // 2. The `$` character has special meaning in every context\n            // 3. Depending on context, some characters should be treated as operators\n            break;\n        }\n        if (ctx.expression && ch === 125 /* CurlyBracketClose */) {\n            break;\n        }\n        if (!ctx.quote && !ctx.expression) {\n            // Consuming element name\n            if (!ctx.attribute && !isElementName$1(ch)) {\n                break;\n            }\n            if (isAllowedSpace(ch, ctx) || isAllowedRepeater(ch, ctx) || isQuote$1(ch) || bracketType(ch)) {\n                // Stop for characters not allowed in unquoted literal\n                break;\n            }\n        }\n        value += scanner.string[scanner.pos++];\n    }\n    if (start !== scanner.pos) {\n        scanner.start = start;\n        return {\n            type: 'Literal',\n            value,\n            start,\n            end: scanner.pos\n        };\n    }\n}\n/**\n * Consumes white space characters as string literal from given scanner\n */\nfunction whiteSpace(scanner) {\n    const start = scanner.pos;\n    if (scanner.eatWhile(isSpace)) {\n        return {\n            type: 'WhiteSpace',\n            start,\n            end: scanner.pos\n        };\n    }\n}\n/**\n * Consumes quote from given scanner\n */\nfunction quote(scanner) {\n    const ch = scanner.peek();\n    if (isQuote$1(ch)) {\n        return {\n            type: 'Quote',\n            single: ch === 39 /* SingleQuote */,\n            start: scanner.pos++,\n            end: scanner.pos\n        };\n    }\n}\n/**\n * Consumes bracket from given scanner\n */\nfunction bracket(scanner) {\n    const ch = scanner.peek();\n    const context = bracketType(ch);\n    if (context) {\n        return {\n            type: 'Bracket',\n            open: isOpenBracket(ch),\n            context,\n            start: scanner.pos++,\n            end: scanner.pos\n        };\n    }\n}\n/**\n * Consumes operator from given scanner\n */\nfunction operator(scanner) {\n    const op = operatorType(scanner.peek());\n    if (op) {\n        return {\n            type: 'Operator',\n            operator: op,\n            start: scanner.pos++,\n            end: scanner.pos\n        };\n    }\n}\n/**\n * Consumes node repeat token from current stream position and returns its\n * parsed value\n */\nfunction repeater$1(scanner) {\n    const start = scanner.pos;\n    if (scanner.eat(42 /* Asterisk */)) {\n        scanner.start = scanner.pos;\n        let count = 1;\n        let implicit = false;\n        if (scanner.eatWhile(isNumber)) {\n            count = Number(scanner.current());\n        }\n        else {\n            implicit = true;\n        }\n        return {\n            type: 'Repeater',\n            count,\n            value: 0,\n            implicit,\n            start,\n            end: scanner.pos\n        };\n    }\n}\n/**\n * Consumes repeater placeholder `$#` from given scanner\n */\nfunction repeaterPlaceholder(scanner) {\n    const start = scanner.pos;\n    if (scanner.eat(36 /* Dollar */) && scanner.eat(35 /* Hash */)) {\n        return {\n            type: 'RepeaterPlaceholder',\n            value: void 0,\n            start,\n            end: scanner.pos\n        };\n    }\n    scanner.pos = start;\n}\n/**\n * Consumes numbering token like `$` from given scanner state\n */\nfunction repeaterNumber(scanner) {\n    const start = scanner.pos;\n    if (scanner.eatWhile(36 /* Dollar */)) {\n        const size = scanner.pos - start;\n        let reverse = false;\n        let base = 1;\n        let parent = 0;\n        if (scanner.eat(64 /* At */)) {\n            // Consume numbering modifiers\n            while (scanner.eat(94 /* Climb */)) {\n                parent++;\n            }\n            reverse = scanner.eat(45 /* Dash */);\n            scanner.start = scanner.pos;\n            if (scanner.eatWhile(isNumber)) {\n                base = Number(scanner.current());\n            }\n        }\n        scanner.start = start;\n        return {\n            type: 'RepeaterNumber',\n            size,\n            reverse,\n            base,\n            parent,\n            start,\n            end: scanner.pos\n        };\n    }\n}\nfunction field(scanner, ctx) {\n    const start = scanner.pos;\n    // Fields are allowed inside expressions and attributes\n    if ((ctx.expression || ctx.attribute) && scanner.eat(36 /* Dollar */) && scanner.eat(123 /* CurlyBracketOpen */)) {\n        scanner.start = scanner.pos;\n        let index;\n        let name = '';\n        if (scanner.eatWhile(isNumber)) {\n            // It’s a field\n            index = Number(scanner.current());\n            name = scanner.eat(58 /* Colon */) ? consumePlaceholder(scanner) : '';\n        }\n        else if (isAlpha(scanner.peek())) {\n            // It’s a variable\n            name = consumePlaceholder(scanner);\n        }\n        if (scanner.eat(125 /* CurlyBracketClose */)) {\n            return {\n                type: 'Field',\n                index, name,\n                start,\n                end: scanner.pos\n            };\n        }\n        throw scanner.error('Expecting }');\n    }\n    // If we reached here then there’s no valid field here, revert\n    // back to starting position\n    scanner.pos = start;\n}\n/**\n * Consumes a placeholder: value right after `:` in field. Could be empty\n */\nfunction consumePlaceholder(stream) {\n    const stack = [];\n    stream.start = stream.pos;\n    while (!stream.eof()) {\n        if (stream.eat(123 /* CurlyBracketOpen */)) {\n            stack.push(stream.pos);\n        }\n        else if (stream.eat(125 /* CurlyBracketClose */)) {\n            if (!stack.length) {\n                stream.pos--;\n                break;\n            }\n            stack.pop();\n        }\n        else {\n            stream.pos++;\n        }\n    }\n    if (stack.length) {\n        stream.pos = stack.pop();\n        throw stream.error(`Expecting }`);\n    }\n    return stream.current();\n}\n/**\n * Check if given character code is an operator and it’s allowed in current context\n */\nfunction isAllowedOperator(ch, ctx) {\n    const op = operatorType(ch);\n    if (!op || ctx.quote || ctx.expression) {\n        // No operators inside quoted values or expressions\n        return false;\n    }\n    // Inside attributes, only `equals` is allowed\n    return !ctx.attribute || op === 'equal';\n}\n/**\n * Check if given character is a space character and is allowed to be consumed\n * as a space token in current context\n */\nfunction isAllowedSpace(ch, ctx) {\n    return isSpace(ch) && !ctx.expression;\n}\n/**\n * Check if given character can be consumed as repeater in current context\n */\nfunction isAllowedRepeater(ch, ctx) {\n    return ch === 42 /* Asterisk */ && !ctx.attribute && !ctx.expression;\n}\n/**\n * If given character is a bracket, returns it’s type\n */\nfunction bracketType(ch) {\n    if (ch === 40 /* RoundBracketOpen */ || ch === 41 /* RoundBracketClose */) {\n        return 'group';\n    }\n    if (ch === 91 /* SquareBracketOpen */ || ch === 93 /* SquareBracketClose */) {\n        return 'attribute';\n    }\n    if (ch === 123 /* CurlyBracketOpen */ || ch === 125 /* CurlyBracketClose */) {\n        return 'expression';\n    }\n}\n/**\n * If given character is an operator, returns it’s type\n */\nfunction operatorType(ch) {\n    return (ch === 62 /* Child */ && 'child')\n        || (ch === 43 /* Sibling */ && 'sibling')\n        || (ch === 94 /* Climb */ && 'climb')\n        || (ch === 46 /* Dot */ && 'class')\n        || (ch === 35 /* Hash */ && 'id')\n        || (ch === 47 /* Slash */ && 'close')\n        || (ch === 61 /* Equals */ && 'equal')\n        || void 0;\n}\n/**\n * Check if given character is an open bracket\n */\nfunction isOpenBracket(ch) {\n    return ch === 123 /* CurlyBracketOpen */\n        || ch === 91 /* SquareBracketOpen */\n        || ch === 40 /* RoundBracketOpen */;\n}\n/**\n * Check if given character is allowed in element name\n */\nfunction isElementName$1(ch) {\n    return isAlphaNumericWord(ch)\n        || ch === 45 /* Dash */\n        || ch === 58 /* Colon */\n        || ch === 33 /* Excl */;\n}\n\nconst operators = {\n    child: '>',\n    class: '.',\n    climb: '^',\n    id: '#',\n    equal: '=',\n    close: '/',\n    sibling: '+'\n};\nconst tokenVisitor = {\n    Literal(token) {\n        return token.value;\n    },\n    Quote(token) {\n        return token.single ? '\\'' : '\"';\n    },\n    Bracket(token) {\n        if (token.context === 'attribute') {\n            return token.open ? '[' : ']';\n        }\n        else if (token.context === 'expression') {\n            return token.open ? '{' : '}';\n        }\n        else {\n            return token.open ? '(' : '}';\n        }\n    },\n    Operator(token) {\n        return operators[token.operator];\n    },\n    Field(token, state) {\n        if (token.index != null) {\n            // It’s a field: by default, return TextMate-compatible field\n            return token.name\n                ? `\\${${token.index}:${token.name}}`\n                : `\\${${token.index}`;\n        }\n        else if (token.name) {\n            // It’s a variable\n            return state.getVariable(token.name);\n        }\n        return '';\n    },\n    RepeaterPlaceholder(token, state) {\n        // Find closest implicit repeater\n        let repeater;\n        for (let i = state.repeaters.length - 1; i >= 0; i--) {\n            if (state.repeaters[i].implicit) {\n                repeater = state.repeaters[i];\n                break;\n            }\n        }\n        state.inserted = true;\n        return state.getText(repeater && repeater.value);\n    },\n    RepeaterNumber(token, state) {\n        let value = 1;\n        const lastIx = state.repeaters.length - 1;\n        // const repeaterIx = Math.max(0, state.repeaters.length - 1 - token.parent);\n        const repeater = state.repeaters[lastIx];\n        if (repeater) {\n            value = token.reverse\n                ? token.base + repeater.count - repeater.value - 1\n                : token.base + repeater.value;\n            if (token.parent) {\n                const parentIx = Math.max(0, lastIx - token.parent);\n                if (parentIx !== lastIx) {\n                    const parentRepeater = state.repeaters[parentIx];\n                    value += repeater.count * parentRepeater.value;\n                }\n            }\n        }\n        let result = String(value);\n        while (result.length < token.size) {\n            result = '0' + result;\n        }\n        return result;\n    },\n    WhiteSpace() {\n        return ' ';\n    }\n};\n/**\n * Converts given value token to string\n */\nfunction stringify(token, state) {\n    if (!tokenVisitor[token.type]) {\n        throw new Error(`Unknown token ${token.type}`);\n    }\n    return tokenVisitor[token.type](token, state);\n}\n\nconst urlRegex = /^((https?:|ftp:|file:)?\\/\\/|(www|ftp)\\.)[^ ]*$/;\nconst emailRegex = /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,5}$/;\n/**\n * Converts given token-based abbreviation into simplified and unrolled node-based\n * abbreviation\n */\nfunction convert(abbr, options = {}) {\n    let textInserted = false;\n    let cleanText;\n    if (options.text) {\n        if (Array.isArray(options.text)) {\n            cleanText = options.text.filter(s => s.trim());\n        }\n        else {\n            cleanText = options.text;\n        }\n    }\n    const result = {\n        type: 'Abbreviation',\n        children: convertGroup(abbr, {\n            inserted: false,\n            repeaters: [],\n            text: options.text,\n            cleanText,\n            repeatGuard: options.maxRepeat || Number.POSITIVE_INFINITY,\n            getText(pos) {\n                var _a;\n                textInserted = true;\n                let value;\n                if (Array.isArray(options.text)) {\n                    if (pos !== undefined && pos >= 0 && pos < cleanText.length) {\n                        return cleanText[pos];\n                    }\n                    value = pos !== undefined ? options.text[pos] : options.text.join('\\n');\n                }\n                else {\n                    value = (_a = options.text) !== null && _a !== void 0 ? _a : '';\n                }\n                return value;\n            },\n            getVariable(name) {\n                const varValue = options.variables && options.variables[name];\n                return varValue != null ? varValue : name;\n            }\n        })\n    };\n    if (options.text != null && !textInserted) {\n        // Text given but no implicitly repeated elements: insert it into\n        // deepest child\n        const deepest = deepestNode(last(result.children));\n        if (deepest) {\n            const text = Array.isArray(options.text) ? options.text.join('\\n') : options.text;\n            insertText(deepest, text);\n            if (deepest.name === 'a' && options.href) {\n                // Automatically update value of `<a>` element if inserting URL or email\n                insertHref(deepest, text);\n            }\n        }\n    }\n    return result;\n}\n/**\n * Converts given statement to abbreviation nodes\n */\nfunction convertStatement(node, state) {\n    let result = [];\n    if (node.repeat) {\n        // Node is repeated: we should create copies of given node\n        // and supply context token with actual repeater state\n        const original = node.repeat;\n        const repeat = Object.assign({}, original);\n        repeat.count = repeat.implicit && Array.isArray(state.text)\n            ? state.cleanText.length\n            : (repeat.count || 1);\n        let items;\n        state.repeaters.push(repeat);\n        for (let i = 0; i < repeat.count; i++) {\n            repeat.value = i;\n            node.repeat = repeat;\n            items = isGroup(node)\n                ? convertGroup(node, state)\n                : convertElement(node, state);\n            if (repeat.implicit && !state.inserted) {\n                // It’s an implicit repeater but no repeater placeholders found inside,\n                // we should insert text into deepest node\n                const target = last(items);\n                const deepest = target && deepestNode(target);\n                if (deepest) {\n                    insertText(deepest, state.getText(repeat.value));\n                }\n            }\n            result = result.concat(items);\n            // We should output at least one repeated item even if it’s reached\n            // repeat limit\n            if (--state.repeatGuard <= 0) {\n                break;\n            }\n        }\n        state.repeaters.pop();\n        node.repeat = original;\n        if (repeat.implicit) {\n            state.inserted = true;\n        }\n    }\n    else {\n        result = result.concat(isGroup(node) ? convertGroup(node, state) : convertElement(node, state));\n    }\n    return result;\n}\nfunction convertElement(node, state) {\n    let children = [];\n    const elem = {\n        type: 'AbbreviationNode',\n        name: node.name && stringifyName(node.name, state),\n        value: node.value && stringifyValue(node.value, state),\n        attributes: void 0,\n        children,\n        repeat: node.repeat && Object.assign({}, node.repeat),\n        selfClosing: node.selfClose,\n    };\n    let result = [elem];\n    for (const child of node.elements) {\n        children = children.concat(convertStatement(child, state));\n    }\n    if (node.attributes) {\n        elem.attributes = [];\n        for (const attr of node.attributes) {\n            elem.attributes.push(convertAttribute(attr, state));\n        }\n    }\n    // In case if current node is a text-only snippet without fields, we should\n    // put all children as siblings\n    if (!elem.name && !elem.attributes && elem.value && !elem.value.some(isField)) {\n        // XXX it’s unclear that `children` is not bound to `elem`\n        // due to concat operation\n        result = result.concat(children);\n    }\n    else {\n        elem.children = children;\n    }\n    return result;\n}\nfunction convertGroup(node, state) {\n    let result = [];\n    for (const child of node.elements) {\n        result = result.concat(convertStatement(child, state));\n    }\n    if (node.repeat) {\n        result = attachRepeater(result, node.repeat);\n    }\n    return result;\n}\nfunction convertAttribute(node, state) {\n    let implied = false;\n    let isBoolean = false;\n    let valueType = node.expression ? 'expression' : 'raw';\n    let value;\n    const name = node.name && stringifyName(node.name, state);\n    if (name && name[0] === '!') {\n        implied = true;\n    }\n    if (name && name[name.length - 1] === '.') {\n        isBoolean = true;\n    }\n    if (node.value) {\n        const tokens = node.value.slice();\n        if (isQuote(tokens[0])) {\n            // It’s a quoted value: remove quotes from output but mark attribute\n            // value as quoted\n            const quote = tokens.shift();\n            if (tokens.length && last(tokens).type === quote.type) {\n                tokens.pop();\n            }\n            valueType = quote.single ? 'singleQuote' : 'doubleQuote';\n        }\n        else if (isBracket(tokens[0], 'expression', true)) {\n            // Value is expression: remove brackets but mark value type\n            valueType = 'expression';\n            tokens.shift();\n            if (isBracket(last(tokens), 'expression', false)) {\n                tokens.pop();\n            }\n        }\n        value = stringifyValue(tokens, state);\n    }\n    return {\n        name: isBoolean || implied\n            ? name.slice(implied ? 1 : 0, isBoolean ? -1 : void 0)\n            : name,\n        value,\n        boolean: isBoolean,\n        implied,\n        valueType\n    };\n}\n/**\n * Converts given token list to string\n */\nfunction stringifyName(tokens, state) {\n    let str = '';\n    for (let i = 0; i < tokens.length; i++) {\n        str += stringify(tokens[i], state);\n    }\n    return str;\n}\n/**\n * Converts given token list to value list\n */\nfunction stringifyValue(tokens, state) {\n    const result = [];\n    let str = '';\n    for (let i = 0, token; i < tokens.length; i++) {\n        token = tokens[i];\n        if (isField(token)) {\n            // We should keep original fields in output since some editors has their\n            // own syntax for field or doesn’t support fields at all so we should\n            // capture actual field location in output stream\n            if (str) {\n                result.push(str);\n                str = '';\n            }\n            result.push(token);\n        }\n        else {\n            str += stringify(token, state);\n        }\n    }\n    if (str) {\n        result.push(str);\n    }\n    return result;\n}\nfunction isGroup(node) {\n    return node.type === 'TokenGroup';\n}\nfunction isField(token) {\n    return typeof token === 'object' && token.type === 'Field' && token.index != null;\n}\nfunction last(arr) {\n    return arr[arr.length - 1];\n}\nfunction deepestNode(node) {\n    return node.children.length ? deepestNode(last(node.children)) : node;\n}\nfunction insertText(node, text) {\n    if (node.value) {\n        const lastToken = last(node.value);\n        if (typeof lastToken === 'string') {\n            node.value[node.value.length - 1] += text;\n        }\n        else {\n            node.value.push(text);\n        }\n    }\n    else {\n        node.value = [text];\n    }\n}\nfunction insertHref(node, text) {\n    var _a;\n    let href = '';\n    if (urlRegex.test(text)) {\n        href = text;\n        if (!/\\w+:/.test(href) && !href.startsWith('//')) {\n            href = `http://${href}`;\n        }\n    }\n    else if (emailRegex.test(text)) {\n        href = `mailto:${text}`;\n    }\n    const hrefAttribute = (_a = node.attributes) === null || _a === void 0 ? void 0 : _a.find(attr => attr.name === 'href');\n    if (!hrefAttribute) {\n        node.attributes = [{ name: 'href', value: [href], valueType: 'doubleQuote' }];\n    }\n    else if (!hrefAttribute.value) {\n        hrefAttribute.value = [href];\n    }\n}\nfunction attachRepeater(items, repeater) {\n    for (const item of items) {\n        if (!item.repeat) {\n            item.repeat = Object.assign({}, repeater);\n        }\n    }\n    return items;\n}\n\n/**\n * Parses given abbreviation into node tree\n */\nfunction parseAbbreviation(abbr, options) {\n    try {\n        const tokens = typeof abbr === 'string' ? tokenize(abbr) : abbr;\n        return convert(abbreviation(tokens, options), options);\n    }\n    catch (err) {\n        if (err instanceof ScannerError && typeof abbr === 'string') {\n            err.message += `\\n${abbr}\\n${'-'.repeat(err.pos)}^`;\n        }\n        throw err;\n    }\n}\n\nexport default parseAbbreviation;\nexport { convert, getToken, abbreviation as parse, tokenize };\n//# sourceMappingURL=abbreviation.es.js.map\n","import Scanner, { isNumber, isAlpha, isAlphaWord, isQuote, isSpace, isAlphaNumericWord, ScannerError } from '@emmetio/scanner';\n\nfunction tokenize(abbr, isValue) {\n    let brackets = 0;\n    let token;\n    const scanner = new Scanner(abbr);\n    const tokens = [];\n    while (!scanner.eof()) {\n        token = getToken(scanner, brackets === 0 && !isValue);\n        if (!token) {\n            throw scanner.error('Unexpected character');\n        }\n        if (token.type === 'Bracket') {\n            if (!brackets && token.open) {\n                mergeTokens(scanner, tokens);\n            }\n            brackets += token.open ? 1 : -1;\n            if (brackets < 0) {\n                throw scanner.error('Unexpected bracket', token.start);\n            }\n        }\n        tokens.push(token);\n        // Forcibly consume next operator after unit-less numeric value or color:\n        // next dash `-` must be used as value delimiter\n        if (shouldConsumeDashAfter(token) && (token = operator(scanner))) {\n            tokens.push(token);\n        }\n    }\n    return tokens;\n}\n/**\n * Returns next token from given scanner, if possible\n */\nfunction getToken(scanner, short) {\n    return field(scanner)\n        || numberValue(scanner)\n        || colorValue(scanner)\n        || stringValue(scanner)\n        || bracket(scanner)\n        || operator(scanner)\n        || whiteSpace(scanner)\n        || literal(scanner, short);\n}\nfunction field(scanner) {\n    const start = scanner.pos;\n    if (scanner.eat(36 /* Dollar */) && scanner.eat(123 /* CurlyBracketOpen */)) {\n        scanner.start = scanner.pos;\n        let index;\n        let name = '';\n        if (scanner.eatWhile(isNumber)) {\n            // It’s a field\n            index = Number(scanner.current());\n            name = scanner.eat(58 /* Colon */) ? consumePlaceholder(scanner) : '';\n        }\n        else if (isAlpha(scanner.peek())) {\n            // It’s a variable\n            name = consumePlaceholder(scanner);\n        }\n        if (scanner.eat(125 /* CurlyBracketClose */)) {\n            return {\n                type: 'Field',\n                index, name,\n                start,\n                end: scanner.pos\n            };\n        }\n        throw scanner.error('Expecting }');\n    }\n    // If we reached here then there’s no valid field here, revert\n    // back to starting position\n    scanner.pos = start;\n}\n/**\n * Consumes a placeholder: value right after `:` in field. Could be empty\n */\nfunction consumePlaceholder(stream) {\n    const stack = [];\n    stream.start = stream.pos;\n    while (!stream.eof()) {\n        if (stream.eat(123 /* CurlyBracketOpen */)) {\n            stack.push(stream.pos);\n        }\n        else if (stream.eat(125 /* CurlyBracketClose */)) {\n            if (!stack.length) {\n                stream.pos--;\n                break;\n            }\n            stack.pop();\n        }\n        else {\n            stream.pos++;\n        }\n    }\n    if (stack.length) {\n        stream.pos = stack.pop();\n        throw stream.error(`Expecting }`);\n    }\n    return stream.current();\n}\n/**\n * Consumes literal from given scanner\n * @param short Use short notation for consuming value.\n * The difference between “short” and “full” notation is that first one uses\n * alpha characters only and used for extracting keywords from abbreviation,\n * while “full” notation also supports numbers and dashes\n */\nfunction literal(scanner, short) {\n    const start = scanner.pos;\n    if (scanner.eat(isIdentPrefix)) {\n        // SCSS or LESS variable\n        // NB a bit dirty hack: if abbreviation starts with identifier prefix,\n        // consume alpha characters only to allow embedded variables\n        scanner.eatWhile(start ? isKeyword : isLiteral);\n    }\n    else if (scanner.eat(isAlphaWord)) {\n        scanner.eatWhile(short ? isLiteral : isKeyword);\n    }\n    else {\n        // Allow dots only at the beginning of literal\n        scanner.eat(46 /* Dot */);\n        scanner.eatWhile(isLiteral);\n    }\n    if (start !== scanner.pos) {\n        scanner.start = start;\n        return createLiteral(scanner, scanner.start = start);\n    }\n}\nfunction createLiteral(scanner, start = scanner.start, end = scanner.pos) {\n    return {\n        type: 'Literal',\n        value: scanner.substring(start, end),\n        start,\n        end\n    };\n}\n/**\n * Consumes numeric CSS value (number with optional unit) from current stream,\n * if possible\n */\nfunction numberValue(scanner) {\n    const start = scanner.pos;\n    if (consumeNumber(scanner)) {\n        scanner.start = start;\n        const rawValue = scanner.current();\n        // eat unit, which can be a % or alpha word\n        scanner.start = scanner.pos;\n        scanner.eat(37 /* Percent */) || scanner.eatWhile(isAlphaWord);\n        return {\n            type: 'NumberValue',\n            value: Number(rawValue),\n            rawValue,\n            unit: scanner.current(),\n            start,\n            end: scanner.pos\n        };\n    }\n}\n/**\n * Consumes quoted string value from given scanner\n */\nfunction stringValue(scanner) {\n    const ch = scanner.peek();\n    const start = scanner.pos;\n    let finished = false;\n    if (isQuote(ch)) {\n        scanner.pos++;\n        while (!scanner.eof()) {\n            // Do not throw error on malformed string\n            if (scanner.eat(ch)) {\n                finished = true;\n                break;\n            }\n            else {\n                scanner.pos++;\n            }\n        }\n        scanner.start = start;\n        return {\n            type: 'StringValue',\n            value: scanner.substring(start + 1, scanner.pos - (finished ? 1 : 0)),\n            quote: ch === 39 /* SingleQuote */ ? 'single' : 'double',\n            start,\n            end: scanner.pos\n        };\n    }\n}\n/**\n * Consumes a color token from given string\n */\nfunction colorValue(scanner) {\n    // supported color variations:\n    // #abc   → #aabbccc\n    // #0     → #000000\n    // #fff.5 → rgba(255, 255, 255, 0.5)\n    // #t     → transparent\n    const start = scanner.pos;\n    if (scanner.eat(35 /* Hash */)) {\n        const valueStart = scanner.pos;\n        let color = '';\n        let alpha = '';\n        if (scanner.eatWhile(isHex)) {\n            color = scanner.substring(valueStart, scanner.pos);\n            alpha = colorAlpha(scanner);\n        }\n        else if (scanner.eat(116 /* Transparent */)) {\n            color = '0';\n            alpha = colorAlpha(scanner) || '0';\n        }\n        else {\n            alpha = colorAlpha(scanner);\n        }\n        if (color || alpha || scanner.eof()) {\n            const { r, g, b, a } = parseColor(color, alpha);\n            return {\n                type: 'ColorValue',\n                r, g, b, a,\n                raw: scanner.substring(start + 1, scanner.pos),\n                start,\n                end: scanner.pos\n            };\n        }\n        else {\n            // Consumed # but no actual value: invalid color value, treat it as literal\n            return createLiteral(scanner, start);\n        }\n    }\n    scanner.pos = start;\n}\n/**\n * Consumes alpha value of color: `.1`\n */\nfunction colorAlpha(scanner) {\n    const start = scanner.pos;\n    if (scanner.eat(46 /* Dot */)) {\n        scanner.start = start;\n        if (scanner.eatWhile(isNumber)) {\n            return scanner.current();\n        }\n        return '1';\n    }\n    return '';\n}\n/**\n * Consumes white space characters as string literal from given scanner\n */\nfunction whiteSpace(scanner) {\n    const start = scanner.pos;\n    if (scanner.eatWhile(isSpace)) {\n        return {\n            type: 'WhiteSpace',\n            start,\n            end: scanner.pos\n        };\n    }\n}\n/**\n * Consumes bracket from given scanner\n */\nfunction bracket(scanner) {\n    const ch = scanner.peek();\n    if (isBracket(ch)) {\n        return {\n            type: 'Bracket',\n            open: ch === 40 /* RoundBracketOpen */,\n            start: scanner.pos++,\n            end: scanner.pos\n        };\n    }\n}\n/**\n * Consumes operator from given scanner\n */\nfunction operator(scanner) {\n    const op = operatorType(scanner.peek());\n    if (op) {\n        return {\n            type: 'Operator',\n            operator: op,\n            start: scanner.pos++,\n            end: scanner.pos\n        };\n    }\n}\n/**\n * Eats number value from given stream\n * @return Returns `true` if number was consumed\n */\nfunction consumeNumber(stream) {\n    const start = stream.pos;\n    stream.eat(45 /* Dash */);\n    const afterNegative = stream.pos;\n    const hasDecimal = stream.eatWhile(isNumber);\n    const prevPos = stream.pos;\n    if (stream.eat(46 /* Dot */)) {\n        // It’s perfectly valid to have numbers like `1.`, which enforces\n        // value to float unit type\n        const hasFloat = stream.eatWhile(isNumber);\n        if (!hasDecimal && !hasFloat) {\n            // Lone dot\n            stream.pos = prevPos;\n        }\n    }\n    // Edge case: consumed dash only: not a number, bail-out\n    if (stream.pos === afterNegative) {\n        stream.pos = start;\n    }\n    return stream.pos !== start;\n}\nfunction isIdentPrefix(code) {\n    return code === 64 /* At */ || code === 36 /* Dollar */;\n}\n/**\n * If given character is an operator, returns it’s type\n */\nfunction operatorType(ch) {\n    return (ch === 43 /* Sibling */ && \"+\" /* Sibling */)\n        || (ch === 33 /* Excl */ && \"!\" /* Important */)\n        || (ch === 44 /* Comma */ && \",\" /* ArgumentDelimiter */)\n        || (ch === 58 /* Colon */ && \":\" /* PropertyDelimiter */)\n        || (ch === 45 /* Dash */ && \"-\" /* ValueDelimiter */)\n        || void 0;\n}\n/**\n * Check if given code is a hex value (/0-9a-f/)\n */\nfunction isHex(code) {\n    return isNumber(code) || isAlpha(code, 65, 70); // A-F\n}\nfunction isKeyword(code) {\n    return isAlphaNumericWord(code) || code === 45 /* Dash */;\n}\nfunction isBracket(code) {\n    return code === 40 /* RoundBracketOpen */ || code === 41 /* RoundBracketClose */;\n}\nfunction isLiteral(code) {\n    return isAlphaWord(code) || code === 37 /* Percent */;\n}\n/**\n * Parses given color value from abbreviation into RGBA format\n */\nfunction parseColor(value, alpha) {\n    let r = '0';\n    let g = '0';\n    let b = '0';\n    let a = Number(alpha != null && alpha !== '' ? alpha : 1);\n    if (value === 't') {\n        a = 0;\n    }\n    else {\n        switch (value.length) {\n            case 0:\n                break;\n            case 1:\n                r = g = b = value + value;\n                break;\n            case 2:\n                r = g = b = value;\n                break;\n            case 3:\n                r = value[0] + value[0];\n                g = value[1] + value[1];\n                b = value[2] + value[2];\n                break;\n            default:\n                value += value;\n                r = value.slice(0, 2);\n                g = value.slice(2, 4);\n                b = value.slice(4, 6);\n        }\n    }\n    return {\n        r: parseInt(r, 16),\n        g: parseInt(g, 16),\n        b: parseInt(b, 16),\n        a\n    };\n}\n/**\n * Check if scanner reader must consume dash after given token.\n * Used in cases where user must explicitly separate numeric values\n */\nfunction shouldConsumeDashAfter(token) {\n    return token.type === 'ColorValue' || (token.type === 'NumberValue' && !token.unit);\n}\n/**\n * Merges last adjacent tokens into a single literal.\n * This function is used to overcome edge case when function name was parsed\n * as a list of separate tokens. For example, a `scale3d()` value will be\n * parsed as literal and number tokens (`scale` and `3d`) which is a perfectly\n * valid abbreviation but undesired result. This function will detect last adjacent\n * literal and number values and combine them into single literal\n */\nfunction mergeTokens(scanner, tokens) {\n    let start = 0;\n    let end = 0;\n    while (tokens.length) {\n        const token = last(tokens);\n        if (token.type === 'Literal' || token.type === 'NumberValue') {\n            start = token.start;\n            if (!end) {\n                end = token.end;\n            }\n            tokens.pop();\n        }\n        else {\n            break;\n        }\n    }\n    if (start !== end) {\n        tokens.push(createLiteral(scanner, start, end));\n    }\n}\nfunction last(arr) {\n    return arr[arr.length - 1];\n}\n\nfunction tokenScanner(tokens) {\n    return {\n        tokens,\n        start: 0,\n        pos: 0,\n        size: tokens.length\n    };\n}\nfunction peek(scanner) {\n    return scanner.tokens[scanner.pos];\n}\nfunction readable(scanner) {\n    return scanner.pos < scanner.size;\n}\nfunction consume(scanner, test) {\n    if (test(peek(scanner))) {\n        scanner.pos++;\n        return true;\n    }\n    return false;\n}\nfunction error(scanner, message, token = peek(scanner)) {\n    if (token && token.start != null) {\n        message += ` at ${token.start}`;\n    }\n    const err = new Error(message);\n    err['pos'] = token && token.start;\n    return err;\n}\n\nfunction parser(tokens, options = {}) {\n    const scanner = tokenScanner(tokens);\n    const result = [];\n    let property;\n    while (readable(scanner)) {\n        if (property = consumeProperty(scanner, options)) {\n            result.push(property);\n        }\n        else if (!consume(scanner, isSiblingOperator)) {\n            throw error(scanner, 'Unexpected token');\n        }\n    }\n    return result;\n}\n/**\n * Consumes single CSS property\n */\nfunction consumeProperty(scanner, options) {\n    let name;\n    let important = false;\n    let valueFragment;\n    const value = [];\n    const token = peek(scanner);\n    const valueMode = !!options.value;\n    if (!valueMode && isLiteral$1(token) && !isFunctionStart(scanner)) {\n        scanner.pos++;\n        name = token.value;\n        // Consume any following value delimiter after property name\n        consume(scanner, isValueDelimiter);\n    }\n    // Skip whitespace right after property name, if any\n    if (valueMode) {\n        consume(scanner, isWhiteSpace);\n    }\n    while (readable(scanner)) {\n        if (consume(scanner, isImportant)) {\n            important = true;\n        }\n        else if (valueFragment = consumeValue(scanner, valueMode)) {\n            value.push(valueFragment);\n        }\n        else if (!consume(scanner, isFragmentDelimiter)) {\n            break;\n        }\n    }\n    if (name || value.length || important) {\n        return { name, value, important };\n    }\n}\n/**\n * Consumes single value fragment, e.g. all value tokens before comma\n */\nfunction consumeValue(scanner, inArgument) {\n    const result = [];\n    let token;\n    let args;\n    while (readable(scanner)) {\n        token = peek(scanner);\n        if (isValue(token)) {\n            scanner.pos++;\n            if (isLiteral$1(token) && (args = consumeArguments(scanner))) {\n                result.push({\n                    type: 'FunctionCall',\n                    name: token.value,\n                    arguments: args\n                });\n            }\n            else {\n                result.push(token);\n            }\n        }\n        else if (isValueDelimiter(token) || (inArgument && isWhiteSpace(token))) {\n            scanner.pos++;\n        }\n        else {\n            break;\n        }\n    }\n    return result.length\n        ? { type: 'CSSValue', value: result }\n        : void 0;\n}\nfunction consumeArguments(scanner) {\n    const start = scanner.pos;\n    if (consume(scanner, isOpenBracket)) {\n        const args = [];\n        let value;\n        while (readable(scanner) && !consume(scanner, isCloseBracket)) {\n            if (value = consumeValue(scanner, true)) {\n                args.push(value);\n            }\n            else if (!consume(scanner, isWhiteSpace) && !consume(scanner, isArgumentDelimiter)) {\n                throw error(scanner, 'Unexpected token');\n            }\n        }\n        scanner.start = start;\n        return args;\n    }\n}\nfunction isLiteral$1(token) {\n    return token && token.type === 'Literal';\n}\nfunction isBracket$1(token, open) {\n    return token && token.type === 'Bracket' && (open == null || token.open === open);\n}\nfunction isOpenBracket(token) {\n    return isBracket$1(token, true);\n}\nfunction isCloseBracket(token) {\n    return isBracket$1(token, false);\n}\nfunction isWhiteSpace(token) {\n    return token && token.type === 'WhiteSpace';\n}\nfunction isOperator(token, operator) {\n    return token && token.type === 'Operator' && (!operator || token.operator === operator);\n}\nfunction isSiblingOperator(token) {\n    return isOperator(token, \"+\" /* Sibling */);\n}\nfunction isArgumentDelimiter(token) {\n    return isOperator(token, \",\" /* ArgumentDelimiter */);\n}\nfunction isFragmentDelimiter(token) {\n    return isArgumentDelimiter(token);\n}\nfunction isImportant(token) {\n    return isOperator(token, \"!\" /* Important */);\n}\nfunction isValue(token) {\n    return token.type === 'StringValue'\n        || token.type === 'ColorValue'\n        || token.type === 'NumberValue'\n        || token.type === 'Literal'\n        || token.type === 'Field';\n}\nfunction isValueDelimiter(token) {\n    return isOperator(token, \":\" /* PropertyDelimiter */)\n        || isOperator(token, \"-\" /* ValueDelimiter */);\n}\nfunction isFunctionStart(scanner) {\n    const t1 = scanner.tokens[scanner.pos];\n    const t2 = scanner.tokens[scanner.pos + 1];\n    return t1 && t2 && isLiteral$1(t1) && t2.type === 'Bracket';\n}\n\n/**\n * Parses given abbreviation into property set\n */\nfunction parse(abbr, options) {\n    try {\n        const tokens = typeof abbr === 'string' ? tokenize(abbr, options && options.value) : abbr;\n        return parser(tokens, options);\n    }\n    catch (err) {\n        if (err instanceof ScannerError && typeof abbr === 'string') {\n            err.message += `\\n${abbr}\\n${'-'.repeat(err.pos)}^`;\n        }\n        throw err;\n    }\n}\n\nexport default parse;\nexport { getToken, parser, tokenize };\n","import parse$2 from '@emmetio/abbreviation';\nexport { default as markupAbbreviation } from '@emmetio/abbreviation';\nimport parse$3 from '@emmetio/css-abbreviation';\nexport { default as stylesheetAbbreviation } from '@emmetio/css-abbreviation';\n\n/**\n * Merges attributes in current node: de-duplicates attributes with the same name\n * and merges class names\n */\nfunction mergeAttributes(node, config) {\n    if (!node.attributes) {\n        return;\n    }\n    const attributes = [];\n    const lookup = {};\n    for (const attr of node.attributes) {\n        if (attr.name) {\n            const attrName = attr.name;\n            if (attrName in lookup) {\n                const prev = lookup[attrName];\n                if (attrName === 'class') {\n                    prev.value = mergeValue(prev.value, attr.value, ' ');\n                }\n                else {\n                    mergeDeclarations(prev, attr, config);\n                }\n            }\n            else {\n                // Create new attribute instance so we can safely modify it later\n                attributes.push(lookup[attrName] = Object.assign({}, attr));\n            }\n        }\n        else {\n            attributes.push(attr);\n        }\n    }\n    node.attributes = attributes;\n}\n/**\n * Merges two token lists into single list. Adjacent strings are merged together\n */\nfunction mergeValue(prev, next, glue) {\n    if (prev && next) {\n        if (prev.length && glue) {\n            append(prev, glue);\n        }\n        for (const t of next) {\n            append(prev, t);\n        }\n        return prev;\n    }\n    const result = prev || next;\n    return result && result.slice();\n}\n/**\n * Merges data from `src` attribute into `dest` and returns it\n */\nfunction mergeDeclarations(dest, src, config) {\n    dest.name = src.name;\n    if (!config.options['output.reverseAttributes']) {\n        dest.value = src.value;\n    }\n    // Keep high-priority properties\n    if (!dest.implied) {\n        dest.implied = src.implied;\n    }\n    if (!dest.boolean) {\n        dest.boolean = src.boolean;\n    }\n    if (dest.valueType !== 'expression') {\n        dest.valueType = src.valueType;\n    }\n    return dest;\n}\nfunction append(tokens, value) {\n    const lastIx = tokens.length - 1;\n    if (typeof tokens[lastIx] === 'string' && typeof value === 'string') {\n        tokens[lastIx] += value;\n    }\n    else {\n        tokens.push(value);\n    }\n}\n\n/**\n * Walks over each child node of given markup abbreviation AST node (not including\n * given one) and invokes `fn` on each node.\n * The `fn` callback accepts context node, list of ancestor nodes and optional\n * state object\n */\nfunction walk(node, fn, state) {\n    const ancestors = [node];\n    const callback = (ctx) => {\n        fn(ctx, ancestors, state);\n        ancestors.push(ctx);\n        ctx.children.forEach(callback);\n        ancestors.pop();\n    };\n    node.children.forEach(callback);\n}\n/**\n * Finds node which is the deepest for in current node or node itself.\n */\nfunction findDeepest(node) {\n    let parent;\n    while (node.children.length) {\n        parent = node;\n        node = node.children[node.children.length - 1];\n    }\n    return { parent, node };\n}\nfunction isNode(node) {\n    return node.type === 'AbbreviationNode';\n}\n\n/**\n * Finds matching snippet from `registry` and resolves it into a parsed abbreviation.\n * Resolved node is then updated or replaced with matched abbreviation tree.\n *\n * A HTML registry basically contains aliases to another Emmet abbreviations,\n * e.g. a predefined set of name, attributes and so on, possibly a complex\n * abbreviation with multiple elements. So we have to get snippet, parse it\n * and recursively resolve it.\n */\nfunction resolveSnippets(abbr, config) {\n    const stack = [];\n    const reversed = config.options['output.reverseAttributes'];\n    const resolve = (child) => {\n        const snippet = child.name && config.snippets[child.name];\n        // A snippet in stack means circular reference.\n        // It can be either a user error or a perfectly valid snippet like\n        // \"img\": \"img[src alt]/\", e.g. an element with predefined shape.\n        // In any case, simply stop parsing and keep element as is\n        if (!snippet || stack.includes(snippet)) {\n            return null;\n        }\n        const snippetAbbr = parse$2(snippet, config);\n        stack.push(snippet);\n        walkResolve(snippetAbbr, resolve);\n        stack.pop();\n        // Add attributes from current node into every top-level node of parsed abbreviation\n        for (const topNode of snippetAbbr.children) {\n            if (child.attributes) {\n                const from = topNode.attributes || [];\n                const to = child.attributes || [];\n                topNode.attributes = reversed ? to.concat(from) : from.concat(to);\n            }\n            mergeNodes(child, topNode);\n        }\n        return snippetAbbr;\n    };\n    walkResolve(abbr, resolve);\n    return abbr;\n}\nfunction walkResolve(node, resolve, config) {\n    let children = [];\n    for (const child of node.children) {\n        const resolved = resolve(child);\n        if (resolved) {\n            children = children.concat(resolved.children);\n            const deepest = findDeepest(resolved);\n            if (isNode(deepest.node)) {\n                deepest.node.children = deepest.node.children.concat(walkResolve(child, resolve));\n            }\n        }\n        else {\n            children.push(child);\n            child.children = walkResolve(child, resolve);\n        }\n    }\n    return node.children = children;\n}\n/**\n * Adds data from first node into second node\n */\nfunction mergeNodes(from, to) {\n    if (from.selfClosing) {\n        to.selfClosing = true;\n    }\n    if (from.value != null) {\n        to.value = from.value;\n    }\n    if (from.repeat) {\n        to.repeat = from.repeat;\n    }\n}\n\nfunction createOutputStream(options, level = 0) {\n    return {\n        options,\n        value: '',\n        level,\n        offset: 0,\n        line: 0,\n        column: 0\n    };\n}\n/**\n * Pushes plain string into output stream without newline processing\n */\nfunction push(stream, text) {\n    const processText = stream.options['output.text'];\n    _push(stream, processText(text, stream.offset, stream.line, stream.column));\n}\n/**\n * Pushes given string with possible newline formatting into output\n */\nfunction pushString(stream, value) {\n    // If given value contains newlines, we should push content line-by-line and\n    // use `pushNewline()` to maintain proper line/column state\n    const lines = splitByLines(value);\n    for (let i = 0, il = lines.length - 1; i <= il; i++) {\n        push(stream, lines[i]);\n        if (i !== il) {\n            pushNewline(stream, true);\n        }\n    }\n}\n/**\n * Pushes new line into given output stream\n */\nfunction pushNewline(stream, indent) {\n    const baseIndent = stream.options['output.baseIndent'];\n    const newline = stream.options['output.newline'];\n    push(stream, newline + baseIndent);\n    stream.line++;\n    stream.column = baseIndent.length;\n    if (indent) {\n        pushIndent(stream, indent === true ? stream.level : indent);\n    }\n}\n/**\n * Adds indentation of `size` to current output stream\n */\nfunction pushIndent(stream, size = stream.level) {\n    const indent = stream.options['output.indent'];\n    push(stream, indent.repeat(Math.max(size, 0)));\n}\n/**\n * Pushes field/tabstop into output stream\n */\nfunction pushField(stream, index, placeholder) {\n    const field = stream.options['output.field'];\n    // NB: use `_push` instead of `push` to skip text processing\n    _push(stream, field(index, placeholder, stream.offset, stream.line, stream.column));\n}\n/**\n * Returns given tag name formatted according to given config\n */\nfunction tagName(name, config) {\n    return strCase(name, config.options['output.tagCase']);\n}\n/**\n * Returns given attribute name formatted according to given config\n */\nfunction attrName(name, config) {\n    return strCase(name, config.options['output.attributeCase']);\n}\n/**\n * Returns character for quoting value of given attribute\n */\nfunction attrQuote(attr, config, isOpen) {\n    if (attr.valueType === 'expression') {\n        return isOpen ? '{' : '}';\n    }\n    return config.options['output.attributeQuotes'] === 'single' ? '\\'' : '\"';\n}\n/**\n * Check if given attribute is boolean\n */\nfunction isBooleanAttribute(attr, config) {\n    return attr.boolean\n        || config.options['output.booleanAttributes'].includes((attr.name || '').toLowerCase());\n}\n/**\n * Returns a token for self-closing tag, depending on current options\n */\nfunction selfClose(config) {\n    switch (config.options['output.selfClosingStyle']) {\n        case 'xhtml': return ' /';\n        case 'xml': return '/';\n        default: return '';\n    }\n}\n/**\n * Check if given tag name belongs to inline-level element\n * @param node Parsed node or tag name\n */\nfunction isInline(node, config) {\n    if (typeof node === 'string') {\n        return config.options.inlineElements.includes(node.toLowerCase());\n    }\n    // inline node is a node either with inline-level name or text-only node\n    return node.name ? isInline(node.name, config) : Boolean(node.value && !node.attributes);\n}\n/**\n * Splits given text by lines\n */\nfunction splitByLines(text) {\n    return text.split(/\\r\\n|\\r|\\n/g);\n}\n/**\n * Pushes raw string into output stream without any processing\n */\nfunction _push(stream, text) {\n    stream.value += text;\n    stream.offset += text.length;\n    stream.column += text.length;\n}\nfunction strCase(str, type) {\n    if (type) {\n        return type === 'upper' ? str.toUpperCase() : str.toLowerCase();\n    }\n    return str;\n}\n\nconst elementMap = {\n    p: 'span',\n    ul: 'li',\n    ol: 'li',\n    table: 'tr',\n    tr: 'td',\n    tbody: 'tr',\n    thead: 'tr',\n    tfoot: 'tr',\n    colgroup: 'col',\n    select: 'option',\n    optgroup: 'option',\n    audio: 'source',\n    video: 'source',\n    object: 'param',\n    map: 'area'\n};\nfunction implicitTag(node, ancestors, config) {\n    if (!node.name && node.attributes) {\n        resolveImplicitTag(node, ancestors, config);\n    }\n}\nfunction resolveImplicitTag(node, ancestors, config) {\n    const parent = getParentElement(ancestors);\n    const contextName = config.context ? config.context.name : '';\n    const parentName = lowercase(parent ? parent.name : contextName);\n    node.name = elementMap[parentName]\n        || (isInline(parentName, config) ? 'span' : 'div');\n}\nfunction lowercase(str) {\n    return (str || '').toLowerCase();\n}\n/**\n * Returns closest element node from given ancestors list\n */\nfunction getParentElement(ancestors) {\n    for (let i = ancestors.length - 1; i >= 0; i--) {\n        const elem = ancestors[i];\n        if (isNode(elem)) {\n            return elem;\n        }\n    }\n}\n\nvar latin = {\n\t\"common\": [\"lorem\", \"ipsum\", \"dolor\", \"sit\", \"amet\", \"consectetur\", \"adipisicing\", \"elit\"],\n\t\"words\": [\"exercitationem\", \"perferendis\", \"perspiciatis\", \"laborum\", \"eveniet\",\n\t\t\"sunt\", \"iure\", \"nam\", \"nobis\", \"eum\", \"cum\", \"officiis\", \"excepturi\",\n\t\t\"odio\", \"consectetur\", \"quasi\", \"aut\", \"quisquam\", \"vel\", \"eligendi\",\n\t\t\"itaque\", \"non\", \"odit\", \"tempore\", \"quaerat\", \"dignissimos\",\n\t\t\"facilis\", \"neque\", \"nihil\", \"expedita\", \"vitae\", \"vero\", \"ipsum\",\n\t\t\"nisi\", \"animi\", \"cumque\", \"pariatur\", \"velit\", \"modi\", \"natus\",\n\t\t\"iusto\", \"eaque\", \"sequi\", \"illo\", \"sed\", \"ex\", \"et\", \"voluptatibus\",\n\t\t\"tempora\", \"veritatis\", \"ratione\", \"assumenda\", \"incidunt\", \"nostrum\",\n\t\t\"placeat\", \"aliquid\", \"fuga\", \"provident\", \"praesentium\", \"rem\",\n\t\t\"necessitatibus\", \"suscipit\", \"adipisci\", \"quidem\", \"possimus\",\n\t\t\"voluptas\", \"debitis\", \"sint\", \"accusantium\", \"unde\", \"sapiente\",\n\t\t\"voluptate\", \"qui\", \"aspernatur\", \"laudantium\", \"soluta\", \"amet\",\n\t\t\"quo\", \"aliquam\", \"saepe\", \"culpa\", \"libero\", \"ipsa\", \"dicta\",\n\t\t\"reiciendis\", \"nesciunt\", \"doloribus\", \"autem\", \"impedit\", \"minima\",\n\t\t\"maiores\", \"repudiandae\", \"ipsam\", \"obcaecati\", \"ullam\", \"enim\",\n\t\t\"totam\", \"delectus\", \"ducimus\", \"quis\", \"voluptates\", \"dolores\",\n\t\t\"molestiae\", \"harum\", \"dolorem\", \"quia\", \"voluptatem\", \"molestias\",\n\t\t\"magni\", \"distinctio\", \"omnis\", \"illum\", \"dolorum\", \"voluptatum\", \"ea\",\n\t\t\"quas\", \"quam\", \"corporis\", \"quae\", \"blanditiis\", \"atque\", \"deserunt\",\n\t\t\"laboriosam\", \"earum\", \"consequuntur\", \"hic\", \"cupiditate\",\n\t\t\"quibusdam\", \"accusamus\", \"ut\", \"rerum\", \"error\", \"minus\", \"eius\",\n\t\t\"ab\", \"ad\", \"nemo\", \"fugit\", \"officia\", \"at\", \"in\", \"id\", \"quos\",\n\t\t\"reprehenderit\", \"numquam\", \"iste\", \"fugiat\", \"sit\", \"inventore\",\n\t\t\"beatae\", \"repellendus\", \"magnam\", \"recusandae\", \"quod\", \"explicabo\",\n\t\t\"doloremque\", \"aperiam\", \"consequatur\", \"asperiores\", \"commodi\",\n\t\t\"optio\", \"dolor\", \"labore\", \"temporibus\", \"repellat\", \"veniam\",\n\t\t\"architecto\", \"est\", \"esse\", \"mollitia\", \"nulla\", \"a\", \"similique\",\n\t\t\"eos\", \"alias\", \"dolore\", \"tenetur\", \"deleniti\", \"porro\", \"facere\",\n\t\t\"maxime\", \"corrupti\"]\n};\n\nvar ru = {\n\t\"common\": [\"далеко-далеко\", \"за\", \"словесными\", \"горами\", \"в стране\", \"гласных\", \"и согласных\", \"живут\", \"рыбные\", \"тексты\"],\n\t\"words\": [\"вдали\", \"от всех\", \"они\", \"буквенных\", \"домах\", \"на берегу\", \"семантика\",\n\t\t\"большого\", \"языкового\", \"океана\", \"маленький\", \"ручеек\", \"даль\",\n\t\t\"журчит\", \"по всей\", \"обеспечивает\", \"ее\",\"всеми\", \"необходимыми\",\n\t\t\"правилами\", \"эта\", \"парадигматическая\", \"страна\", \"которой\", \"жаренные\",\n\t\t\"предложения\", \"залетают\", \"прямо\", \"рот\", \"даже\", \"всемогущая\",\n\t\t\"пунктуация\", \"не\", \"имеет\", \"власти\", \"над\", \"рыбными\", \"текстами\",\n\t\t\"ведущими\", \"безорфографичный\", \"образ\", \"жизни\", \"однажды\", \"одна\",\n\t\t\"маленькая\", \"строчка\",\"рыбного\", \"текста\", \"имени\", \"lorem\", \"ipsum\",\n\t\t\"решила\", \"выйти\", \"большой\", \"мир\", \"грамматики\", \"великий\", \"оксмокс\",\n\t\t\"предупреждал\", \"о\", \"злых\", \"запятых\", \"диких\", \"знаках\", \"вопроса\",\n\t\t\"коварных\", \"точках\", \"запятой\", \"но\", \"текст\", \"дал\", \"сбить\",\n\t\t\"себя\", \"толку\", \"он\", \"собрал\", \"семь\", \"своих\", \"заглавных\", \"букв\",\n\t\t\"подпоясал\", \"инициал\", \"за\", \"пояс\", \"пустился\", \"дорогу\",\n\t\t\"взобравшись\", \"первую\", \"вершину\", \"курсивных\", \"гор\", \"бросил\",\n\t\t\"последний\", \"взгляд\", \"назад\", \"силуэт\", \"своего\", \"родного\", \"города\",\n\t\t\"буквоград\", \"заголовок\", \"деревни\", \"алфавит\", \"подзаголовок\", \"своего\",\n\t\t\"переулка\", \"грустный\", \"реторический\", \"вопрос\", \"скатился\", \"его\",\n\t\t\"щеке\", \"продолжил\", \"свой\", \"путь\", \"дороге\", \"встретил\", \"рукопись\",\n\t\t\"она\", \"предупредила\",  \"моей\", \"все\", \"переписывается\", \"несколько\",\n\t\t\"раз\", \"единственное\", \"что\", \"меня\", \"осталось\", \"это\", \"приставка\",\n\t\t\"возвращайся\", \"ты\", \"лучше\", \"свою\", \"безопасную\", \"страну\", \"послушавшись\",\n\t\t\"рукописи\", \"наш\", \"продолжил\", \"свой\", \"путь\", \"вскоре\", \"ему\",\n\t\t\"повстречался\", \"коварный\", \"составитель\", \"рекламных\", \"текстов\",\n\t\t\"напоивший\", \"языком\", \"речью\", \"заманивший\", \"свое\", \"агентство\",\n\t\t\"которое\", \"использовало\", \"снова\", \"снова\", \"своих\", \"проектах\",\n\t\t\"если\", \"переписали\", \"то\", \"живет\", \"там\", \"до\", \"сих\", \"пор\"]\n};\n\nvar sp = {\n\t\"common\": [\"mujer\", \"uno\", \"dolor\", \"más\", \"de\", \"poder\", \"mismo\", \"si\"],\n\t\"words\": [\"ejercicio\", \"preferencia\", \"perspicacia\", \"laboral\", \"paño\",\n\t\t\"suntuoso\", \"molde\", \"namibia\", \"planeador\", \"mirar\", \"demás\", \"oficinista\", \"excepción\",\n\t\t\"odio\", \"consecuencia\", \"casi\", \"auto\", \"chicharra\", \"velo\", \"elixir\",\n\t\t\"ataque\", \"no\", \"odio\", \"temporal\", \"cuórum\", \"dignísimo\",\n\t\t\"facilismo\", \"letra\", \"nihilista\", \"expedición\", \"alma\", \"alveolar\", \"aparte\",\n\t\t\"león\", \"animal\", \"como\", \"paria\", \"belleza\", \"modo\", \"natividad\",\n\t\t\"justo\", \"ataque\", \"séquito\", \"pillo\", \"sed\", \"ex\", \"y\", \"voluminoso\",\n\t\t\"temporalidad\", \"verdades\", \"racional\", \"asunción\", \"incidente\", \"marejada\",\n\t\t\"placenta\", \"amanecer\", \"fuga\", \"previsor\", \"presentación\", \"lejos\",\n\t\t\"necesariamente\", \"sospechoso\", \"adiposidad\", \"quindío\", \"pócima\",\n\t\t\"voluble\", \"débito\", \"sintió\", \"accesorio\", \"falda\", \"sapiencia\",\n\t\t\"volutas\", \"queso\", \"permacultura\", \"laudo\", \"soluciones\", \"entero\",\n\t\t\"pan\", \"litro\", \"tonelada\", \"culpa\", \"libertario\", \"mosca\", \"dictado\",\n\t\t\"reincidente\", \"nascimiento\", \"dolor\", \"escolar\", \"impedimento\", \"mínima\",\n\t\t\"mayores\", \"repugnante\", \"dulce\", \"obcecado\", \"montaña\", \"enigma\",\n\t\t\"total\", \"deletéreo\", \"décima\", \"cábala\", \"fotografía\", \"dolores\",\n\t\t\"molesto\", \"olvido\", \"paciencia\", \"resiliencia\", \"voluntad\", \"molestias\",\n\t\t\"magnífico\", \"distinción\", \"ovni\", \"marejada\", \"cerro\", \"torre\", \"y\",\n\t\t\"abogada\", \"manantial\", \"corporal\", \"agua\", \"crepúsculo\", \"ataque\", \"desierto\",\n\t\t\"laboriosamente\", \"angustia\", \"afortunado\", \"alma\", \"encefalograma\",\n\t\t\"materialidad\", \"cosas\", \"o\", \"renuncia\", \"error\", \"menos\", \"conejo\",\n\t\t\"abadía\", \"analfabeto\", \"remo\", \"fugacidad\", \"oficio\", \"en\", \"almácigo\", \"vos\", \"pan\",\n\t\t\"represión\", \"números\", \"triste\", \"refugiado\", \"trote\", \"inventor\",\n\t\t\"corchea\", \"repelente\", \"magma\", \"recusado\", \"patrón\", \"explícito\",\n\t\t\"paloma\", \"síndrome\", \"inmune\", \"autoinmune\", \"comodidad\",\n\t\t\"ley\", \"vietnamita\", \"demonio\", \"tasmania\", \"repeler\", \"apéndice\",\n\t\t\"arquitecto\", \"columna\", \"yugo\", \"computador\", \"mula\", \"a\", \"propósito\",\n\t\t\"fantasía\", \"alias\", \"rayo\", \"tenedor\", \"deleznable\", \"ventana\", \"cara\",\n\t\t\"anemia\", \"corrupto\"]\n};\n\nconst vocabularies = { ru, sp, latin };\nconst reLorem = /^lorem([a-z]*)(\\d*)(-\\d*)?$/i;\nfunction lorem(node, ancestors, config) {\n    let m;\n    if (node.name && (m = node.name.match(reLorem))) {\n        const db = vocabularies[m[1]] || vocabularies.latin;\n        const minWordCount = m[2] ? Math.max(1, Number(m[2])) : 30;\n        const maxWordCount = m[3] ? Math.max(minWordCount, Number(m[3].slice(1))) : minWordCount;\n        const wordCount = rand(minWordCount, maxWordCount);\n        const repeat = node.repeat || findRepeater(ancestors);\n        node.name = node.attributes = void 0;\n        node.value = [paragraph(db, wordCount, !repeat || repeat.value === 0)];\n        if (node.repeat && ancestors.length > 1) {\n            resolveImplicitTag(node, ancestors, config);\n        }\n    }\n}\n/**\n * Returns random integer between <code>from</code> and <code>to</code> values\n */\nfunction rand(from, to) {\n    return Math.floor(Math.random() * (to - from) + from);\n}\nfunction sample(arr, count) {\n    const len = arr.length;\n    const iterations = Math.min(len, count);\n    const result = [];\n    while (result.length < iterations) {\n        const str = arr[rand(0, len)];\n        if (!result.includes(str)) {\n            result.push(str);\n        }\n    }\n    return result;\n}\nfunction choice(val) {\n    return val[rand(0, val.length - 1)];\n}\nfunction sentence(words, end) {\n    if (words.length) {\n        words = [capitalize(words[0])].concat(words.slice(1));\n    }\n    return words.join(' ') + (end || choice('?!...')); // more dots than question marks\n}\nfunction capitalize(word) {\n    return word[0].toUpperCase() + word.slice(1);\n}\n/**\n * Insert commas at randomly selected words. This function modifies values\n * inside `words` array\n */\nfunction insertCommas(words) {\n    if (words.length < 2) {\n        return words;\n    }\n    words = words.slice();\n    const len = words.length;\n    const hasComma = /,$/;\n    let totalCommas = 0;\n    if (len > 3 && len <= 6) {\n        totalCommas = rand(0, 1);\n    }\n    else if (len > 6 && len <= 12) {\n        totalCommas = rand(0, 2);\n    }\n    else {\n        totalCommas = rand(1, 4);\n    }\n    for (let i = 0, pos; i < totalCommas; i++) {\n        pos = rand(0, len - 2);\n        if (!hasComma.test(words[pos])) {\n            words[pos] += ',';\n        }\n    }\n    return words;\n}\n/**\n * Generate a paragraph of \"Lorem ipsum\" text\n * @param dict Words dictionary\n * @param wordCount Words count in paragraph\n * @param startWithCommon Should paragraph start with common \"lorem ipsum\" sentence.\n */\nfunction paragraph(dict, wordCount, startWithCommon) {\n    const result = [];\n    let totalWords = 0;\n    let words;\n    if (startWithCommon && dict.common) {\n        words = dict.common.slice(0, wordCount);\n        totalWords += words.length;\n        result.push(sentence(insertCommas(words), '.'));\n    }\n    while (totalWords < wordCount) {\n        words = sample(dict.words, Math.min(rand(2, 30), wordCount - totalWords));\n        totalWords += words.length;\n        result.push(sentence(insertCommas(words)));\n    }\n    return result.join(' ');\n}\nfunction findRepeater(ancestors) {\n    for (let i = ancestors.length - 1; i >= 0; i--) {\n        const element = ancestors[i];\n        if (element.type === 'AbbreviationNode' && element.repeat) {\n            return element.repeat;\n        }\n    }\n}\n\n/**\n * JSX transformer: replaces `class` and `for` attributes with `className` and\n * `htmlFor` attributes respectively\n */\nfunction jsx(node) {\n    if (node.attributes) {\n        node.attributes.forEach(rename);\n    }\n}\nfunction rename(attr) {\n    if (attr.name === 'class') {\n        attr.name = 'className';\n    }\n    else if (attr.name === 'for') {\n        attr.name = 'htmlFor';\n    }\n}\n\n/**\n * XSL transformer: removes `select` attributes from certain nodes that contain\n * children\n */\nfunction xsl(node) {\n    if (matchesName(node.name) && node.attributes && (node.children.length || node.value)) {\n        node.attributes = node.attributes.filter(isAllowed);\n    }\n}\nfunction isAllowed(attr) {\n    return attr.name !== 'select';\n}\nfunction matchesName(name) {\n    return name === 'xsl:variable' || name === 'xsl:with-param';\n}\n\nconst reElement = /^(-+)([a-z0-9]+[a-z0-9-]*)/i;\nconst reModifier = /^(_+)([a-z0-9]+[a-z0-9-_]*)/i;\nconst blockCandidates1 = (className) => /^[a-z]\\-/i.test(className);\nconst blockCandidates2 = (className) => /^[a-z]/i.test(className);\nfunction bem(node, ancestors, config) {\n    expandClassNames(node);\n    expandShortNotation(node, ancestors, config);\n}\n/**\n * Expands existing class names in BEM notation in given `node`.\n * For example, if node contains `b__el_mod` class name, this method ensures\n * that element contains `b__el` class as well\n */\nfunction expandClassNames(node) {\n    const data = getBEMData(node);\n    const classNames = [];\n    for (const cl of data.classNames) {\n        // remove all modifiers and element prefixes from class name to get a base element name\n        const ix = cl.indexOf('_');\n        if (ix > 0 && !cl.startsWith('-')) {\n            classNames.push(cl.slice(0, ix));\n            classNames.push(cl.slice(ix));\n        }\n        else {\n            classNames.push(cl);\n        }\n    }\n    if (classNames.length) {\n        data.classNames = classNames.filter(uniqueClass);\n        data.block = findBlockName(data.classNames);\n        updateClass(node, data.classNames.join(' '));\n    }\n}\n/**\n * Expands short BEM notation, e.g. `-element` and `_modifier`\n */\nfunction expandShortNotation(node, ancestors, config) {\n    const data = getBEMData(node);\n    const classNames = [];\n    const { options } = config;\n    const path = ancestors.slice(1).concat(node);\n    for (let cl of data.classNames) {\n        let prefix = '';\n        let m;\n        const originalClass = cl;\n        // parse element definition (could be only one)\n        if (m = cl.match(reElement)) {\n            prefix = getBlockName(path, m[1].length, config.context) + options['bem.element'] + m[2];\n            classNames.push(prefix);\n            cl = cl.slice(m[0].length);\n        }\n        // parse modifiers definitions\n        if (m = cl.match(reModifier)) {\n            if (!prefix) {\n                prefix = getBlockName(path, m[1].length);\n                classNames.push(prefix);\n            }\n            classNames.push(`${prefix}${options['bem.modifier']}${m[2]}`);\n            cl = cl.slice(m[0].length);\n        }\n        if (cl === originalClass) {\n            // class name wasn’t modified: it’s not a BEM-specific class,\n            // add it as-is into output\n            classNames.push(originalClass);\n        }\n    }\n    const arrClassNames = classNames.filter(uniqueClass);\n    if (arrClassNames.length) {\n        updateClass(node, arrClassNames.join(' '));\n    }\n}\n/**\n * Returns BEM data from given abbreviation node\n */\nfunction getBEMData(node) {\n    if (!node._bem) {\n        let classValue = '';\n        if (node.attributes) {\n            for (const attr of node.attributes) {\n                if (attr.name === 'class' && attr.value) {\n                    classValue = stringifyValue(attr.value);\n                    break;\n                }\n            }\n        }\n        node._bem = parseBEM(classValue);\n    }\n    return node._bem;\n}\nfunction getBEMDataFromContext(context) {\n    if (!context._bem) {\n        context._bem = parseBEM(context.attributes && context.attributes.class || '');\n    }\n    return context._bem;\n}\n/**\n * Parses BEM data from given class name\n */\nfunction parseBEM(classValue) {\n    const classNames = classValue ? classValue.split(/\\s+/) : [];\n    return {\n        classNames,\n        block: findBlockName(classNames)\n    };\n}\n/**\n * Returns block name for given `node` by `prefix`, which tells the depth of\n * of parent node lookup\n */\nfunction getBlockName(ancestors, depth = 0, context) {\n    const maxParentIx = 0;\n    let parentIx = Math.max(ancestors.length - depth, maxParentIx);\n    do {\n        const parent = ancestors[parentIx];\n        if (parent) {\n            const data = getBEMData(parent);\n            if (data.block) {\n                return data.block;\n            }\n        }\n    } while (maxParentIx < parentIx--);\n    if (context) {\n        const data = getBEMDataFromContext(context);\n        if (data.block) {\n            return data.block;\n        }\n    }\n    return '';\n}\nfunction findBlockName(classNames) {\n    return find(classNames, blockCandidates1)\n        || find(classNames, blockCandidates2)\n        || void 0;\n}\n/**\n * Finds class name from given list which may be used as block name\n */\nfunction find(classNames, filter) {\n    for (const cl of classNames) {\n        if (reElement.test(cl) || reModifier.test(cl)) {\n            break;\n        }\n        if (filter(cl)) {\n            return cl;\n        }\n    }\n}\nfunction updateClass(node, value) {\n    for (const attr of node.attributes) {\n        if (attr.name === 'class') {\n            attr.value = [value];\n            break;\n        }\n    }\n}\nfunction stringifyValue(value) {\n    let result = '';\n    for (const t of value) {\n        result += typeof t === 'string' ? t : t.name;\n    }\n    return result;\n}\nfunction uniqueClass(item, ix, arr) {\n    return !!item && arr.indexOf(item) === ix;\n}\n\nfunction walk$1(abbr, visitor, state) {\n    const callback = (ctx, index, items) => {\n        const { parent, current } = state;\n        state.parent = current;\n        state.current = ctx;\n        visitor(ctx, index, items, state, next);\n        state.current = current;\n        state.parent = parent;\n    };\n    const next = (node, index, items) => {\n        state.ancestors.push(state.current);\n        callback(node, index, items);\n        state.ancestors.pop();\n    };\n    abbr.children.forEach(callback);\n}\nfunction createWalkState(config) {\n    return {\n        // @ts-ignore: Will set value in iterator\n        current: null,\n        parent: void 0,\n        ancestors: [],\n        config,\n        field: 1,\n        out: createOutputStream(config.options)\n    };\n}\n\nconst caret = [{ type: 'Field', index: 0, name: '' }];\n/**\n * Check if given node is a snippet: a node without name and attributes\n */\nfunction isSnippet(node) {\n    return node ? !node.name && !node.attributes : false;\n}\n/**\n * Check if given node is inline-level element, e.g. element with explicitly\n * defined node name\n */\nfunction isInlineElement(node, config) {\n    return node ? isInline(node, config) : false;\n}\n/**\n * Check if given value token is a field\n */\nfunction isField(token) {\n    return typeof token === 'object' && token.type === 'Field';\n}\nfunction pushTokens(tokens, state) {\n    const { out } = state;\n    let largestIndex = -1;\n    for (const t of tokens) {\n        if (typeof t === 'string') {\n            pushString(out, t);\n        }\n        else {\n            pushField(out, state.field + t.index, t.name);\n            if (t.index > largestIndex) {\n                largestIndex = t.index;\n            }\n        }\n    }\n    if (largestIndex !== -1) {\n        state.field += largestIndex + 1;\n    }\n}\n/**\n * Splits given value token by lines: returns array where each entry is a token list\n * for a single line\n */\nfunction splitByLines$1(tokens) {\n    const result = [];\n    let line = [];\n    for (const t of tokens) {\n        if (typeof t === 'string') {\n            const lines = t.split(/\\r\\n?|\\n/g);\n            line.push(lines.shift() || '');\n            while (lines.length) {\n                result.push(line);\n                line = [lines.shift() || ''];\n            }\n        }\n        else {\n            line.push(t);\n        }\n    }\n    line.length && result.push(line);\n    return result;\n}\n/**\n * Check if given attribute should be outputted\n */\nfunction shouldOutputAttribute(attr) {\n    // In case if attribute is implied, check if it has a defined value:\n    // either non-empty value or quoted empty value\n    return !attr.implied || attr.valueType !== 'raw' || (!!attr.value && attr.value.length > 0);\n}\n\n/**\n * Splits given string into template tokens.\n * Template is a string which contains placeholders which are uppercase names\n * between `[` and `]`, for example: `[PLACEHOLDER]`.\n * Unlike other templates, a placeholder may contain extra characters before and\n * after name: `[%PLACEHOLDER.]`. If data for `PLACEHOLDER` is defined, it will\n * be outputted with with these extra character, otherwise will be completely omitted.\n */\nfunction template(text) {\n    const tokens = [];\n    const scanner = { pos: 0, text };\n    let placeholder;\n    let offset = scanner.pos;\n    let pos = scanner.pos;\n    while (scanner.pos < scanner.text.length) {\n        pos = scanner.pos;\n        if (placeholder = consumePlaceholder(scanner)) {\n            if (offset !== scanner.pos) {\n                tokens.push(text.slice(offset, pos));\n            }\n            tokens.push(placeholder);\n            offset = scanner.pos;\n        }\n        else {\n            scanner.pos++;\n        }\n    }\n    if (offset !== scanner.pos) {\n        tokens.push(text.slice(offset));\n    }\n    return tokens;\n}\n/**\n * Consumes placeholder like `[#ID]` from given scanner\n */\nfunction consumePlaceholder(scanner) {\n    if (peek(scanner) === 91 /* Start */) {\n        const start = ++scanner.pos;\n        let namePos = start;\n        let afterPos = start;\n        let stack = 1;\n        while (scanner.pos < scanner.text.length) {\n            const code = peek(scanner);\n            if (isTokenStart(code)) {\n                namePos = scanner.pos;\n                while (isToken(peek(scanner))) {\n                    scanner.pos++;\n                }\n                afterPos = scanner.pos;\n            }\n            else {\n                if (code === 91 /* Start */) {\n                    stack++;\n                }\n                else if (code === 93 /* End */) {\n                    if (--stack === 0) {\n                        return {\n                            before: scanner.text.slice(start, namePos),\n                            after: scanner.text.slice(afterPos, scanner.pos++),\n                            name: scanner.text.slice(namePos, afterPos)\n                        };\n                    }\n                }\n                scanner.pos++;\n            }\n        }\n    }\n}\nfunction peek(scanner, pos = scanner.pos) {\n    return scanner.text.charCodeAt(pos);\n}\nfunction isTokenStart(code) {\n    return code >= 65 && code <= 90; // A-Z\n}\nfunction isToken(code) {\n    return isTokenStart(code)\n        || (code > 47 && code < 58) /* 0-9 */\n        || code === 95 /* Underscore */\n        || code === 45 /* Dash */;\n}\n\nfunction createCommentState(config) {\n    const { options } = config;\n    return {\n        enabled: options['comment.enabled'],\n        trigger: options['comment.trigger'],\n        before: options['comment.before'] ? template(options['comment.before']) : void 0,\n        after: options['comment.after'] ? template(options['comment.after']) : void 0\n    };\n}\n/**\n * Adds comment prefix for given node, if required\n */\nfunction commentNodeBefore(node, state) {\n    if (shouldComment(node, state) && state.comment.before) {\n        output(node, state.comment.before, state);\n    }\n}\n/**\n * Adds comment suffix for given node, if required\n */\nfunction commentNodeAfter(node, state) {\n    if (shouldComment(node, state) && state.comment.after) {\n        output(node, state.comment.after, state);\n    }\n}\n/**\n * Check if given node should be commented\n */\nfunction shouldComment(node, state) {\n    const { comment } = state;\n    if (!comment.enabled || !comment.trigger || !node.name || !node.attributes) {\n        return false;\n    }\n    for (const attr of node.attributes) {\n        if (attr.name && comment.trigger.includes(attr.name)) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Pushes given template tokens into output stream\n */\nfunction output(node, tokens, state) {\n    const attrs = {};\n    const { out } = state;\n    // Collect attributes payload\n    for (const attr of node.attributes) {\n        if (attr.name && attr.value) {\n            attrs[attr.name.toUpperCase()] = attr.value;\n        }\n    }\n    // Output parsed tokens\n    for (const token of tokens) {\n        if (typeof token === 'string') {\n            pushString(out, token);\n        }\n        else if (attrs[token.name]) {\n            pushString(out, token.before);\n            pushTokens(attrs[token.name], state);\n            pushString(out, token.after);\n        }\n    }\n}\n\nconst htmlTagRegex = /^<([\\w\\-:]+)[\\s>]/;\nfunction html(abbr, config) {\n    const state = createWalkState(config);\n    state.comment = createCommentState(config);\n    walk$1(abbr, element, state);\n    return state.out.value;\n}\n/**\n * Outputs `node` content to output stream of `state`\n * @param node Context node\n * @param index Index of `node` in `items`\n * @param items List of `node`’s siblings\n * @param state Current walk state\n */\nfunction element(node, index, items, state, next) {\n    const { out, config } = state;\n    const format = shouldFormat(node, index, items, state);\n    // Pick offset level for current node\n    const level = getIndent(state);\n    out.level += level;\n    format && pushNewline(out, true);\n    if (node.name) {\n        const name = tagName(node.name, config);\n        commentNodeBefore(node, state);\n        pushString(out, `<${name}`);\n        if (node.attributes) {\n            for (const attr of node.attributes) {\n                if (shouldOutputAttribute(attr)) {\n                    pushAttribute(attr, state);\n                }\n            }\n        }\n        if (node.selfClosing && !node.children.length && !node.value) {\n            pushString(out, `${selfClose(config)}>`);\n        }\n        else {\n            pushString(out, '>');\n            if (!pushSnippet(node, state, next)) {\n                if (node.value) {\n                    const innerFormat = node.value.some(hasNewline) || startsWithBlockTag(node.value, config);\n                    innerFormat && pushNewline(state.out, ++out.level);\n                    pushTokens(node.value, state);\n                    innerFormat && pushNewline(state.out, --out.level);\n                }\n                node.children.forEach(next);\n                if (!node.value && !node.children.length) {\n                    const innerFormat = config.options['output.formatLeafNode']\n                        || config.options['output.formatForce'].includes(node.name);\n                    innerFormat && pushNewline(state.out, ++out.level);\n                    pushTokens(caret, state);\n                    innerFormat && pushNewline(state.out, --out.level);\n                }\n            }\n            pushString(out, `</${name}>`);\n            commentNodeAfter(node, state);\n        }\n    }\n    else if (!pushSnippet(node, state, next) && node.value) {\n        // A text-only node (snippet)\n        pushTokens(node.value, state);\n        node.children.forEach(next);\n    }\n    if (format && index === items.length - 1 && state.parent) {\n        const offset = isSnippet(state.parent) ? 0 : 1;\n        pushNewline(out, out.level - offset);\n    }\n    out.level -= level;\n}\n/**\n * Outputs given attribute’s content into output stream\n */\nfunction pushAttribute(attr, state) {\n    const { out, config } = state;\n    if (attr.name) {\n        const name = attrName(attr.name, config);\n        const lQuote = attrQuote(attr, config, true);\n        const rQuote = attrQuote(attr, config);\n        let value = attr.value;\n        if (isBooleanAttribute(attr, config) && !value) {\n            // If attribute value is omitted and it’s a boolean value, check for\n            // `compactBoolean` option: if it’s disabled, set value to attribute name\n            // (XML style)\n            if (!config.options['output.compactBoolean']) {\n                value = [name];\n            }\n        }\n        else if (!value) {\n            value = caret;\n        }\n        pushString(out, ' ' + name);\n        if (value) {\n            pushString(out, '=' + lQuote);\n            pushTokens(value, state);\n            pushString(out, rQuote);\n        }\n        else if (config.options['output.selfClosingStyle'] !== 'html') {\n            pushString(out, '=' + lQuote + rQuote);\n        }\n    }\n}\nfunction pushSnippet(node, state, next) {\n    if (node.value && node.children.length) {\n        // We have a value and child nodes. In case if value contains fields,\n        // we should output children as a content of first field\n        const fieldIx = node.value.findIndex(isField);\n        if (fieldIx !== -1) {\n            pushTokens(node.value.slice(0, fieldIx), state);\n            const line = state.out.line;\n            let pos = fieldIx + 1;\n            node.children.forEach(next);\n            // If there was a line change, trim leading whitespace for better result\n            if (state.out.line !== line && typeof node.value[pos] === 'string') {\n                pushString(state.out, node.value[pos++].trimLeft());\n            }\n            pushTokens(node.value.slice(pos), state);\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Check if given node should be formatted in its parent context\n */\nfunction shouldFormat(node, index, items, state) {\n    const { config, parent } = state;\n    if (!config.options['output.format']) {\n        return false;\n    }\n    if (index === 0 && !parent) {\n        // Do not format very first node\n        return false;\n    }\n    // Do not format single child of snippet\n    if (parent && isSnippet(parent) && items.length === 1) {\n        return false;\n    }\n    /**\n     * Adjacent text-only/snippet nodes\n     */\n    if (isSnippet(node)) {\n        // Adjacent text-only/snippet nodes\n        const format = isSnippet(items[index - 1]) || isSnippet(items[index + 1])\n            // Has newlines: looks like wrapping code fragment\n            || node.value.some(hasNewline)\n            // Format as wrapper: contains children which will be outputted as field content\n            || (node.value.some(isField) && node.children.length);\n        if (format) {\n            return true;\n        }\n    }\n    if (isInline(node, config)) {\n        // Check if inline node is the next sibling of block-level node\n        if (index === 0) {\n            // First node in parent: format if it’s followed by a block-level element\n            for (let i = 0; i < items.length; i++) {\n                if (!isInline(items[i], config)) {\n                    return true;\n                }\n            }\n        }\n        else if (!isInline(items[index - 1], config)) {\n            // Node is right after block-level element\n            return true;\n        }\n        if (config.options['output.inlineBreak']) {\n            // check for adjacent inline elements before and after current element\n            let adjacentInline = 1;\n            let before = index;\n            let after = index;\n            while (isInlineElement(items[--before], config)) {\n                adjacentInline++;\n            }\n            while (isInlineElement(items[++after], config)) {\n                adjacentInline++;\n            }\n            if (adjacentInline >= config.options['output.inlineBreak']) {\n                return true;\n            }\n        }\n        // Edge case: inline node contains node that should receive formatting\n        for (let i = 0, il = node.children.length; i < il; i++) {\n            if (shouldFormat(node.children[i], i, node.children, state)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    return true;\n}\n/**\n * Returns indentation offset for given node\n */\nfunction getIndent(state) {\n    const { config, parent } = state;\n    if (!parent || isSnippet(parent) || (parent.name && config.options['output.formatSkip'].includes(parent.name))) {\n        return 0;\n    }\n    return 1;\n}\n/**\n * Check if given node value contains newlines\n */\nfunction hasNewline(value) {\n    return typeof value === 'string' && /\\r|\\n/.test(value);\n}\n/**\n * Check if given node value starts with block-level tag\n */\nfunction startsWithBlockTag(value, config) {\n    if (value.length && typeof value[0] === 'string') {\n        const matches = htmlTagRegex.exec(value[0]);\n        if ((matches === null || matches === void 0 ? void 0 : matches.length) && !config.options['inlineElements'].includes(matches[1].toLowerCase())) {\n            return true;\n        }\n    }\n    return false;\n}\n\nfunction indentFormat(abbr, config, options) {\n    const state = createWalkState(config);\n    state.options = options || {};\n    walk$1(abbr, element$1, state);\n    return state.out.value;\n}\n/**\n * Outputs `node` content to output stream of `state`\n * @param node Context node\n * @param index Index of `node` in `items`\n * @param items List of `node`’s siblings\n * @param state Current walk state\n */\nfunction element$1(node, index, items, state, next) {\n    const { out, options } = state;\n    const { primary, secondary } = collectAttributes(node);\n    // Pick offset level for current node\n    const level = state.parent ? 1 : 0;\n    out.level += level;\n    // Do not indent top-level elements\n    if (shouldFormat$1(node, index, items, state)) {\n        pushNewline(out, true);\n    }\n    if (node.name && (node.name !== 'div' || !primary.length)) {\n        pushString(out, (options.beforeName || '') + node.name + (options.afterName || ''));\n    }\n    pushPrimaryAttributes(primary, state);\n    pushSecondaryAttributes(secondary.filter(shouldOutputAttribute), state);\n    if (node.selfClosing && !node.value && !node.children.length) {\n        if (state.options.selfClose) {\n            pushString(out, state.options.selfClose);\n        }\n    }\n    else {\n        pushValue(node, state);\n        node.children.forEach(next);\n    }\n    out.level -= level;\n}\n/**\n * From given node, collects all attributes as `primary` (id, class) and\n * `secondary` (all the rest) lists. In most indent-based syntaxes, primary attribute\n * has special syntax\n */\nfunction collectAttributes(node) {\n    const primary = [];\n    const secondary = [];\n    if (node.attributes) {\n        for (const attr of node.attributes) {\n            if (isPrimaryAttribute(attr)) {\n                primary.push(attr);\n            }\n            else {\n                secondary.push(attr);\n            }\n        }\n    }\n    return { primary, secondary };\n}\n/**\n * Outputs given attributes as primary into output stream\n */\nfunction pushPrimaryAttributes(attrs, state) {\n    for (const attr of attrs) {\n        if (attr.value) {\n            if (attr.name === 'class') {\n                pushString(state.out, '.');\n                // All whitespace characters must be replaced with dots in class names\n                const tokens = attr.value.map(t => typeof t === 'string' ? t.replace(/\\s+/g, '.') : t);\n                pushTokens(tokens, state);\n            }\n            else {\n                // ID attribute\n                pushString(state.out, '#');\n                pushTokens(attr.value, state);\n            }\n        }\n    }\n}\n/**\n * Outputs given attributes as secondary into output stream\n */\nfunction pushSecondaryAttributes(attrs, state) {\n    if (attrs.length) {\n        const { out, config, options } = state;\n        options.beforeAttribute && pushString(out, options.beforeAttribute);\n        for (let i = 0; i < attrs.length; i++) {\n            const attr = attrs[i];\n            pushString(out, attrName(attr.name || '', config));\n            if (isBooleanAttribute(attr, config) && !attr.value) {\n                if (!config.options['output.compactBoolean'] && options.booleanValue) {\n                    pushString(out, '=' + options.booleanValue);\n                }\n            }\n            else {\n                pushString(out, '=' + attrQuote(attr, config, true));\n                pushTokens(attr.value || caret, state);\n                pushString(out, attrQuote(attr, config));\n            }\n            if (i !== attrs.length - 1 && options.glueAttribute) {\n                pushString(out, options.glueAttribute);\n            }\n        }\n        options.afterAttribute && pushString(out, options.afterAttribute);\n    }\n}\n/**\n * Outputs given node value into state output stream\n */\nfunction pushValue(node, state) {\n    // We should either output value or add caret but for leaf nodes only (no children)\n    if (!node.value && node.children.length) {\n        return;\n    }\n    const value = node.value || caret;\n    const lines = splitByLines$1(value);\n    const { out, options } = state;\n    if (lines.length === 1) {\n        if (node.name || node.attributes) {\n            push(out, ' ');\n        }\n        pushTokens(value, state);\n    }\n    else {\n        // We should format multi-line value with terminating `|` character\n        // and same line length\n        const lineLengths = [];\n        let maxLength = 0;\n        // Calculate lengths of all lines and max line length\n        for (const line of lines) {\n            const len = valueLength(line);\n            lineLengths.push(len);\n            if (len > maxLength) {\n                maxLength = len;\n            }\n        }\n        // Output each line, padded to max length\n        out.level++;\n        for (let i = 0; i < lines.length; i++) {\n            pushNewline(out, true);\n            options.beforeTextLine && push(out, options.beforeTextLine);\n            pushTokens(lines[i], state);\n            if (options.afterTextLine) {\n                push(out, ' '.repeat(maxLength - lineLengths[i]));\n                push(out, options.afterTextLine);\n            }\n        }\n        out.level--;\n    }\n}\nfunction isPrimaryAttribute(attr) {\n    return attr.name === 'class' || attr.name === 'id';\n}\n/**\n * Calculates string length from given tokens\n */\nfunction valueLength(tokens) {\n    let len = 0;\n    for (const token of tokens) {\n        len += typeof token === 'string' ? token.length : token.name.length;\n    }\n    return len;\n}\nfunction shouldFormat$1(node, index, items, state) {\n    // Do not format first top-level element or snippets\n    if (!state.parent && index === 0) {\n        return false;\n    }\n    return !isSnippet(node);\n}\n\nfunction haml(abbr, config) {\n    return indentFormat(abbr, config, {\n        beforeName: '%',\n        beforeAttribute: '(',\n        afterAttribute: ')',\n        glueAttribute: ' ',\n        afterTextLine: ' |',\n        booleanValue: 'true',\n        selfClose: '/'\n    });\n}\n\nfunction slim(abbr, config) {\n    return indentFormat(abbr, config, {\n        beforeAttribute: ' ',\n        glueAttribute: ' ',\n        beforeTextLine: '| ',\n        selfClose: '/'\n    });\n}\n\nfunction pug(abbr, config) {\n    return indentFormat(abbr, config, {\n        beforeAttribute: '(',\n        afterAttribute: ')',\n        glueAttribute: ', ',\n        beforeTextLine: '| ',\n        selfClose: config.options['output.selfClosingStyle'] === 'xml' ? '/' : ''\n    });\n}\n\nconst formatters = { html, haml, slim, pug };\n/**\n * Parses given Emmet abbreviation into a final abbreviation tree with all\n * required transformations applied\n */\nfunction parse(abbr, config) {\n    let oldTextValue;\n    if (typeof abbr === 'string') {\n        let parseOpt = config;\n        if (config.options['jsx.enabled']) {\n            parseOpt = Object.assign(Object.assign({}, parseOpt), { jsx: true });\n        }\n        if (config.options['markup.href']) {\n            parseOpt = Object.assign(Object.assign({}, parseOpt), { href: true });\n        }\n        abbr = parse$2(abbr, parseOpt);\n        // remove text field before snippets(abbr, config) call\n        // as abbreviation(abbr, parseOpt) already handled it\n        oldTextValue = config.text;\n        config.text = undefined;\n    }\n    // Run abbreviation resolve in two passes:\n    // 1. Map each node to snippets, which are abbreviations as well. A single snippet\n    // may produce multiple nodes\n    // 2. Transform every resolved node\n    abbr = resolveSnippets(abbr, config);\n    walk(abbr, transform, config);\n    config.text = oldTextValue !== null && oldTextValue !== void 0 ? oldTextValue : config.text;\n    return abbr;\n}\n/**\n * Converts given abbreviation to string according to provided `config`\n */\nfunction stringify(abbr, config) {\n    const formatter = formatters[config.syntax] || html;\n    return formatter(abbr, config);\n}\n/**\n * Modifies given node and prepares it for output\n */\nfunction transform(node, ancestors, config) {\n    implicitTag(node, ancestors, config);\n    mergeAttributes(node, config);\n    lorem(node, ancestors, config);\n    if (config.syntax === 'xsl') {\n        xsl(node);\n    }\n    if (config.options['jsx.enabled']) {\n        jsx(node);\n    }\n    if (config.options['bem.enabled']) {\n        bem(node, ancestors, config);\n    }\n}\n\nconst reProperty = /^([a-z-]+)(?:\\s*:\\s*([^\\n\\r;]+?);*)?$/;\nconst opt = { value: true };\n/**\n * Creates structure for holding resolved CSS snippet\n */\nfunction createSnippet(key, value) {\n    // A snippet could be a raw text snippet (e.g. arbitrary text string) or a\n    // CSS property with possible values separated by `|`.\n    // In latter case, we have to parse snippet as CSS abbreviation\n    const m = value.match(reProperty);\n    if (m) {\n        const keywords = {};\n        const parsed = m[2] ? m[2].split('|').map(parseValue) : [];\n        for (const item of parsed) {\n            for (const cssVal of item) {\n                collectKeywords(cssVal, keywords);\n            }\n        }\n        return {\n            type: \"Property\" /* Property */,\n            key,\n            property: m[1],\n            value: parsed,\n            keywords,\n            dependencies: []\n        };\n    }\n    return { type: \"Raw\" /* Raw */, key, value };\n}\n/**\n * Nests more specific CSS properties into shorthand ones, e.g.\n * `background-position-x` -> `background-position` -> `background`\n */\nfunction nest(snippets) {\n    snippets = snippets.slice().sort(snippetsSort);\n    const stack = [];\n    let prev;\n    // For sorted list of CSS properties, create dependency graph where each\n    // shorthand property contains its more specific one, e.g.\n    // background -> background-position -> background-position-x\n    for (const cur of snippets.filter(isProperty)) {\n        // Check if current property belongs to one from parent stack.\n        // Since `snippets` array is sorted, items are perfectly aligned\n        // from shorthands to more specific variants\n        while (stack.length) {\n            prev = stack[stack.length - 1];\n            if (cur.property.startsWith(prev.property)\n                && cur.property.charCodeAt(prev.property.length) === 45 /* - */) {\n                prev.dependencies.push(cur);\n                stack.push(cur);\n                break;\n            }\n            stack.pop();\n        }\n        if (!stack.length) {\n            stack.push(cur);\n        }\n    }\n    return snippets;\n}\n/**\n * A sorting function for array of snippets\n */\nfunction snippetsSort(a, b) {\n    if (a.key === b.key) {\n        return 0;\n    }\n    return a.key < b.key ? -1 : 1;\n}\nfunction parseValue(value) {\n    return parse$3(value.trim(), opt)[0].value;\n}\nfunction isProperty(snippet) {\n    return snippet.type === \"Property\" /* Property */;\n}\nfunction collectKeywords(cssVal, dest) {\n    for (const v of cssVal.value) {\n        if (v.type === 'Literal') {\n            dest[v.value] = v;\n        }\n        else if (v.type === 'FunctionCall') {\n            dest[v.name] = v;\n        }\n        else if (v.type === 'Field') {\n            // Create literal from field, if available\n            const value = v.name.trim();\n            if (value) {\n                dest[value] = { type: 'Literal', value };\n            }\n        }\n    }\n}\n\n/**\n * Calculates how close `str1` matches `str2` using fuzzy match.\n * How matching works:\n * – first characters of both `str1` and `str2` *must* match\n * – `str1` length larger than `str2` length is allowed only when `unmatched` is true\n * – ideal match is when `str1` equals to `str2` (score: 1)\n * – next best match is `str2` starts with `str1` (score: 1 × percent of matched characters)\n * – other scores depend on how close characters of `str1` to the beginning of `str2`\n * @param partialMatch Allow length `str1` to be greater than `str2` length\n */\nfunction scoreMatch(str1, str2, partialMatch = false) {\n    str1 = str1.toLowerCase();\n    str2 = str2.toLowerCase();\n    if (str1 === str2) {\n        return 1;\n    }\n    // Both strings MUST start with the same character\n    if (!str1 || !str2 || str1.charCodeAt(0) !== str2.charCodeAt(0)) {\n        return 0;\n    }\n    const str1Len = str1.length;\n    const str2Len = str2.length;\n    if (!partialMatch && str1Len > str2Len) {\n        return 0;\n    }\n    // Characters from `str1` which are closer to the beginning of a `str2` should\n    // have higher score.\n    // For example, if `str2` is `abcde`, it’s max score is:\n    // 5 + 4 + 3 + 2 + 1 = 15 (sum of character positions in reverse order)\n    // Matching `abd` against `abcde` should produce:\n    // 5 + 4 + 2 = 11\n    // Acronym bonus for match right after `-`. Matching `abd` against `abc-de`\n    // should produce:\n    // 6 + 5 + 4 (use `d` position in `abd`, not in abc-de`)\n    const minLength = Math.min(str1Len, str2Len);\n    const maxLength = Math.max(str1Len, str2Len);\n    let i = 1;\n    let j = 1;\n    let score = maxLength;\n    let ch1 = 0;\n    let ch2 = 0;\n    let found = false;\n    let acronym = false;\n    while (i < str1Len) {\n        ch1 = str1.charCodeAt(i);\n        found = false;\n        acronym = false;\n        while (j < str2Len) {\n            ch2 = str2.charCodeAt(j);\n            if (ch1 === ch2) {\n                found = true;\n                score += maxLength - (acronym ? i : j);\n                break;\n            }\n            // add acronym bonus for exactly next match after unmatched `-`\n            acronym = ch2 === 45 /* - */;\n            j++;\n        }\n        if (!found) {\n            if (!partialMatch) {\n                return 0;\n            }\n            break;\n        }\n        i++;\n    }\n    const matchRatio = i / maxLength;\n    const delta = maxLength - minLength;\n    const maxScore = sum(maxLength) - sum(delta);\n    return (score * matchRatio) / maxScore;\n}\n/**\n * Calculates sum of first `n` numbers, e.g. 1+2+3+...n\n */\nfunction sum(n) {\n    return n * (n + 1) / 2;\n}\n\nfunction color(token, shortHex) {\n    if (!token.r && !token.g && !token.b && !token.a) {\n        return 'transparent';\n    }\n    else if (token.a === 1) {\n        return asHex(token, shortHex);\n    }\n    return asRGB(token);\n}\n/**\n * Output given color as hex value\n * @param short Produce short value (e.g. #fff instead of #ffffff), if possible\n */\nfunction asHex(token, short) {\n    const fn = (short && isShortHex(token.r) && isShortHex(token.g) && isShortHex(token.b))\n        ? toShortHex : toHex;\n    return '#' + fn(token.r) + fn(token.g) + fn(token.b);\n}\n/**\n * Output current color as `rgba?(...)` CSS color\n */\nfunction asRGB(token) {\n    const values = [token.r, token.g, token.b];\n    if (token.a !== 1) {\n        values.push(frac(token.a, 8));\n    }\n    return `${values.length === 3 ? 'rgb' : 'rgba'}(${values.join(', ')})`;\n}\nfunction frac(num, digits = 4) {\n    return num.toFixed(digits).replace(/\\.?0+$/, '');\n}\nfunction isShortHex(hex) {\n    return !(hex % 17);\n}\nfunction toShortHex(num) {\n    return (num >> 4).toString(16);\n}\nfunction toHex(num) {\n    return pad(num.toString(16), 2);\n}\nfunction pad(value, len) {\n    while (value.length < len) {\n        value = '0' + value;\n    }\n    return value;\n}\n\nfunction css(abbr, config) {\n    var _a;\n    const out = createOutputStream(config.options);\n    const format = config.options['output.format'];\n    if (((_a = config.context) === null || _a === void 0 ? void 0 : _a.name) === \"@@section\" /* Section */) {\n        // For section context, filter out unmatched snippets\n        abbr = abbr.filter(node => node.snippet);\n    }\n    for (let i = 0; i < abbr.length; i++) {\n        if (format && i !== 0) {\n            pushNewline(out, true);\n        }\n        property(abbr[i], out, config);\n    }\n    return out.value;\n}\n/**\n * Outputs given abbreviation node into output stream\n */\nfunction property(node, out, config) {\n    const isJSON = config.options['stylesheet.json'];\n    if (node.name) {\n        // It’s a CSS property\n        const name = isJSON ? toCamelCase(node.name) : node.name;\n        pushString(out, name + config.options['stylesheet.between']);\n        if (node.value.length) {\n            propertyValue(node, out, config);\n        }\n        else {\n            pushField(out, 0, '');\n        }\n        if (isJSON) {\n            // For CSS-in-JS, always finalize property with comma\n            // NB: seems like `important` is not available in CSS-in-JS syntaxes\n            push(out, ',');\n        }\n        else {\n            outputImportant(node, out, true);\n            push(out, config.options['stylesheet.after']);\n        }\n    }\n    else {\n        // It’s a regular snippet, output plain tokens without any additional formatting\n        for (const cssVal of node.value) {\n            for (const v of cssVal.value) {\n                outputToken(v, out, config);\n            }\n        }\n        outputImportant(node, out, node.value.length > 0);\n    }\n}\nfunction propertyValue(node, out, config) {\n    const isJSON = config.options['stylesheet.json'];\n    const num = isJSON ? getSingleNumeric(node) : null;\n    if (num && (!num.unit || num.unit === 'px')) {\n        // For CSS-in-JS, if property contains single numeric value, output it\n        // as JS number\n        push(out, String(num.value));\n    }\n    else {\n        const quote = getQuote(config);\n        isJSON && push(out, quote);\n        for (let i = 0; i < node.value.length; i++) {\n            if (i !== 0) {\n                push(out, ', ');\n            }\n            outputValue(node.value[i], out, config);\n        }\n        isJSON && push(out, quote);\n    }\n}\nfunction outputImportant(node, out, separator) {\n    if (node.important) {\n        if (separator) {\n            push(out, ' ');\n        }\n        push(out, '!important');\n    }\n}\nfunction outputValue(value, out, config) {\n    for (let i = 0, prevEnd = -1; i < value.value.length; i++) {\n        const token = value.value[i];\n        // Handle edge case: a field is written close to previous token like this: `foo${bar}`.\n        // We should not add delimiter here\n        if (i !== 0 && (token.type !== 'Field' || token.start !== prevEnd)) {\n            push(out, ' ');\n        }\n        outputToken(token, out, config);\n        prevEnd = token['end'];\n    }\n}\nfunction outputToken(token, out, config) {\n    if (token.type === 'ColorValue') {\n        push(out, color(token, config.options['stylesheet.shortHex']));\n    }\n    else if (token.type === 'Literal') {\n        pushString(out, token.value);\n    }\n    else if (token.type === 'NumberValue') {\n        pushString(out, frac(token.value, 4) + token.unit);\n    }\n    else if (token.type === 'StringValue') {\n        const quote = token.quote === 'double' ? '\"' : '\\'';\n        pushString(out, quote + token.value + quote);\n    }\n    else if (token.type === 'Field') {\n        pushField(out, token.index, token.name);\n    }\n    else if (token.type === 'FunctionCall') {\n        push(out, token.name + '(');\n        for (let i = 0; i < token.arguments.length; i++) {\n            if (i) {\n                push(out, ', ');\n            }\n            outputValue(token.arguments[i], out, config);\n        }\n        push(out, ')');\n    }\n}\n/**\n * If value of given property is a single numeric value, returns this token\n */\nfunction getSingleNumeric(node) {\n    if (node.value.length === 1) {\n        const cssVal = node.value[0];\n        if (cssVal.value.length === 1 && cssVal.value[0].type === 'NumberValue') {\n            return cssVal.value[0];\n        }\n    }\n}\n/**\n * Converts kebab-case string to camelCase\n */\nfunction toCamelCase(str) {\n    return str.replace(/\\-(\\w)/g, (_, letter) => letter.toUpperCase());\n}\nfunction getQuote(config) {\n    return config.options['stylesheet.jsonDoubleQuotes'] ? '\"' : '\\'';\n}\n\nconst gradientName = 'lg';\n/**\n * Parses given Emmet abbreviation into a final abbreviation tree with all\n * required transformations applied\n */\nfunction parse$1(abbr, config) {\n    var _a;\n    const snippets = ((_a = config.cache) === null || _a === void 0 ? void 0 : _a.stylesheetSnippets) || convertSnippets(config.snippets);\n    if (config.cache) {\n        config.cache.stylesheetSnippets = snippets;\n    }\n    if (typeof abbr === 'string') {\n        abbr = parse$3(abbr, { value: isValueScope(config) });\n    }\n    const filteredSnippets = getSnippetsForScope(snippets, config);\n    for (const node of abbr) {\n        resolveNode(node, filteredSnippets, config);\n    }\n    return abbr;\n}\n/**\n * Converts given raw snippets into internal snippets representation\n */\nfunction convertSnippets(snippets) {\n    const result = [];\n    for (const key of Object.keys(snippets)) {\n        result.push(createSnippet(key, snippets[key]));\n    }\n    return nest(result);\n}\n/**\n * Resolves given node: finds matched CSS snippets using fuzzy match and resolves\n * keyword aliases from node value\n */\nfunction resolveNode(node, snippets, config) {\n    if (!resolveGradient(node, config)) {\n        const score = config.options['stylesheet.fuzzySearchMinScore'];\n        if (isValueScope(config)) {\n            // Resolve as value of given CSS property\n            const propName = config.context.name;\n            const snippet = snippets.find(s => s.type === \"Property\" /* Property */ && s.property === propName);\n            resolveValueKeywords(node, config, snippet, score);\n            node.snippet = snippet;\n        }\n        else if (node.name) {\n            const snippet = findBestMatch(node.name, snippets, score, true);\n            node.snippet = snippet;\n            if (snippet) {\n                if (snippet.type === \"Property\" /* Property */) {\n                    resolveAsProperty(node, snippet, config);\n                }\n                else {\n                    resolveAsSnippet(node, snippet);\n                }\n            }\n        }\n    }\n    if (node.name || config.context) {\n        // Resolve numeric values for CSS properties only\n        resolveNumericValue(node, config);\n    }\n    return node;\n}\n/**\n * Resolves CSS gradient shortcut from given property, if possible\n */\nfunction resolveGradient(node, config) {\n    let gradientFn = null;\n    const cssVal = node.value.length === 1 ? node.value[0] : null;\n    if (cssVal && cssVal.value.length === 1) {\n        const v = cssVal.value[0];\n        if (v.type === 'FunctionCall' && v.name === gradientName) {\n            gradientFn = v;\n        }\n    }\n    if (gradientFn || node.name === gradientName) {\n        if (!gradientFn) {\n            gradientFn = {\n                type: 'FunctionCall',\n                name: 'linear-gradient',\n                arguments: [cssValue(field(0, ''))]\n            };\n        }\n        else {\n            gradientFn = Object.assign(Object.assign({}, gradientFn), { name: 'linear-gradient' });\n        }\n        if (!config.context) {\n            node.name = 'background-image';\n        }\n        node.value = [cssValue(gradientFn)];\n        return true;\n    }\n    return false;\n}\n/**\n * Resolves given parsed abbreviation node as CSS property\n */\nfunction resolveAsProperty(node, snippet, config) {\n    const abbr = node.name;\n    // Check for unmatched part of abbreviation\n    // For example, in `dib` abbreviation the matched part is `d` and `ib` should\n    // be considered as inline value. If unmatched fragment exists, we should check\n    // if it matches actual value of snippet. If either explicit value is specified\n    // or unmatched fragment did not resolve to to a keyword, we should consider\n    // matched snippet as invalid\n    const inlineValue = getUnmatchedPart(abbr, snippet.key);\n    if (inlineValue) {\n        if (node.value.length) {\n            // Already have value: unmatched part indicates matched snippet is invalid\n            return node;\n        }\n        const kw = resolveKeyword(inlineValue, config, snippet);\n        if (!kw) {\n            return node;\n        }\n        node.value.push(cssValue(kw));\n    }\n    node.name = snippet.property;\n    if (node.value.length) {\n        // Replace keyword alias from current abbreviation node with matched keyword\n        resolveValueKeywords(node, config, snippet);\n    }\n    else if (snippet.value.length) {\n        const defaultValue = snippet.value[0];\n        // https://github.com/emmetio/emmet/issues/558\n        // We should auto-select inserted value only if there’s multiple value\n        // choice\n        node.value = snippet.value.length === 1 || defaultValue.some(hasField)\n            ? defaultValue\n            : defaultValue.map(n => wrapWithField(n, config));\n    }\n    return node;\n}\nfunction resolveValueKeywords(node, config, snippet, minScore) {\n    for (const cssVal of node.value) {\n        const value = [];\n        for (const token of cssVal.value) {\n            if (token.type === 'Literal') {\n                value.push(resolveKeyword(token.value, config, snippet, minScore) || token);\n            }\n            else if (token.type === 'FunctionCall') {\n                // For function calls, we should find matching function call\n                // and merge arguments\n                const match = resolveKeyword(token.name, config, snippet, minScore);\n                if (match && match.type === 'FunctionCall') {\n                    value.push(Object.assign(Object.assign({}, match), { arguments: token.arguments.concat(match.arguments.slice(token.arguments.length)) }));\n                }\n                else {\n                    value.push(token);\n                }\n            }\n            else {\n                value.push(token);\n            }\n        }\n        cssVal.value = value;\n    }\n}\n/**\n * Resolves given parsed abbreviation node as a snippet: a plain code chunk\n */\nfunction resolveAsSnippet(node, snippet) {\n    // When resolving snippets, we have to do the following:\n    // 1. Replace field placeholders with actual field tokens.\n    // 2. If input values given, put them instead of fields\n    let offset = 0;\n    let m;\n    const reField = /\\$\\{(\\d+)(:[^}]+)?\\}/g;\n    const inputValue = node.value[0];\n    const outputValue = [];\n    while (m = reField.exec(snippet.value)) {\n        if (offset !== m.index) {\n            outputValue.push(literal(snippet.value.slice(offset, m.index)));\n        }\n        offset = m.index + m[0].length;\n        if (inputValue && inputValue.value.length) {\n            outputValue.push(inputValue.value.shift());\n        }\n        else {\n            outputValue.push(field(Number(m[1]), m[2] ? m[2].slice(1) : ''));\n        }\n    }\n    const tail = snippet.value.slice(offset);\n    if (tail) {\n        outputValue.push(literal(tail));\n    }\n    node.name = void 0;\n    node.value = [cssValue(...outputValue)];\n    return node;\n}\n/**\n * Finds best matching item from `items` array\n * @param abbr  Abbreviation to match\n * @param items List of items for match\n * @param minScore The minimum score the best matched item should have to be a valid match.\n */\nfunction findBestMatch(abbr, items, minScore = 0, partialMatch = false) {\n    let matchedItem = null;\n    let maxScore = 0;\n    for (const item of items) {\n        const score = scoreMatch(abbr, getScoringPart(item), partialMatch);\n        if (score === 1) {\n            // direct hit, no need to look further\n            return item;\n        }\n        if (score && score >= maxScore) {\n            maxScore = score;\n            matchedItem = item;\n        }\n    }\n    return maxScore >= minScore ? matchedItem : null;\n}\nfunction getScoringPart(item) {\n    return typeof item === 'string' ? item : item.key;\n}\n/**\n * Returns a part of `abbr` that wasn’t directly matched against `str`.\n * For example, if abbreviation `poas` is matched against `position`,\n * the unmatched part will be `as` since `a` wasn’t found in string stream\n */\nfunction getUnmatchedPart(abbr, str) {\n    for (let i = 0, lastPos = 0; i < abbr.length; i++) {\n        lastPos = str.indexOf(abbr[i], lastPos);\n        if (lastPos === -1) {\n            return abbr.slice(i);\n        }\n        lastPos++;\n    }\n    return '';\n}\n/**\n * Resolves given keyword shorthand into matched snippet keyword or global keyword,\n * if possible\n */\nfunction resolveKeyword(kw, config, snippet, minScore) {\n    let ref;\n    if (snippet) {\n        if (ref = findBestMatch(kw, Object.keys(snippet.keywords), minScore)) {\n            return snippet.keywords[ref];\n        }\n        for (const dep of snippet.dependencies) {\n            if (ref = findBestMatch(kw, Object.keys(dep.keywords), minScore)) {\n                return dep.keywords[ref];\n            }\n        }\n    }\n    if (ref = findBestMatch(kw, config.options['stylesheet.keywords'], minScore)) {\n        return literal(ref);\n    }\n    return null;\n}\n/**\n * Resolves numeric values in given abbreviation node\n */\nfunction resolveNumericValue(node, config) {\n    const aliases = config.options['stylesheet.unitAliases'];\n    const unitless = config.options['stylesheet.unitless'];\n    for (const v of node.value) {\n        for (const t of v.value) {\n            if (t.type === 'NumberValue') {\n                if (t.unit) {\n                    t.unit = aliases[t.unit] || t.unit;\n                }\n                else if (t.value !== 0 && !unitless.includes(node.name)) {\n                    t.unit = t.rawValue.includes('.')\n                        ? config.options['stylesheet.floatUnit']\n                        : config.options['stylesheet.intUnit'];\n                }\n            }\n        }\n    }\n}\n/**\n * Constructs CSS value token\n */\nfunction cssValue(...args) {\n    return {\n        type: 'CSSValue',\n        value: args\n    };\n}\n/**\n * Constructs literal token\n */\nfunction literal(value) {\n    return { type: 'Literal', value };\n}\n/**\n * Constructs field token\n */\nfunction field(index, name) {\n    return { type: 'Field', index, name };\n}\n/**\n * Check if given value contains fields\n */\nfunction hasField(value) {\n    for (const v of value.value) {\n        if (v.type === 'Field' || (v.type === 'FunctionCall' && v.arguments.some(hasField))) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Wraps tokens of given abbreviation with fields\n */\nfunction wrapWithField(node, config, state = { index: 1 }) {\n    let value = [];\n    for (const v of node.value) {\n        switch (v.type) {\n            case 'ColorValue':\n                value.push(field(state.index++, color(v, config.options['stylesheet.shortHex'])));\n                break;\n            case 'Literal':\n                value.push(field(state.index++, v.value));\n                break;\n            case 'NumberValue':\n                value.push(field(state.index++, `${v.value}${v.unit}`));\n                break;\n            case 'StringValue':\n                const q = v.quote === 'single' ? '\\'' : '\"';\n                value.push(field(state.index++, q + v.value + q));\n                break;\n            case 'FunctionCall':\n                value.push(field(state.index++, v.name), literal('('));\n                for (let i = 0, il = v.arguments.length; i < il; i++) {\n                    value = value.concat(wrapWithField(v.arguments[i], config, state).value);\n                    if (i !== il - 1) {\n                        value.push(literal(', '));\n                    }\n                }\n                value.push(literal(')'));\n                break;\n            default:\n                value.push(v);\n        }\n    }\n    return Object.assign(Object.assign({}, node), { value });\n}\n/**\n * Check if abbreviation should be expanded in CSS value context\n */\nfunction isValueScope(config) {\n    if (config.context) {\n        return config.context.name === \"@@value\" /* Value */ || !config.context.name.startsWith('@@');\n    }\n    return false;\n}\n/**\n * Returns snippets for given scope\n */\nfunction getSnippetsForScope(snippets, config) {\n    if (config.context) {\n        if (config.context.name === \"@@section\" /* Section */) {\n            return snippets.filter(s => s.type === \"Raw\" /* Raw */);\n        }\n        if (config.context.name === \"@@property\" /* Property */) {\n            return snippets.filter(s => s.type === \"Property\" /* Property */);\n        }\n    }\n    return snippets;\n}\n\nvar markupSnippets = {\n\t\"a\": \"a[href]\",\n\t\"a:blank\": \"a[href='http://${0}' target='_blank' rel='noopener noreferrer']\",\n\t\"a:link\": \"a[href='http://${0}']\",\n\t\"a:mail\": \"a[href='mailto:${0}']\",\n\t\"a:tel\": \"a[href='tel:+${0}']\",\n\t\"abbr\": \"abbr[title]\",\n\t\"acr|acronym\": \"acronym[title]\",\n\t\"base\": \"base[href]/\",\n\t\"basefont\": \"basefont/\",\n\t\"br\": \"br/\",\n\t\"frame\": \"frame/\",\n\t\"hr\": \"hr/\",\n\t\"bdo\": \"bdo[dir]\",\n\t\"bdo:r\": \"bdo[dir=rtl]\",\n\t\"bdo:l\": \"bdo[dir=ltr]\",\n\t\"col\": \"col/\",\n\t\"link\": \"link[rel=stylesheet href]/\",\n\t\"link:css\": \"link[href='${1:style}.css']\",\n\t\"link:print\": \"link[href='${1:print}.css' media=print]\",\n\t\"link:favicon\": \"link[rel='shortcut icon' type=image/x-icon href='${1:favicon.ico}']\",\n\t\"link:mf|link:manifest\": \"link[rel='manifest' href='${1:manifest.json}']\",\n\t\"link:touch\": \"link[rel=apple-touch-icon href='${1:favicon.png}']\",\n\t\"link:rss\": \"link[rel=alternate type=application/rss+xml title=RSS href='${1:rss.xml}']\",\n\t\"link:atom\": \"link[rel=alternate type=application/atom+xml title=Atom href='${1:atom.xml}']\",\n\t\"link:im|link:import\": \"link[rel=import href='${1:component}.html']\",\n\t\"meta\": \"meta/\",\n\t\"meta:utf\": \"meta[http-equiv=Content-Type content='text/html;charset=UTF-8']\",\n\t\"meta:vp\": \"meta[name=viewport content='width=${1:device-width}, initial-scale=${2:1.0}']\",\n\t\"meta:compat\": \"meta[http-equiv=X-UA-Compatible content='${1:IE=7}']\",\n\t\"meta:edge\": \"meta:compat[content='${1:ie=edge}']\",\n\t\"meta:redirect\": \"meta[http-equiv=refresh content='0; url=${1:http://example.com}']\",\n\t\"meta:kw\": \"meta[name=keywords content]\",\n\t\"meta:desc\": \"meta[name=description content]\",\n\t\"style\": \"style\",\n\t\"script\": \"script\",\n\t\"script:src\": \"script[src]\",\n\t\"img\": \"img[src alt]/\",\n\t\"img:s|img:srcset\": \"img[srcset src alt]\",\n\t\"img:z|img:sizes\": \"img[sizes srcset src alt]\",\n\t\"picture\": \"picture\",\n\t\"src|source\": \"source/\",\n\t\"src:sc|source:src\": \"source[src type]\",\n\t\"src:s|source:srcset\": \"source[srcset]\",\n\t\"src:t|source:type\": \"source[srcset type='${1:image/}']\",\n\t\"src:z|source:sizes\": \"source[sizes srcset]\",\n\t\"src:m|source:media\": \"source[media='(${1:min-width: })' srcset]\",\n\t\"src:mt|source:media:type\": \"source:media[type='${2:image/}']\",\n\t\"src:mz|source:media:sizes\": \"source:media[sizes srcset]\",\n\t\"src:zt|source:sizes:type\": \"source[sizes srcset type='${1:image/}']\",\n\t\"iframe\": \"iframe[src frameborder=0]\",\n\t\"embed\": \"embed[src type]/\",\n\t\"object\": \"object[data type]\",\n\t\"param\": \"param[name value]/\",\n\t\"map\": \"map[name]\",\n\t\"area\": \"area[shape coords href alt]/\",\n\t\"area:d\": \"area[shape=default]\",\n\t\"area:c\": \"area[shape=circle]\",\n\t\"area:r\": \"area[shape=rect]\",\n\t\"area:p\": \"area[shape=poly]\",\n\t\"form\": \"form[action]\",\n\t\"form:get\": \"form[method=get]\",\n\t\"form:post\": \"form[method=post]\",\n\t\"label\": \"label[for]\",\n\t\"input\": \"input[type=${1:text}]/\",\n\t\"inp\": \"input[name=${1} id=${1}]\",\n\t\"input:h|input:hidden\": \"input[type=hidden name]\",\n\t\"input:t|input:text\": \"inp[type=text]\",\n\t\"input:search\": \"inp[type=search]\",\n\t\"input:email\": \"inp[type=email]\",\n\t\"input:url\": \"inp[type=url]\",\n\t\"input:p|input:password\": \"inp[type=password]\",\n\t\"input:datetime\": \"inp[type=datetime]\",\n\t\"input:date\": \"inp[type=date]\",\n\t\"input:datetime-local\": \"inp[type=datetime-local]\",\n\t\"input:month\": \"inp[type=month]\",\n\t\"input:week\": \"inp[type=week]\",\n\t\"input:time\": \"inp[type=time]\",\n\t\"input:tel\": \"inp[type=tel]\",\n\t\"input:number\": \"inp[type=number]\",\n\t\"input:color\": \"inp[type=color]\",\n\t\"input:c|input:checkbox\": \"inp[type=checkbox]\",\n\t\"input:r|input:radio\": \"inp[type=radio]\",\n\t\"input:range\": \"inp[type=range]\",\n\t\"input:f|input:file\": \"inp[type=file]\",\n\t\"input:s|input:submit\": \"input[type=submit value]\",\n\t\"input:i|input:image\": \"input[type=image src alt]\",\n\t\"input:b|input:btn|input:button\": \"input[type=button value]\",\n\t\"input:reset\": \"input:button[type=reset]\",\n\t\"isindex\": \"isindex/\",\n\t\"select\": \"select[name=${1} id=${1}]\",\n\t\"select:d|select:disabled\": \"select[disabled.]\",\n\t\"opt|option\": \"option[value]\",\n\t\"textarea\": \"textarea[name=${1} id=${1} cols=${2:30} rows=${3:10}]\",\n\t\"marquee\": \"marquee[behavior direction]\",\n\t\"menu:c|menu:context\": \"menu[type=context]\",\n\t\"menu:t|menu:toolbar\": \"menu[type=toolbar]\",\n\t\"video\": \"video[src]\",\n\t\"audio\": \"audio[src]\",\n\t\"html:xml\": \"html[xmlns=http://www.w3.org/1999/xhtml]\",\n\t\"keygen\": \"keygen/\",\n\t\"command\": \"command/\",\n\t\"btn:s|button:s|button:submit\" : \"button[type=submit]\",\n\t\"btn:r|button:r|button:reset\" : \"button[type=reset]\",\n\t\"btn:d|button:d|button:disabled\" : \"button[disabled.]\",\n\t\"fst:d|fset:d|fieldset:d|fieldset:disabled\" : \"fieldset[disabled.]\",\n\n\t\"bq\": \"blockquote\",\n\t\"fig\": \"figure\",\n\t\"figc\": \"figcaption\",\n\t\"pic\": \"picture\",\n\t\"ifr\": \"iframe\",\n\t\"emb\": \"embed\",\n\t\"obj\": \"object\",\n\t\"cap\": \"caption\",\n\t\"colg\": \"colgroup\",\n\t\"fst\": \"fieldset\",\n\t\"btn\": \"button\",\n\t\"optg\": \"optgroup\",\n\t\"tarea\": \"textarea\",\n\t\"leg\": \"legend\",\n\t\"sect\": \"section\",\n\t\"art\": \"article\",\n\t\"hdr\": \"header\",\n\t\"ftr\": \"footer\",\n\t\"adr\": \"address\",\n\t\"dlg\": \"dialog\",\n\t\"str\": \"strong\",\n\t\"prog\": \"progress\",\n\t\"mn\": \"main\",\n\t\"tem\": \"template\",\n\t\"fset\": \"fieldset\",\n\t\"datag\": \"datagrid\",\n\t\"datal\": \"datalist\",\n\t\"kg\": \"keygen\",\n\t\"out\": \"output\",\n\t\"det\": \"details\",\n\t\"sum\": \"summary\",\n\t\"cmd\": \"command\",\n\n\t\"ri:d|ri:dpr\": \"img:s\",\n\t\"ri:v|ri:viewport\": \"img:z\",\n\t\"ri:a|ri:art\": \"pic>src:m+img\",\n\t\"ri:t|ri:type\": \"pic>src:t+img\",\n\n\t\"!!!\": \"{<!DOCTYPE html>}\",\n\t\"doc\": \"html[lang=${lang}]>(head>meta[charset=${charset}]+meta[http-equiv='X-UA-Compatible'][content='IE=edge']+meta:vp+title{${1:Document}})+body\",\n\t\"!|html:5\": \"!!!+doc\",\n\n\t\"c\": \"{<!-- ${0} -->}\",\n\t\"cc:ie\": \"{<!--[if IE]>${0}<![endif]-->}\",\n\t\"cc:noie\": \"{<!--[if !IE]><!-->${0}<!--<![endif]-->}\"\n};\n\nvar stylesheetSnippets = {\n\t\"@f\": \"@font-face {\\n\\tfont-family: ${1};\\n\\tsrc: url(${1});\\n}\",\n\t\"@ff\": \"@font-face {\\n\\tfont-family: '${1:FontName}';\\n\\tsrc: url('${2:FileName}.eot');\\n\\tsrc: url('${2:FileName}.eot?#iefix') format('embedded-opentype'),\\n\\t\\t url('${2:FileName}.woff') format('woff'),\\n\\t\\t url('${2:FileName}.ttf') format('truetype'),\\n\\t\\t url('${2:FileName}.svg#${1:FontName}') format('svg');\\n\\tfont-style: ${3:normal};\\n\\tfont-weight: ${4:normal};\\n}\",\n\t\"@i|@import\": \"@import url(${0});\",\n\t\"@kf\": \"@keyframes ${1:identifier} {\\n\\t${2}\\n}\",\n\t\"@m|@media\": \"@media ${1:screen} {\\n\\t${0}\\n}\",\n\t\"ac\": \"align-content:start|end|flex-start|flex-end|center|space-between|space-around|stretch|space-evenly\",\n\t\"ai\": \"align-items:start|end|flex-start|flex-end|center|baseline|stretch\",\n\t\"anim\": \"animation:${1:name} ${2:duration} ${3:timing-function} ${4:delay} ${5:iteration-count} ${6:direction} ${7:fill-mode}\",\n\t\"animdel\": \"animation-delay:time\",\n\t\"animdir\": \"animation-direction:normal|reverse|alternate|alternate-reverse\",\n\t\"animdur\": \"animation-duration:${1:0}s\",\n\t\"animfm\": \"animation-fill-mode:both|forwards|backwards\",\n\t\"animic\": \"animation-iteration-count:1|infinite\",\n\t\"animn\": \"animation-name\",\n\t\"animps\": \"animation-play-state:running|paused\",\n\t\"animtf\": \"animation-timing-function:linear|ease|ease-in|ease-out|ease-in-out|cubic-bezier(${1:0.1}, ${2:0.7}, ${3:1.0}, ${3:0.1})\",\n\t\"ap\": \"appearance:none\",\n\t\"as\": \"align-self:start|end|auto|flex-start|flex-end|center|baseline|stretch\",\n\t\"b\": \"bottom\",\n\t\"bd\": \"border:${1:1px} ${2:solid} ${3:#000}\",\n\t\"bdb\": \"border-bottom:${1:1px} ${2:solid} ${3:#000}\",\n\t\"bdbc\": \"border-bottom-color:${1:#000}\",\n\t\"bdbi\": \"border-bottom-image:url(${0})\",\n\t\"bdbk\": \"border-break:close\",\n\t\"bdbli\": \"border-bottom-left-image:url(${0})|continue\",\n\t\"bdblrs\": \"border-bottom-left-radius\",\n\t\"bdbri\": \"border-bottom-right-image:url(${0})|continue\",\n\t\"bdbrrs\": \"border-bottom-right-radius\",\n\t\"bdbs\": \"border-bottom-style\",\n\t\"bdbw\": \"border-bottom-width\",\n\t\"bdc\": \"border-color:${1:#000}\",\n\t\"bdci\": \"border-corner-image:url(${0})|continue\",\n\t\"bdcl\": \"border-collapse:collapse|separate\",\n\t\"bdf\": \"border-fit:repeat|clip|scale|stretch|overwrite|overflow|space\",\n\t\"bdi\": \"border-image:url(${0})\",\n\t\"bdl\": \"border-left:${1:1px} ${2:solid} ${3:#000}\",\n\t\"bdlc\": \"border-left-color:${1:#000}\",\n\t\"bdlen\": \"border-length\",\n\t\"bdli\": \"border-left-image:url(${0})\",\n\t\"bdls\": \"border-left-style\",\n\t\"bdlw\": \"border-left-width\",\n\t\"bdr\": \"border-right:${1:1px} ${2:solid} ${3:#000}\",\n\t\"bdrc\": \"border-right-color:${1:#000}\",\n\t\"bdri\": \"border-right-image:url(${0})\",\n\t\"bdrs\": \"border-radius\",\n\t\"bdrst\": \"border-right-style\",\n\t\"bdrw\": \"border-right-width\",\n\t\"bds\": \"border-style:none|hidden|dotted|dashed|solid|double|dot-dash|dot-dot-dash|wave|groove|ridge|inset|outset\",\n\t\"bdsp\": \"border-spacing\",\n\t\"bdt\": \"border-top:${1:1px} ${2:solid} ${3:#000}\",\n\t\"bdtc\": \"border-top-color:${1:#000}\",\n\t\"bdti\": \"border-top-image:url(${0})\",\n\t\"bdtli\": \"border-top-left-image:url(${0})|continue\",\n\t\"bdtlrs\": \"border-top-left-radius\",\n\t\"bdtri\": \"border-top-right-image:url(${0})|continue\",\n\t\"bdtrrs\": \"border-top-right-radius\",\n\t\"bdts\": \"border-top-style\",\n\t\"bdtw\": \"border-top-width\",\n\t\"bdw\": \"border-width\",\n\t\"bfv\": \"backface-visibility:hidden|visible\",\n\t\"bg\": \"background:${1:#000}\",\n\t\"bga\": \"background-attachment:fixed|scroll\",\n\t\"bgbk\": \"background-break:bounding-box|each-box|continuous\",\n\t\"bgc\": \"background-color:#${1:fff}\",\n\t\"bgcp\": \"background-clip:padding-box|border-box|content-box|no-clip\",\n\t\"bgi\": \"background-image:url(${0})\",\n\t\"bgo\": \"background-origin:padding-box|border-box|content-box\",\n\t\"bgp\": \"background-position:${1:0} ${2:0}\",\n\t\"bgpx\": \"background-position-x\",\n\t\"bgpy\": \"background-position-y\",\n\t\"bgr\": \"background-repeat:no-repeat|repeat-x|repeat-y|space|round\",\n\t\"bgsz\": \"background-size:contain|cover\",\n\t\"bxsh\": \"box-shadow:${1:inset }${2:hoff} ${3:voff} ${4:blur} ${5:#000}|none\",\n\t\"bxsz\": \"box-sizing:border-box|content-box|border-box\",\n\t\"c\": \"color:${1:#000}\",\n\t\"cr\": \"color:rgb(${1:0}, ${2:0}, ${3:0})\",\n\t\"cra\": \"color:rgba(${1:0}, ${2:0}, ${3:0}, ${4:.5})\",\n\t\"cl\": \"clear:both|left|right|none\",\n\t\"cm\": \"/* ${0} */\",\n\t\"cnt\": \"content:'${0}'|normal|open-quote|no-open-quote|close-quote|no-close-quote|attr(${0})|counter(${0})|counters(${0})\",\n\t\"coi\": \"counter-increment\",\n\t\"colm\": \"columns\",\n\t\"colmc\": \"column-count\",\n\t\"colmf\": \"column-fill\",\n\t\"colmg\": \"column-gap\",\n\t\"colmr\": \"column-rule\",\n\t\"colmrc\": \"column-rule-color\",\n\t\"colmrs\": \"column-rule-style\",\n\t\"colmrw\": \"column-rule-width\",\n\t\"colms\": \"column-span\",\n\t\"colmw\": \"column-width\",\n\t\"cor\": \"counter-reset\",\n\t\"cp\": \"clip:auto|rect(${1:top} ${2:right} ${3:bottom} ${4:left})\",\n\t\"cps\": \"caption-side:top|bottom\",\n\t\"cur\": \"cursor:pointer|auto|default|crosshair|hand|help|move|pointer|text\",\n\t\"d\": \"display:block|none|flex|inline-flex|inline|inline-block|grid|inline-grid|subgrid|list-item|run-in|compact|table|inline-table|table-caption|table-column|table-column-group|table-header-group|table-footer-group|table-row|table-row-group|table-cell|ruby|ruby-base|ruby-base-group|ruby-text|ruby-text-group\",\n\t\"ec\": \"empty-cells:show|hide\",\n\t\"f\": \"font:${1:1em} ${2:sans-serif}\",\n\t\"fd\": \"font-display:auto|block|swap|fallback|optional\",\n\t\"fef\": \"font-effect:none|engrave|emboss|outline\",\n\t\"fem\": \"font-emphasize\",\n\t\"femp\": \"font-emphasize-position:before|after\",\n\t\"fems\": \"font-emphasize-style:none|accent|dot|circle|disc\",\n\t\"ff\": \"font-family:serif|sans-serif|cursive|fantasy|monospace\",\n\t\"fft\": \"font-family:\\\"Times New Roman\\\", Times, Baskerville, Georgia, serif\",\n\t\"ffa\": \"font-family:Arial, \\\"Helvetica Neue\\\", Helvetica, sans-serif\",\n\t\"ffv\": \"font-family:Verdana, Geneva, sans-serif\",\n\t\"fl\": \"float:left|right|none\",\n\t\"fs\": \"font-style:italic|normal|oblique\",\n\t\"fsm\": \"font-smoothing:antialiased|subpixel-antialiased|none\",\n\t\"fst\": \"font-stretch:normal|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded\",\n\t\"fv\": \"font-variant:normal|small-caps\",\n\t\"fvs\": \"font-variation-settings:normal|inherit|initial|unset\",\n\t\"fw\": \"font-weight:normal|bold|bolder|lighter\",\n\t\"fx\": \"flex\",\n\t\"fxb\": \"flex-basis:fill|max-content|min-content|fit-content|content\",\n\t\"fxd\": \"flex-direction:row|row-reverse|column|column-reverse\",\n\t\"fxf\": \"flex-flow\",\n\t\"fxg\": \"flex-grow\",\n\t\"fxsh\": \"flex-shrink\",\n\t\"fxw\": \"flex-wrap:nowrap|wrap|wrap-reverse\",\n\t\"fsz\": \"font-size\",\n\t\"fsza\": \"font-size-adjust\",\n\t\"gtc\": \"grid-template-columns:repeat()|minmax()\",\n\t\"gtr\": \"grid-template-rows:repeat()|minmax()\",\n\t\"gta\": \"grid-template-areas\",\n\t\"gt\": \"grid-template\",\n\t\"gg\": \"grid-gap\",\n\t\"gcg\": \"grid-column-gap\",\n\t\"grg\": \"grid-row-gap\",\n\t\"gac\": \"grid-auto-columns:auto|minmax()\",\n\t\"gar\": \"grid-auto-rows:auto|minmax()\",\n\t\"gaf\": \"grid-auto-flow:row|column|dense|inherit|initial|unset\",\n\t\"gd\": \"grid\",\n\t\"gc\": \"grid-column\",\n\t\"gcs\": \"grid-column-start\",\n\t\"gce\": \"grid-column-end\",\n\t\"gr\": \"grid-row\",\n\t\"grs\": \"grid-row-start\",\n\t\"gre\": \"grid-row-end\",\n\t\"ga\": \"grid-area\",\n\t\"h\": \"height\",\n\t\"jc\": \"justify-content:start|end|stretch|flex-start|flex-end|center|space-between|space-around|space-evenly\",\n\t\"ji\": \"justify-items:start|end|center|stretch\",\n\t\"js\": \"justify-self:start|end|center|stretch\",\n\t\"l\": \"left\",\n\t\"lg\": \"background-image:linear-gradient(${1})\",\n\t\"lh\": \"line-height\",\n\t\"lis\": \"list-style\",\n\t\"lisi\": \"list-style-image\",\n\t\"lisp\": \"list-style-position:inside|outside\",\n\t\"list\": \"list-style-type:disc|circle|square|decimal|decimal-leading-zero|lower-roman|upper-roman\",\n\t\"lts\": \"letter-spacing:normal\",\n\t\"m\": \"margin\",\n\t\"mah\": \"max-height\",\n\t\"mar\": \"max-resolution\",\n\t\"maw\": \"max-width\",\n\t\"mb\": \"margin-bottom\",\n\t\"mih\": \"min-height\",\n\t\"mir\": \"min-resolution\",\n\t\"miw\": \"min-width\",\n\t\"ml\": \"margin-left\",\n\t\"mr\": \"margin-right\",\n\t\"mt\": \"margin-top\",\n\t\"ol\": \"outline\",\n\t\"olc\": \"outline-color:${1:#000}|invert\",\n\t\"olo\": \"outline-offset\",\n\t\"ols\": \"outline-style:none|dotted|dashed|solid|double|groove|ridge|inset|outset\",\n\t\"olw\": \"outline-width|thin|medium|thick\",\n\t\"op|opa\": \"opacity\",\n\t\"ord\": \"order\",\n\t\"ori\": \"orientation:landscape|portrait\",\n\t\"orp\": \"orphans\",\n\t\"ov\": \"overflow:hidden|visible|hidden|scroll|auto\",\n\t\"ovs\": \"overflow-style:scrollbar|auto|scrollbar|panner|move|marquee\",\n\t\"ovx\": \"overflow-x:hidden|visible|hidden|scroll|auto\",\n\t\"ovy\": \"overflow-y:hidden|visible|hidden|scroll|auto\",\n\t\"p\": \"padding\",\n\t\"pb\": \"padding-bottom\",\n\t\"pgba\": \"page-break-after:auto|always|left|right\",\n\t\"pgbb\": \"page-break-before:auto|always|left|right\",\n\t\"pgbi\": \"page-break-inside:auto|avoid\",\n\t\"pl\": \"padding-left\",\n\t\"pos\": \"position:relative|absolute|relative|fixed|static\",\n\t\"pr\": \"padding-right\",\n\t\"pt\": \"padding-top\",\n\t\"q\": \"quotes\",\n\t\"qen\": \"quotes:'\\\\201C' '\\\\201D' '\\\\2018' '\\\\2019'\",\n\t\"qru\": \"quotes:'\\\\00AB' '\\\\00BB' '\\\\201E' '\\\\201C'\",\n\t\"r\": \"right\",\n\t\"rsz\": \"resize:none|both|horizontal|vertical\",\n\t\"t\": \"top\",\n\t\"ta\": \"text-align:left|center|right|justify\",\n\t\"tal\": \"text-align-last:left|center|right\",\n\t\"tbl\": \"table-layout:fixed\",\n\t\"td\": \"text-decoration:none|underline|overline|line-through\",\n\t\"te\": \"text-emphasis:none|accent|dot|circle|disc|before|after\",\n\t\"th\": \"text-height:auto|font-size|text-size|max-size\",\n\t\"ti\": \"text-indent\",\n\t\"tj\": \"text-justify:auto|inter-word|inter-ideograph|inter-cluster|distribute|kashida|tibetan\",\n\t\"to\": \"text-outline:${1:0} ${2:0} ${3:#000}\",\n\t\"tov\": \"text-overflow:ellipsis|clip\",\n\t\"tr\": \"text-replace\",\n\t\"trf\": \"transform:${1}|skewX(${1:angle})|skewY(${1:angle})|scale(${1:x}, ${2:y})|scaleX(${1:x})|scaleY(${1:y})|scaleZ(${1:z})|scale3d(${1:x}, ${2:y}, ${3:z})|rotate(${1:angle})|rotateX(${1:angle})|rotateY(${1:angle})|rotateZ(${1:angle})|translate(${1:x}, ${2:y})|translateX(${1:x})|translateY(${1:y})|translateZ(${1:z})|translate3d(${1:tx}, ${2:ty}, ${3:tz})\",\n\t\"trfo\": \"transform-origin\",\n\t\"trfs\": \"transform-style:preserve-3d\",\n\t\"trs\": \"transition:${1:prop} ${2:time}\",\n\t\"trsde\": \"transition-delay:${1:time}\",\n\t\"trsdu\": \"transition-duration:${1:time}\",\n\t\"trsp\": \"transition-property:${1:prop}\",\n\t\"trstf\": \"transition-timing-function:${1:fn}\",\n\t\"tsh\": \"text-shadow:${1:hoff} ${2:voff} ${3:blur} ${4:#000}\",\n\t\"tt\": \"text-transform:uppercase|lowercase|capitalize|none\",\n\t\"tw\": \"text-wrap:none|normal|unrestricted|suppress\",\n\t\"us\": \"user-select:none\",\n\t\"v\": \"visibility:hidden|visible|collapse\",\n\t\"va\": \"vertical-align:top|super|text-top|middle|baseline|bottom|text-bottom|sub\",\n\t\"w\": \"width\",\n\t\"whs\": \"white-space:nowrap|pre|pre-wrap|pre-line|normal\",\n\t\"whsc\": \"white-space-collapse:normal|keep-all|loose|break-strict|break-all\",\n\t\"wid\": \"widows\",\n\t\"wm\": \"writing-mode:lr-tb|lr-tb|lr-bt|rl-tb|rl-bt|tb-rl|tb-lr|bt-lr|bt-rl\",\n\t\"wob\": \"word-break:normal|keep-all|break-all\",\n\t\"wos\": \"word-spacing\",\n\t\"wow\": \"word-wrap:none|unrestricted|suppress|break-word|normal\",\n\t\"z\": \"z-index\",\n\t\"zom\": \"zoom:1\"\n};\n\nvar xslSnippets = {\n    \"tm|tmatch\": \"xsl:template[match mode]\",\n    \"tn|tname\": \"xsl:template[name]\",\n    \"call\": \"xsl:call-template[name]\",\n    \"ap\": \"xsl:apply-templates[select mode]\",\n    \"api\": \"xsl:apply-imports\",\n    \"imp\": \"xsl:import[href]\",\n    \"inc\": \"xsl:include[href]\",\n    \"ch\": \"xsl:choose\",\n    \"wh|xsl:when\": \"xsl:when[test]\",\n    \"ot\": \"xsl:otherwise\",\n    \"if\": \"xsl:if[test]\",\n    \"par\": \"xsl:param[name]\",\n    \"pare\": \"xsl:param[name select]\",\n    \"var\": \"xsl:variable[name]\",\n    \"vare\": \"xsl:variable[name select]\",\n    \"wp\": \"xsl:with-param[name select]\",\n    \"key\": \"xsl:key[name match use]\",\n    \"elem\": \"xsl:element[name]\",\n    \"attr\": \"xsl:attribute[name]\",\n    \"attrs\": \"xsl:attribute-set[name]\",\n    \"cp\": \"xsl:copy[select]\",\n    \"co\": \"xsl:copy-of[select]\",\n    \"val\": \"xsl:value-of[select]\",\n    \"for|each\": \"xsl:for-each[select]\",\n    \"tex\": \"xsl:text\",\n    \"com\": \"xsl:comment\",\n    \"msg\": \"xsl:message[terminate=no]\",\n    \"fall\": \"xsl:fallback\",\n    \"num\": \"xsl:number[value]\",\n    \"nam\": \"namespace-alias[stylesheet-prefix result-prefix]\",\n    \"pres\": \"xsl:preserve-space[elements]\",\n    \"strip\": \"xsl:strip-space[elements]\",\n    \"proc\": \"xsl:processing-instruction[name]\",\n    \"sort\": \"xsl:sort[select order]\",\n    \"choose\": \"xsl:choose>xsl:when+xsl:otherwise\",\n    \"xsl\": \"!!!+xsl:stylesheet[version=1.0 xmlns:xsl=http://www.w3.org/1999/XSL/Transform]>{\\n|}\",\n    \"!!!\": \"{<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>}\"\n};\n\nvar pugSnippets = {\n\t\"!!!\": \"{doctype html}\"\n};\n\nvar variables = {\n\t\"lang\": \"en\",\n\t\"locale\": \"en-US\",\n\t\"charset\": \"UTF-8\",\n\t\"indentation\": \"\\t\",\n\t\"newline\": \"\\n\"\n};\n\n/**\n * Default syntaxes for abbreviation types\n */\nconst defaultSyntaxes = {\n    markup: 'html',\n    stylesheet: 'css'\n};\nconst defaultOptions = {\n    'inlineElements': [\n        'a', 'abbr', 'acronym', 'applet', 'b', 'basefont', 'bdo',\n        'big', 'br', 'button', 'cite', 'code', 'del', 'dfn', 'em', 'font', 'i',\n        'iframe', 'img', 'input', 'ins', 'kbd', 'label', 'map', 'object', 'q',\n        's', 'samp', 'select', 'small', 'span', 'strike', 'strong', 'sub', 'sup',\n        'textarea', 'tt', 'u', 'var'\n    ],\n    'output.indent': '\\t',\n    'output.baseIndent': '',\n    'output.newline': '\\n',\n    'output.tagCase': '',\n    'output.attributeCase': '',\n    'output.attributeQuotes': 'double',\n    'output.format': true,\n    'output.formatLeafNode': false,\n    'output.formatSkip': ['html'],\n    'output.formatForce': ['body'],\n    'output.inlineBreak': 3,\n    'output.compactBoolean': false,\n    'output.booleanAttributes': [\n        'contenteditable', 'seamless', 'async', 'autofocus',\n        'autoplay', 'checked', 'controls', 'defer', 'disabled', 'formnovalidate',\n        'hidden', 'ismap', 'loop', 'multiple', 'muted', 'novalidate', 'readonly',\n        'required', 'reversed', 'selected', 'typemustmatch'\n    ],\n    'output.reverseAttributes': false,\n    'output.selfClosingStyle': 'html',\n    'output.field': (index, placeholder) => placeholder,\n    'output.text': text => text,\n    'markup.href': true,\n    'comment.enabled': false,\n    'comment.trigger': ['id', 'class'],\n    'comment.before': '',\n    'comment.after': '\\n<!-- /[#ID][.CLASS] -->',\n    'bem.enabled': false,\n    'bem.element': '__',\n    'bem.modifier': '_',\n    'jsx.enabled': false,\n    'stylesheet.keywords': ['auto', 'inherit', 'unset', 'none'],\n    'stylesheet.unitless': ['z-index', 'line-height', 'opacity', 'font-weight', 'zoom', 'flex', 'flex-grow', 'flex-shrink'],\n    'stylesheet.shortHex': true,\n    'stylesheet.between': ': ',\n    'stylesheet.after': ';',\n    'stylesheet.intUnit': 'px',\n    'stylesheet.floatUnit': 'em',\n    'stylesheet.unitAliases': { e: 'em', p: '%', x: 'ex', r: 'rem' },\n    'stylesheet.json': false,\n    'stylesheet.jsonDoubleQuotes': false,\n    'stylesheet.fuzzySearchMinScore': 0\n};\nconst defaultConfig = {\n    type: 'markup',\n    syntax: 'html',\n    variables,\n    snippets: {},\n    options: defaultOptions\n};\n/**\n * Default per-syntax config\n */\nconst syntaxConfig = {\n    markup: {\n        snippets: parseSnippets(markupSnippets),\n    },\n    xhtml: {\n        options: {\n            'output.selfClosingStyle': 'xhtml'\n        }\n    },\n    xml: {\n        options: {\n            'output.selfClosingStyle': 'xml'\n        }\n    },\n    xsl: {\n        snippets: parseSnippets(xslSnippets),\n        options: {\n            'output.selfClosingStyle': 'xml'\n        }\n    },\n    jsx: {\n        options: {\n            'jsx.enabled': true\n        }\n    },\n    pug: {\n        snippets: parseSnippets(pugSnippets)\n    },\n    stylesheet: {\n        snippets: parseSnippets(stylesheetSnippets)\n    },\n    sass: {\n        options: {\n            'stylesheet.after': ''\n        }\n    },\n    stylus: {\n        options: {\n            'stylesheet.between': ' ',\n            'stylesheet.after': '',\n        }\n    }\n};\n/**\n * Parses raw snippets definitions with possibly multiple keys into a plan\n * snippet map\n */\nfunction parseSnippets(snippets) {\n    const result = {};\n    Object.keys(snippets).forEach(k => {\n        for (const name of k.split('|')) {\n            result[name] = snippets[k];\n        }\n    });\n    return result;\n}\nfunction resolveConfig(config = {}, globals = {}) {\n    const type = config.type || 'markup';\n    const syntax = config.syntax || defaultSyntaxes[type];\n    return Object.assign(Object.assign(Object.assign({}, defaultConfig), config), { type,\n        syntax, variables: mergedData(type, syntax, 'variables', config, globals), snippets: mergedData(type, syntax, 'snippets', config, globals), options: mergedData(type, syntax, 'options', config, globals) });\n}\nfunction mergedData(type, syntax, key, config, globals = {}) {\n    const typeDefaults = syntaxConfig[type];\n    const typeOverride = globals[type];\n    const syntaxDefaults = syntaxConfig[syntax];\n    const syntaxOverride = globals[syntax];\n    return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, defaultConfig[key]), (typeDefaults && typeDefaults[key])), (syntaxDefaults && syntaxDefaults[key])), (typeOverride && typeOverride[key])), (syntaxOverride && syntaxOverride[key])), config[key]);\n}\n\n/**\n * Creates structure for scanning given string in backward direction\n */\nfunction backwardScanner(text, start = 0) {\n    return { text, start, pos: text.length };\n}\n/**\n * Check if given scanner position is at start of scanned text\n */\nfunction sol(scanner) {\n    return scanner.pos === scanner.start;\n}\n/**\n * “Peeks” character code an current scanner location without advancing it\n */\nfunction peek$1(scanner, offset = 0) {\n    return scanner.text.charCodeAt(scanner.pos - 1 + offset);\n}\n/**\n * Returns current character code and moves character location one symbol back\n */\nfunction previous(scanner) {\n    if (!sol(scanner)) {\n        return scanner.text.charCodeAt(--scanner.pos);\n    }\n}\n/**\n * Consumes current character code if it matches given `match` code or function\n */\nfunction consume(scanner, match) {\n    if (sol(scanner)) {\n        return false;\n    }\n    const ok = typeof match === 'function'\n        ? match(peek$1(scanner))\n        : match === peek$1(scanner);\n    if (ok) {\n        scanner.pos--;\n    }\n    return !!ok;\n}\nfunction consumeWhile(scanner, match) {\n    const start = scanner.pos;\n    while (consume(scanner, match)) {\n        // empty\n    }\n    return scanner.pos < start;\n}\n\n/**\n * Check if given character code is a quote\n */\nfunction isQuote(c) {\n    return c === 39 /* SingleQuote */ || c === 34 /* DoubleQuote */;\n}\n/**\n * Consumes quoted value, if possible\n * @return Returns `true` is value was consumed\n */\nfunction consumeQuoted(scanner) {\n    const start = scanner.pos;\n    const quote = previous(scanner);\n    if (isQuote(quote)) {\n        while (!sol(scanner)) {\n            if (previous(scanner) === quote && peek$1(scanner) !== 92 /* Escape */) {\n                return true;\n            }\n        }\n    }\n    scanner.pos = start;\n    return false;\n}\n\nconst bracePairs = {\n    [91 /* SquareL */]: 93 /* SquareR */,\n    [40 /* RoundL */]: 41 /* RoundR */,\n    [123 /* CurlyL */]: 125 /* CurlyR */,\n};\n\n/**\n * Check if given reader’s current position points at the end of HTML tag\n */\nfunction isHtml(scanner) {\n    const start = scanner.pos;\n    if (!consume(scanner, 62 /* AngleRight */)) {\n        return false;\n    }\n    let ok = false;\n    consume(scanner, 47 /* Slash */); // possibly self-closed element\n    while (!sol(scanner)) {\n        consumeWhile(scanner, isWhiteSpace);\n        if (consumeIdent(scanner)) {\n            // ate identifier: could be a tag name, boolean attribute or unquoted\n            // attribute value\n            if (consume(scanner, 47 /* Slash */)) {\n                // either closing tag or invalid tag\n                ok = consume(scanner, 60 /* AngleLeft */);\n                break;\n            }\n            else if (consume(scanner, 60 /* AngleLeft */)) {\n                // opening tag\n                ok = true;\n                break;\n            }\n            else if (consume(scanner, isWhiteSpace)) {\n                // boolean attribute\n                continue;\n            }\n            else if (consume(scanner, 61 /* Equals */)) {\n                // simple unquoted value or invalid attribute\n                if (consumeIdent(scanner)) {\n                    continue;\n                }\n                break;\n            }\n            else if (consumeAttributeWithUnquotedValue(scanner)) {\n                // identifier was a part of unquoted value\n                ok = true;\n                break;\n            }\n            // invalid tag\n            break;\n        }\n        if (consumeAttribute(scanner)) {\n            continue;\n        }\n        break;\n    }\n    scanner.pos = start;\n    return ok;\n}\n/**\n * Consumes HTML attribute from given string.\n * @return `true` if attribute was consumed.\n */\nfunction consumeAttribute(scanner) {\n    return consumeAttributeWithQuotedValue(scanner) || consumeAttributeWithUnquotedValue(scanner);\n}\nfunction consumeAttributeWithQuotedValue(scanner) {\n    const start = scanner.pos;\n    if (consumeQuoted(scanner) && consume(scanner, 61 /* Equals */) && consumeIdent(scanner)) {\n        return true;\n    }\n    scanner.pos = start;\n    return false;\n}\nfunction consumeAttributeWithUnquotedValue(scanner) {\n    const start = scanner.pos;\n    const stack = [];\n    while (!sol(scanner)) {\n        const ch = peek$1(scanner);\n        if (isCloseBracket(ch)) {\n            stack.push(ch);\n        }\n        else if (isOpenBracket(ch)) {\n            if (stack.pop() !== bracePairs[ch]) {\n                // Unexpected open bracket\n                break;\n            }\n        }\n        else if (!isUnquotedValue(ch)) {\n            break;\n        }\n        scanner.pos--;\n    }\n    if (start !== scanner.pos && consume(scanner, 61 /* Equals */) && consumeIdent(scanner)) {\n        return true;\n    }\n    scanner.pos = start;\n    return false;\n}\n/**\n * Consumes HTML identifier from stream\n */\nfunction consumeIdent(scanner) {\n    return consumeWhile(scanner, isIdent);\n}\n/**\n * Check if given character code belongs to HTML identifier\n */\nfunction isIdent(ch) {\n    return ch === 58 /* Colon */ || ch === 45 /* Dash */ || isAlpha(ch) || isNumber(ch);\n}\n/**\n * Check if given character code is alpha code (letter though A to Z)\n */\nfunction isAlpha(ch) {\n    ch &= ~32; // quick hack to convert any char code to uppercase char code\n    return ch >= 65 && ch <= 90; // A-Z\n}\n/**\n * Check if given code is a number\n */\nfunction isNumber(ch) {\n    return ch > 47 && ch < 58;\n}\n/**\n * Check if given code is a whitespace\n */\nfunction isWhiteSpace(ch) {\n    return ch === 32 /* Space */ || ch === 9 /* Tab */;\n}\n/**\n * Check if given code may belong to unquoted attribute value\n */\nfunction isUnquotedValue(ch) {\n    return !isNaN(ch) && ch !== 61 /* Equals */ && !isWhiteSpace(ch) && !isQuote(ch);\n}\nfunction isOpenBracket(ch) {\n    return ch === 123 /* CurlyL */ || ch === 40 /* RoundL */ || ch === 91 /* SquareL */;\n}\nfunction isCloseBracket(ch) {\n    return ch === 125 /* CurlyR */ || ch === 41 /* RoundR */ || ch === 93 /* SquareR */;\n}\n\nconst code = (ch) => ch.charCodeAt(0);\nconst specialChars = '#.*:$-_!@%^+>/'.split('').map(code);\nconst defaultOptions$1 = {\n    type: 'markup',\n    lookAhead: true,\n    prefix: ''\n};\n/**\n * Extracts Emmet abbreviation from given string.\n * The goal of this module is to extract abbreviation from current editor’s line,\n * e.g. like this: `<span>.foo[title=bar|]</span>` -> `.foo[title=bar]`, where\n * `|` is a current caret position.\n * @param line A text line where abbreviation should be expanded\n * @param pos Caret position in line. If not given, uses end of line\n * @param options Extracting options\n */\nfunction extractAbbreviation(line, pos = line.length, options = {}) {\n    // make sure `pos` is within line range\n    const opt = Object.assign(Object.assign({}, defaultOptions$1), options);\n    pos = Math.min(line.length, Math.max(0, pos == null ? line.length : pos));\n    if (opt.lookAhead) {\n        pos = offsetPastAutoClosed(line, pos, opt);\n    }\n    let ch;\n    const start = getStartOffset(line, pos, opt.prefix || '');\n    if (start === -1) {\n        return void 0;\n    }\n    const scanner = backwardScanner(line, start);\n    scanner.pos = pos;\n    const stack = [];\n    while (!sol(scanner)) {\n        ch = peek$1(scanner);\n        if (stack.includes(125 /* CurlyR */)) {\n            if (ch === 125 /* CurlyR */) {\n                stack.push(ch);\n                scanner.pos--;\n                continue;\n            }\n            if (ch !== 123 /* CurlyL */) {\n                scanner.pos--;\n                continue;\n            }\n        }\n        if (isCloseBrace(ch, opt.type)) {\n            stack.push(ch);\n        }\n        else if (isOpenBrace(ch, opt.type)) {\n            if (stack.pop() !== bracePairs[ch]) {\n                // unexpected brace\n                break;\n            }\n        }\n        else if (stack.includes(93 /* SquareR */) || stack.includes(125 /* CurlyR */)) {\n            // respect all characters inside attribute sets or text nodes\n            scanner.pos--;\n            continue;\n        }\n        else if (isHtml(scanner) || !isAbbreviation(ch)) {\n            break;\n        }\n        scanner.pos--;\n    }\n    if (!stack.length && scanner.pos !== pos) {\n        // Found something, remove some invalid symbols from the\n        // beginning and return abbreviation\n        const abbreviation = line.slice(scanner.pos, pos).replace(/^[*+>^]+/, '');\n        return {\n            abbreviation,\n            location: pos - abbreviation.length,\n            start: options.prefix\n                ? start - options.prefix.length\n                : pos - abbreviation.length,\n            end: pos\n        };\n    }\n}\n/**\n * Returns new `line` index which is right after characters beyound `pos` that\n * editor will likely automatically close, e.g. }, ], and quotes\n */\nfunction offsetPastAutoClosed(line, pos, options) {\n    // closing quote is allowed only as a next character\n    if (isQuote(line.charCodeAt(pos))) {\n        pos++;\n    }\n    // offset pointer until non-autoclosed character is found\n    while (isCloseBrace(line.charCodeAt(pos), options.type)) {\n        pos++;\n    }\n    return pos;\n}\n/**\n * Returns start offset (left limit) in `line` where we should stop looking for\n * abbreviation: it’s nearest to `pos` location of `prefix` token\n */\nfunction getStartOffset(line, pos, prefix) {\n    if (!prefix) {\n        return 0;\n    }\n    const scanner = backwardScanner(line);\n    const compiledPrefix = prefix.split('').map(code);\n    scanner.pos = pos;\n    let result;\n    while (!sol(scanner)) {\n        if (consumePair(scanner, 93 /* SquareR */, 91 /* SquareL */) || consumePair(scanner, 125 /* CurlyR */, 123 /* CurlyL */)) {\n            continue;\n        }\n        result = scanner.pos;\n        if (consumeArray(scanner, compiledPrefix)) {\n            return result;\n        }\n        scanner.pos--;\n    }\n    return -1;\n}\n/**\n * Consumes full character pair, if possible\n */\nfunction consumePair(scanner, close, open) {\n    const start = scanner.pos;\n    if (consume(scanner, close)) {\n        while (!sol(scanner)) {\n            if (consume(scanner, open)) {\n                return true;\n            }\n            scanner.pos--;\n        }\n    }\n    scanner.pos = start;\n    return false;\n}\n/**\n * Consumes all character codes from given array, right-to-left, if possible\n */\nfunction consumeArray(scanner, arr) {\n    const start = scanner.pos;\n    let consumed = false;\n    for (let i = arr.length - 1; i >= 0 && !sol(scanner); i--) {\n        if (!consume(scanner, arr[i])) {\n            break;\n        }\n        consumed = i === 0;\n    }\n    if (!consumed) {\n        scanner.pos = start;\n    }\n    return consumed;\n}\nfunction isAbbreviation(ch) {\n    return (ch > 64 && ch < 91) // uppercase letter\n        || (ch > 96 && ch < 123) // lowercase letter\n        || (ch > 47 && ch < 58) // number\n        || specialChars.includes(ch); // special character\n}\nfunction isOpenBrace(ch, syntax) {\n    return ch === 40 /* RoundL */ || (syntax === 'markup' && (ch === 91 /* SquareL */ || ch === 123 /* CurlyL */));\n}\nfunction isCloseBrace(ch, syntax) {\n    return ch === 41 /* RoundR */ || (syntax === 'markup' && (ch === 93 /* SquareR */ || ch === 125 /* CurlyR */));\n}\n\nfunction expandAbbreviation(abbr, config) {\n    const resolvedConfig = resolveConfig(config);\n    return resolvedConfig.type === 'stylesheet'\n        ? stylesheet(abbr, resolvedConfig)\n        : markup(abbr, resolvedConfig);\n}\n/**\n * Expands given *markup* abbreviation (e.g. regular Emmet abbreviation that\n * produces structured output like HTML) and outputs it according to options\n * provided in config\n */\nfunction markup(abbr, config) {\n    return stringify(parse(abbr, config), config);\n}\n/**\n * Expands given *stylesheet* abbreviation (a special Emmet abbreviation designed for\n * stylesheet languages like CSS, SASS etc.) and outputs it according to options\n * provided in config\n */\nfunction stylesheet(abbr, config) {\n    return css(parse$1(abbr, config), config);\n}\n\nexport default expandAbbreviation;\nexport { extractAbbreviation as extract, markup, parse as parseMarkup, parse$1 as parseStylesheet, convertSnippets as parseStylesheetSnippets, resolveConfig, stringify as stringifyMarkup, css as stringifyStylesheet, stylesheet };\n//# sourceMappingURL=emmet.es.js.map\n","/*\r\nMIT License\r\n\r\nCopyright (c) 2020 Sergey Chikuyonok <serge.che@gmail.com>\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n*/\r\n/**\r\n * Parses raw snippets definitions with possibly multiple keys into a plan\r\n * snippet map\r\n */\r\nexport function parseSnippets(snippets) {\r\n    const result = {};\r\n    Object.keys(snippets).forEach(k => {\r\n        for (const name of k.split('|')) {\r\n            result[name] = snippets[k];\r\n        }\r\n    });\r\n    return result;\r\n}\r\n/**\r\n * List of all known syntaxes\r\n */\r\nexport const syntaxes = {\r\n    markup: ['html', 'xml', 'xsl', 'jsx', 'js', 'pug', 'slim', 'haml'],\r\n    stylesheet: ['css', 'sass', 'scss', 'less', 'sss', 'stylus']\r\n};\r\n//# sourceMappingURL=configCompat.js.map","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { Range, CompletionItem, CompletionList, TextEdit, InsertTextFormat, CompletionItemKind } from 'vscode-languageserver-types';\r\nimport * as JSONC from 'jsonc-parser';\r\nimport { cssData, htmlData } from './data';\r\nimport { URI } from 'vscode-uri';\r\nimport { joinPath, isAbsolutePath, FileType } from './fileService';\r\nimport { TextDecoder } from 'util';\r\nimport expand, { extract, parseMarkup, parseStylesheet, resolveConfig, stringifyMarkup, stringifyStylesheet } from 'emmet';\r\nimport { parseSnippets, syntaxes } from './configCompat';\r\nimport * as nls from 'vscode-nls';\r\nconst localize = nls.loadMessageBundle();\r\n// /* workaround for webpack issue: https://github.com/webpack/webpack/issues/5756\r\n//  @emmetio/extract-abbreviation has a cjs that uses a default export\r\n// */\r\n// const extract = typeof _extractAbbreviation === 'function' ? _extractAbbreviation : _extractAbbreviation.default;\r\nexport { FileType };\r\nconst snippetKeyCache = new Map();\r\nlet markupSnippetKeys;\r\nconst stylesheetCustomSnippetsKeyCache = new Map();\r\nconst htmlAbbreviationStartRegex = /^[a-z,A-Z,!,(,[,#,\\.]/;\r\nconst cssAbbreviationRegex = /^-?[a-z,A-Z,!,@,#]/;\r\nconst htmlAbbreviationRegex = /[a-z,A-Z\\.]/;\r\nconst commonlyUsedTags = [...htmlData.tags, 'lorem'];\r\nconst bemFilterSuffix = 'bem';\r\nconst filterDelimitor = '|';\r\nconst trimFilterSuffix = 't';\r\nconst commentFilterSuffix = 'c';\r\nconst maxFilters = 3;\r\nconst vendorPrefixes = { 'w': \"webkit\", 'm': \"moz\", 's': \"ms\", 'o': \"o\" };\r\nconst defaultVendorProperties = {\r\n    'w': \"animation, animation-delay, animation-direction, animation-duration, animation-fill-mode, animation-iteration-count, animation-name, animation-play-state, animation-timing-function, appearance, backface-visibility, background-clip, background-composite, background-origin, background-size, border-fit, border-horizontal-spacing, border-image, border-vertical-spacing, box-align, box-direction, box-flex, box-flex-group, box-lines, box-ordinal-group, box-orient, box-pack, box-reflect, box-shadow, color-correction, column-break-after, column-break-before, column-break-inside, column-count, column-gap, column-rule-color, column-rule-style, column-rule-width, column-span, column-width, dashboard-region, font-smoothing, highlight, hyphenate-character, hyphenate-limit-after, hyphenate-limit-before, hyphens, line-box-contain, line-break, line-clamp, locale, margin-before-collapse, margin-after-collapse, marquee-direction, marquee-increment, marquee-repetition, marquee-style, mask-attachment, mask-box-image, mask-box-image-outset, mask-box-image-repeat, mask-box-image-slice, mask-box-image-source, mask-box-image-width, mask-clip, mask-composite, mask-image, mask-origin, mask-position, mask-repeat, mask-size, nbsp-mode, perspective, perspective-origin, rtl-ordering, text-combine, text-decorations-in-effect, text-emphasis-color, text-emphasis-position, text-emphasis-style, text-fill-color, text-orientation, text-security, text-stroke-color, text-stroke-width, transform, transition, transform-origin, transform-style, transition-delay, transition-duration, transition-property, transition-timing-function, user-drag, user-modify, user-select, writing-mode, svg-shadow, box-sizing, border-radius\",\r\n    'm': \"animation-delay, animation-direction, animation-duration, animation-fill-mode, animation-iteration-count, animation-name, animation-play-state, animation-timing-function, appearance, backface-visibility, background-inline-policy, binding, border-bottom-colors, border-image, border-left-colors, border-right-colors, border-top-colors, box-align, box-direction, box-flex, box-ordinal-group, box-orient, box-pack, box-shadow, box-sizing, column-count, column-gap, column-rule-color, column-rule-style, column-rule-width, column-width, float-edge, font-feature-settings, font-language-override, force-broken-image-icon, hyphens, image-region, orient, outline-radius-bottomleft, outline-radius-bottomright, outline-radius-topleft, outline-radius-topright, perspective, perspective-origin, stack-sizing, tab-size, text-blink, text-decoration-color, text-decoration-line, text-decoration-style, text-size-adjust, transform, transform-origin, transform-style, transition, transition-delay, transition-duration, transition-property, transition-timing-function, user-focus, user-input, user-modify, user-select, window-shadow, background-clip, border-radius\",\r\n    's': \"accelerator, backface-visibility, background-position-x, background-position-y, behavior, block-progression, box-align, box-direction, box-flex, box-line-progression, box-lines, box-ordinal-group, box-orient, box-pack, content-zoom-boundary, content-zoom-boundary-max, content-zoom-boundary-min, content-zoom-chaining, content-zoom-snap, content-zoom-snap-points, content-zoom-snap-type, content-zooming, filter, flow-from, flow-into, font-feature-settings, grid-column, grid-column-align, grid-column-span, grid-columns, grid-layer, grid-row, grid-row-align, grid-row-span, grid-rows, high-contrast-adjust, hyphenate-limit-chars, hyphenate-limit-lines, hyphenate-limit-zone, hyphens, ime-mode, interpolation-mode, layout-flow, layout-grid, layout-grid-char, layout-grid-line, layout-grid-mode, layout-grid-type, line-break, overflow-style, perspective, perspective-origin, perspective-origin-x, perspective-origin-y, scroll-boundary, scroll-boundary-bottom, scroll-boundary-left, scroll-boundary-right, scroll-boundary-top, scroll-chaining, scroll-rails, scroll-snap-points-x, scroll-snap-points-y, scroll-snap-type, scroll-snap-x, scroll-snap-y, scrollbar-arrow-color, scrollbar-base-color, scrollbar-darkshadow-color, scrollbar-face-color, scrollbar-highlight-color, scrollbar-shadow-color, scrollbar-track-color, text-align-last, text-autospace, text-justify, text-kashida-space, text-overflow, text-size-adjust, text-underline-position, touch-action, transform, transform-origin, transform-origin-x, transform-origin-y, transform-origin-z, transform-style, transition, transition-delay, transition-duration, transition-property, transition-timing-function, user-select, word-break, wrap-flow, wrap-margin, wrap-through, writing-mode\",\r\n    'o': \"dashboard-region, animation, animation-delay, animation-direction, animation-duration, animation-fill-mode, animation-iteration-count, animation-name, animation-play-state, animation-timing-function, border-image, link, link-source, object-fit, object-position, tab-size, table-baseline, transform, transform-origin, transition, transition-delay, transition-duration, transition-property, transition-timing-function, accesskey, input-format, input-required, marquee-dir, marquee-loop, marquee-speed, marquee-style\"\r\n};\r\nconst vendorPrefixesEnabled = false;\r\n/**\r\n * Returns all applicable emmet expansions for abbreviation at given position in a CompletionList\r\n * @param document TextDocument in which completions are requested\r\n * @param position Position in the document at which completions are requested\r\n * @param syntax Emmet supported language\r\n * @param emmetConfig Emmet Configurations as derived from VS Code\r\n */\r\nexport function doComplete(document, position, syntax, emmetConfig) {\r\n    var _a;\r\n    if (emmetConfig.showExpandedAbbreviation === 'never' || !getEmmetMode(syntax, emmetConfig.excludeLanguages)) {\r\n        return;\r\n    }\r\n    const isStyleSheetRes = isStyleSheet(syntax);\r\n    // Fetch markupSnippets so that we can provide possible abbreviation completions\r\n    // For example, when text at position is `a`, completions should return `a:blank`, `a:link`, `acr` etc.\r\n    if (!isStyleSheetRes) {\r\n        if (!snippetKeyCache.has(syntax)) {\r\n            const registry = (_a = customSnippetsRegistry[syntax]) !== null && _a !== void 0 ? _a : getDefaultSnippets(syntax);\r\n            snippetKeyCache.set(syntax, Object.keys(registry));\r\n        }\r\n        markupSnippetKeys = snippetKeyCache.get(syntax);\r\n    }\r\n    const extractOptions = { lookAhead: !isStyleSheetRes, type: isStyleSheetRes ? 'stylesheet' : 'markup' };\r\n    const extractedValue = extractAbbreviation(document, position, extractOptions);\r\n    if (!extractedValue) {\r\n        return;\r\n    }\r\n    const { abbreviationRange, abbreviation, filter } = extractedValue;\r\n    const currentLineTillPosition = getCurrentLine(document, position).substr(0, position.character);\r\n    const currentWord = getCurrentWord(currentLineTillPosition);\r\n    // Don't attempt to expand open tags\r\n    if (currentWord === abbreviation\r\n        && currentLineTillPosition.endsWith(`<${abbreviation}`)\r\n        && syntaxes.markup.includes(syntax)) {\r\n        return;\r\n    }\r\n    const expandOptions = getExpandOptions(syntax, emmetConfig, filter);\r\n    let expandedText;\r\n    let expandedAbbr;\r\n    let completionItems = [];\r\n    // Create completion item after expanding given abbreviation \r\n    // if abbreviation is valid and expanded value is not noise\r\n    const createExpandedAbbr = (syntax, abbr) => {\r\n        if (!isAbbreviationValid(syntax, abbreviation)) {\r\n            return;\r\n        }\r\n        try {\r\n            expandedText = expand(abbr, expandOptions);\r\n        }\r\n        catch (e) {\r\n        }\r\n        if (!expandedText || isExpandedTextNoise(syntax, abbr, expandedText)) {\r\n            return;\r\n        }\r\n        expandedAbbr = CompletionItem.create(abbr);\r\n        expandedAbbr.textEdit = TextEdit.replace(abbreviationRange, escapeNonTabStopDollar(addFinalTabStop(expandedText)));\r\n        expandedAbbr.documentation = replaceTabStopsWithCursors(expandedText);\r\n        expandedAbbr.insertTextFormat = InsertTextFormat.Snippet;\r\n        expandedAbbr.detail = localize('Emmet abbreviation', \"Emmet Abbreviation\");\r\n        expandedAbbr.label = abbreviation;\r\n        expandedAbbr.label += filter ? '|' + filter.replace(',', '|') : \"\";\r\n        completionItems = [expandedAbbr];\r\n    };\r\n    if (isStyleSheet(syntax)) {\r\n        const { prefixOptions, abbreviationWithoutPrefix } = splitVendorPrefix(abbreviation);\r\n        createExpandedAbbr(syntax, abbreviationWithoutPrefix);\r\n        // When abbr is longer than usual emmet snippets and matches better with existing css property, then no emmet\r\n        if (abbreviationWithoutPrefix.length > 4\r\n            && cssData.properties.find(x => x.startsWith(abbreviationWithoutPrefix))) {\r\n            return CompletionList.create([], true);\r\n        }\r\n        if (expandedAbbr) {\r\n            const prefixedExpandedText = applyVendorPrefixes(expandedText, prefixOptions, expandOptions.options);\r\n            expandedAbbr.textEdit = TextEdit.replace(abbreviationRange, escapeNonTabStopDollar(addFinalTabStop(prefixedExpandedText)));\r\n            expandedAbbr.documentation = replaceTabStopsWithCursors(prefixedExpandedText);\r\n            expandedAbbr.label = removeTabStops(expandedText);\r\n            expandedAbbr.filterText = abbreviation;\r\n            // Custom snippets should show up in completions if abbreviation is a prefix\r\n            const stylesheetCustomSnippetsKeys = stylesheetCustomSnippetsKeyCache.has(syntax) ? stylesheetCustomSnippetsKeyCache.get(syntax) : stylesheetCustomSnippetsKeyCache.get('css');\r\n            completionItems = makeSnippetSuggestion(stylesheetCustomSnippetsKeys, abbreviation, abbreviation, abbreviationRange, expandOptions, 'Emmet Custom Snippet', false);\r\n            if (!completionItems.find(x => x.textEdit.newText === expandedAbbr.textEdit.newText)) {\r\n                // Fix for https://github.com/Microsoft/vscode/issues/28933#issuecomment-309236902\r\n                // When user types in propertyname, emmet uses it to match with snippet names, resulting in width -> widows or font-family -> font: family\r\n                // Filter out those cases here.\r\n                const abbrRegex = new RegExp('.*' + abbreviationWithoutPrefix.split('').map(x => (x === '$' || x === '+') ? '\\\\' + x : x).join('.*') + '.*', 'i');\r\n                if (/\\d/.test(abbreviation) || abbrRegex.test(expandedAbbr.label)) {\r\n                    completionItems.push(expandedAbbr);\r\n                }\r\n            }\r\n        }\r\n        if (vendorPrefixesEnabled) {\r\n            // Incomplete abbreviations that use vendor prefix\r\n            if (!completionItems.length && (abbreviation === '-' || /^-[wmso]{1,4}-?$/.test(abbreviation))) {\r\n                return CompletionList.create([], true);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        createExpandedAbbr(syntax, abbreviation);\r\n        let tagToFindMoreSuggestionsFor = abbreviation;\r\n        const newTagMatches = abbreviation.match(/(>|\\+)([\\w:-]+)$/);\r\n        if (newTagMatches && newTagMatches.length === 3) {\r\n            tagToFindMoreSuggestionsFor = newTagMatches[2];\r\n        }\r\n        const commonlyUsedTagSuggestions = makeSnippetSuggestion(commonlyUsedTags, tagToFindMoreSuggestionsFor, abbreviation, abbreviationRange, expandOptions, 'Emmet Abbreviation');\r\n        completionItems = completionItems.concat(commonlyUsedTagSuggestions);\r\n        if (emmetConfig.showAbbreviationSuggestions === true) {\r\n            const abbreviationSuggestions = makeSnippetSuggestion(markupSnippetKeys.filter(x => !commonlyUsedTags.includes(x)), tagToFindMoreSuggestionsFor, abbreviation, abbreviationRange, expandOptions, 'Emmet Abbreviation');\r\n            // Workaround for the main expanded abbr not appearing before the snippet suggestions\r\n            if (expandedAbbr && abbreviationSuggestions.length > 0 && tagToFindMoreSuggestionsFor !== abbreviation) {\r\n                expandedAbbr.sortText = '0' + expandedAbbr.label;\r\n                abbreviationSuggestions.forEach(item => {\r\n                    // Workaround for snippet suggestions items getting filtered out as the complete abbr does not start with snippetKey \r\n                    item.filterText = abbreviation;\r\n                    // Workaround for the main expanded abbr not appearing before the snippet suggestions\r\n                    item.sortText = '9' + abbreviation;\r\n                });\r\n            }\r\n            completionItems = completionItems.concat(abbreviationSuggestions);\r\n        }\r\n        // https://github.com/microsoft/vscode/issues/66680\r\n        if (syntax === 'html' && completionItems.length >= 2 && abbreviation.includes(\":\")\r\n            && expandedAbbr && expandedAbbr.textEdit.newText === `<${abbreviation}>\\${0}</${abbreviation}>`) {\r\n            completionItems = completionItems.filter(item => item.label !== abbreviation);\r\n        }\r\n    }\r\n    if (emmetConfig.showSuggestionsAsSnippets === true) {\r\n        completionItems.forEach(x => x.kind = CompletionItemKind.Snippet);\r\n    }\r\n    return completionItems.length ? CompletionList.create(completionItems, true) : undefined;\r\n}\r\n/**\r\n * Create & return snippets for snippet keys that start with given prefix\r\n */\r\nfunction makeSnippetSuggestion(snippetKeys, prefix, abbreviation, abbreviationRange, expandOptions, snippetDetail, skipFullMatch = true) {\r\n    if (!prefix || !snippetKeys) {\r\n        return [];\r\n    }\r\n    const snippetCompletions = [];\r\n    snippetKeys.forEach(snippetKey => {\r\n        if (!snippetKey.startsWith(prefix.toLowerCase()) || (skipFullMatch && snippetKey === prefix.toLowerCase())) {\r\n            return;\r\n        }\r\n        const currentAbbr = abbreviation + snippetKey.substr(prefix.length);\r\n        let expandedAbbr;\r\n        try {\r\n            expandedAbbr = expand(currentAbbr, expandOptions);\r\n        }\r\n        catch (e) {\r\n        }\r\n        if (!expandedAbbr) {\r\n            return;\r\n        }\r\n        const item = CompletionItem.create(prefix + snippetKey.substr(prefix.length));\r\n        item.documentation = replaceTabStopsWithCursors(expandedAbbr);\r\n        item.detail = snippetDetail;\r\n        item.textEdit = TextEdit.replace(abbreviationRange, escapeNonTabStopDollar(addFinalTabStop(expandedAbbr)));\r\n        item.insertTextFormat = InsertTextFormat.Snippet;\r\n        snippetCompletions.push(item);\r\n    });\r\n    return snippetCompletions;\r\n}\r\nfunction getCurrentWord(currentLineTillPosition) {\r\n    if (currentLineTillPosition) {\r\n        const matches = currentLineTillPosition.match(/[\\w,:,-,\\.]*$/);\r\n        if (matches) {\r\n            return matches[0];\r\n        }\r\n    }\r\n}\r\nfunction replaceTabStopsWithCursors(expandedWord) {\r\n    return expandedWord.replace(/([^\\\\])\\$\\{\\d+\\}/g, '$1|').replace(/\\$\\{\\d+:([^\\}]+)\\}/g, '$1');\r\n}\r\nfunction removeTabStops(expandedWord) {\r\n    return expandedWord.replace(/([^\\\\])\\$\\{\\d+\\}/g, '$1').replace(/\\$\\{\\d+:([^\\}]+)\\}/g, '$1');\r\n}\r\nfunction escapeNonTabStopDollar(text) {\r\n    return text ? text.replace(/([^\\\\])(\\$)([^\\{])/g, '$1\\\\$2$3') : text;\r\n}\r\nfunction addFinalTabStop(text) {\r\n    if (!text || !text.trim()) {\r\n        return text;\r\n    }\r\n    let maxTabStop = -1;\r\n    let maxTabStopRanges = [];\r\n    let foundLastStop = false;\r\n    let replaceWithLastStop = false;\r\n    let i = 0;\r\n    const n = text.length;\r\n    try {\r\n        while (i < n && !foundLastStop) {\r\n            // Look for ${\r\n            if (text[i++] != '$' || text[i++] != '{') {\r\n                continue;\r\n            }\r\n            // Find tabstop\r\n            let numberStart = -1;\r\n            let numberEnd = -1;\r\n            while (i < n && /\\d/.test(text[i])) {\r\n                numberStart = numberStart < 0 ? i : numberStart;\r\n                numberEnd = i + 1;\r\n                i++;\r\n            }\r\n            // If ${ was not followed by a number and either } or :, then its not a tabstop\r\n            if (numberStart === -1 || numberEnd === -1 || i >= n || (text[i] != '}' && text[i] != ':')) {\r\n                continue;\r\n            }\r\n            // If ${0} was found, then break\r\n            const currentTabStop = text.substring(numberStart, numberEnd);\r\n            foundLastStop = currentTabStop === '0';\r\n            if (foundLastStop) {\r\n                break;\r\n            }\r\n            let foundPlaceholder = false;\r\n            if (text[i++] == ':') {\r\n                // TODO: Nested placeholders may break here\r\n                while (i < n) {\r\n                    if (text[i] == '}') {\r\n                        foundPlaceholder = true;\r\n                        break;\r\n                    }\r\n                    i++;\r\n                }\r\n            }\r\n            // Decide to replace currentTabStop with ${0} only if its the max among all tabstops and is not a placeholder\r\n            if (Number(currentTabStop) > Number(maxTabStop)) {\r\n                maxTabStop = currentTabStop;\r\n                maxTabStopRanges = [{ numberStart, numberEnd }];\r\n                replaceWithLastStop = !foundPlaceholder;\r\n            }\r\n            else if (currentTabStop == maxTabStop) {\r\n                maxTabStopRanges.push({ numberStart, numberEnd });\r\n            }\r\n        }\r\n    }\r\n    catch (e) {\r\n    }\r\n    if (replaceWithLastStop && !foundLastStop) {\r\n        for (let i = 0; i < maxTabStopRanges.length; i++) {\r\n            const rangeStart = maxTabStopRanges[i].numberStart;\r\n            const rangeEnd = maxTabStopRanges[i].numberEnd;\r\n            text = text.substr(0, rangeStart) + '0' + text.substr(rangeEnd);\r\n        }\r\n    }\r\n    return text;\r\n}\r\nfunction getCurrentLine(document, position) {\r\n    const offset = document.offsetAt(position);\r\n    const text = document.getText();\r\n    let start = 0;\r\n    let end = text.length;\r\n    for (let i = offset - 1; i >= 0; i--) {\r\n        if (text[i] === '\\n') {\r\n            start = i + 1;\r\n            break;\r\n        }\r\n    }\r\n    for (let i = offset; i < text.length; i++) {\r\n        if (text[i] === '\\n') {\r\n            end = i;\r\n            break;\r\n        }\r\n    }\r\n    return text.substring(start, end);\r\n}\r\nlet customSnippetsRegistry = {};\r\nlet variablesFromFile = {};\r\nlet profilesFromFile = {};\r\nexport const emmetSnippetField = (index, placeholder) => `\\${${index}${placeholder ? ':' + placeholder : ''}}`;\r\n/** Returns whether or not syntax is a supported stylesheet syntax, like CSS */\r\nexport function isStyleSheet(syntax) {\r\n    return syntaxes.stylesheet.includes(syntax);\r\n}\r\n/** Returns the syntax type, either markup (e.g. for HTML) or stylesheet (e.g. for CSS) */\r\nexport function getSyntaxType(syntax) {\r\n    return isStyleSheet(syntax) ? 'stylesheet' : 'markup';\r\n}\r\n/** Returns the default syntax (html or css) to use for the snippets registry */\r\nexport function getDefaultSyntax(syntax) {\r\n    return isStyleSheet(syntax) ? 'css' : 'html';\r\n}\r\n/** Returns the default snippets that Emmet suggests */\r\nexport function getDefaultSnippets(syntax) {\r\n    const syntaxType = getSyntaxType(syntax);\r\n    const syntaxToUse = isStyleSheet(syntax) ? 'css' : syntax;\r\n    const emptyUserConfig = { type: syntaxType, syntax: syntaxToUse };\r\n    const resolvedConfig = resolveConfig(emptyUserConfig);\r\n    // https://github.com/microsoft/vscode/issues/97632\r\n    // don't return markup (HTML) snippets for XML\r\n    return syntax === 'xml' ? {} : resolvedConfig.snippets;\r\n}\r\nfunction getFilters(text, pos) {\r\n    let filter;\r\n    for (let i = 0; i < maxFilters; i++) {\r\n        if (text.endsWith(`${filterDelimitor}${bemFilterSuffix}`, pos)) {\r\n            pos -= bemFilterSuffix.length + 1;\r\n            filter = filter ? bemFilterSuffix + ',' + filter : bemFilterSuffix;\r\n        }\r\n        else if (text.endsWith(`${filterDelimitor}${commentFilterSuffix}`, pos)) {\r\n            pos -= commentFilterSuffix.length + 1;\r\n            filter = filter ? commentFilterSuffix + ',' + filter : commentFilterSuffix;\r\n        }\r\n        else if (text.endsWith(`${filterDelimitor}${trimFilterSuffix}`, pos)) {\r\n            pos -= trimFilterSuffix.length + 1;\r\n            filter = filter ? trimFilterSuffix + ',' + filter : trimFilterSuffix;\r\n        }\r\n        else {\r\n            break;\r\n        }\r\n    }\r\n    return {\r\n        pos: pos,\r\n        filter: filter\r\n    };\r\n}\r\n/**\r\n * Extracts abbreviation from the given position in the given document\r\n * @param document The TextDocument from which abbreviation needs to be extracted\r\n * @param position The Position in the given document from where abbreviation needs to be extracted\r\n * @param options The options to pass to the @emmetio/extract-abbreviation module\r\n */\r\nexport function extractAbbreviation(document, position, options) {\r\n    const currentLine = getCurrentLine(document, position);\r\n    const currentLineTillPosition = currentLine.substr(0, position.character);\r\n    const { pos, filter } = getFilters(currentLineTillPosition, position.character);\r\n    const lengthOccupiedByFilter = filter ? filter.length + 1 : 0;\r\n    try {\r\n        const result = extract(currentLine, pos, options);\r\n        const rangeToReplace = Range.create(position.line, result.location, position.line, result.location + result.abbreviation.length + lengthOccupiedByFilter);\r\n        return {\r\n            abbreviationRange: rangeToReplace,\r\n            abbreviation: result.abbreviation,\r\n            filter\r\n        };\r\n    }\r\n    catch (e) {\r\n    }\r\n}\r\n/**\r\n * Extracts abbreviation from the given text\r\n * @param text Text from which abbreviation needs to be extracted\r\n * @param syntax Syntax used to extract the abbreviation from the given text\r\n */\r\nexport function extractAbbreviationFromText(text, syntax) {\r\n    if (!text) {\r\n        return;\r\n    }\r\n    const { pos, filter } = getFilters(text, text.length);\r\n    try {\r\n        const extractOptions = (isStyleSheet(syntax) || syntax === 'stylesheet') ?\r\n            { syntax: 'stylesheet', lookAhead: false } : { lookAhead: true };\r\n        const result = extract(text, pos, extractOptions);\r\n        return {\r\n            abbreviation: result.abbreviation,\r\n            filter\r\n        };\r\n    }\r\n    catch (e) {\r\n    }\r\n}\r\n/**\r\n * Returns a boolean denoting validity of given abbreviation in the context of given syntax\r\n * Not needed once https://github.com/emmetio/atom-plugin/issues/22 is fixed\r\n * @param syntax string\r\n * @param abbreviation string\r\n */\r\nexport function isAbbreviationValid(syntax, abbreviation) {\r\n    if (!abbreviation) {\r\n        return false;\r\n    }\r\n    if (isStyleSheet(syntax)) {\r\n        // Fix for https://github.com/Microsoft/vscode/issues/1623 in new emmet\r\n        if (abbreviation.endsWith(':')) {\r\n            return false;\r\n        }\r\n        if (abbreviation.includes('#')) {\r\n            return hexColorRegex.test(abbreviation) || propertyHexColorRegex.test(abbreviation);\r\n        }\r\n        return cssAbbreviationRegex.test(abbreviation);\r\n    }\r\n    if (abbreviation.startsWith('!')) {\r\n        return !/[^!]/.test(abbreviation);\r\n    }\r\n    // Its common for users to type (sometextinsidebrackets), this should not be treated as an abbreviation\r\n    // Grouping in abbreviation is valid only if it's inside a text node or preceeded/succeeded with one of the symbols for nesting, sibling, repeater or climb up\r\n    if ((/\\(/.test(abbreviation) || /\\)/.test(abbreviation)) && !/\\{[^\\}\\{]*[\\(\\)]+[^\\}\\{]*\\}(?:[>\\+\\*\\^]|$)/.test(abbreviation) && !/\\(.*\\)[>\\+\\*\\^]/.test(abbreviation) && !/[>\\+\\*\\^]\\(.*\\)/.test(abbreviation)) {\r\n        return false;\r\n    }\r\n    return (htmlAbbreviationStartRegex.test(abbreviation) && htmlAbbreviationRegex.test(abbreviation));\r\n}\r\nfunction isExpandedTextNoise(syntax, abbreviation, expandedText) {\r\n    // Unresolved css abbreviations get expanded to a blank property value\r\n    // Eg: abc -> abc: ; or abc:d -> abc: d; which is noise if it gets suggested for every word typed\r\n    if (isStyleSheet(syntax)) {\r\n        const after = (syntax === 'sass' || syntax === 'stylus') ? '' : ';';\r\n        return expandedText === `${abbreviation}: \\${0}${after}` ||\r\n            expandedText.replace(/\\s/g, '') === abbreviation.replace(/\\s/g, '') + after;\r\n    }\r\n    if (commonlyUsedTags.includes(abbreviation.toLowerCase()) || markupSnippetKeys.includes(abbreviation)) {\r\n        return false;\r\n    }\r\n    // Custom tags can have - or :\r\n    if (/[-,:]/.test(abbreviation) && !/--|::/.test(abbreviation) && !abbreviation.endsWith(':')) {\r\n        return false;\r\n    }\r\n    // Its common for users to type some text and end it with period, this should not be treated as an abbreviation\r\n    // Else it becomes noise.\r\n    // When user just types '.', return the expansion\r\n    // Otherwise emmet loses change to participate later\r\n    // For example in `.foo`. See https://github.com/Microsoft/vscode/issues/66013\r\n    if (abbreviation === '.') {\r\n        return false;\r\n    }\r\n    const dotMatches = abbreviation.match(/^([a-z,A-Z,\\d]*)\\.$/);\r\n    if (dotMatches) {\r\n        // Valid html tags such as `div.`\r\n        if (dotMatches[1] && htmlData.tags.includes(dotMatches[1])) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    // Unresolved html abbreviations get expanded as if it were a tag\r\n    // Eg: abc -> <abc></abc> which is noise if it gets suggested for every word typed\r\n    return (expandedText.toLowerCase() === `<${abbreviation.toLowerCase()}>\\${1}</${abbreviation.toLowerCase()}>`);\r\n}\r\n/**\r\n * Returns options to be used by emmet\r\n */\r\nexport function getExpandOptions(syntax, emmetConfig, filter) {\r\n    var _a, _b, _c, _d, _e, _f;\r\n    emmetConfig = emmetConfig || {};\r\n    emmetConfig['preferences'] = emmetConfig['preferences'] || {};\r\n    const preferences = emmetConfig['preferences'];\r\n    const stylesheetSyntax = isStyleSheet(syntax) ? syntax : 'css';\r\n    // Fetch Profile\r\n    const profile = getProfile(syntax, emmetConfig['syntaxProfiles']);\r\n    const filtersFromProfile = (profile && profile['filters']) ? profile['filters'].split(',') : [];\r\n    const trimmedFilters = filtersFromProfile.map(filterFromProfile => filterFromProfile.trim());\r\n    const bemEnabled = (filter && filter.split(',').some(x => x.trim() === 'bem')) || trimmedFilters.includes('bem');\r\n    const commentEnabled = (filter && filter.split(',').some(x => x.trim() === 'c')) || trimmedFilters.includes('c');\r\n    // Fetch formatters\r\n    const formatters = getFormatters(syntax, emmetConfig['preferences']);\r\n    const unitAliases = ((formatters === null || formatters === void 0 ? void 0 : formatters.stylesheet) && formatters.stylesheet['unitAliases']) || {};\r\n    // These options are the default values provided by vscode for \r\n    // extension preferences\r\n    const defaultVSCodeOptions = {\r\n        // inlineElements: string[],\r\n        // 'output.indent': string,\r\n        // 'output.baseIndent': string,\r\n        // 'output.newline': string,\r\n        // 'output.tagCase': profile['tagCase'],\r\n        // 'output.attributeCase': profile['attributeCase'],\r\n        // 'output.attributeQuotes': profile['attributeQuotes'],\r\n        // 'output.format': profile['format'] ?? true,\r\n        // 'output.formatLeafNode': boolean,\r\n        'output.formatSkip': ['html'],\r\n        'output.formatForce': ['body'],\r\n        // 'output.inlineBreak': profile['inlineBreak'],\r\n        'output.compactBoolean': false,\r\n        // 'output.booleanAttributes': string[],\r\n        // 'output.reverseAttributes': boolean,\r\n        // 'output.selfClosingStyle': profile['selfClosingStyle'],\r\n        'output.field': emmetSnippetField,\r\n        // 'output.text': TextOutput,\r\n        'markup.href': true,\r\n        'comment.enabled': false,\r\n        'comment.trigger': ['id', 'class'],\r\n        'comment.before': '',\r\n        'comment.after': '\\n<!-- /[#ID][.CLASS] -->',\r\n        'bem.enabled': false,\r\n        'bem.element': '__',\r\n        'bem.modifier': '_',\r\n        'jsx.enabled': syntax === 'jsx',\r\n        // 'stylesheet.keywords': string[],\r\n        // 'stylesheet.unitless': string[],\r\n        // 'stylesheet.shortHex': boolean,\r\n        'stylesheet.between': syntax === 'stylus' ? ' ' : ': ',\r\n        'stylesheet.after': (syntax === 'sass' || syntax === 'stylus') ? '' : ';',\r\n        'stylesheet.intUnit': 'px',\r\n        'stylesheet.floatUnit': 'em',\r\n        'stylesheet.unitAliases': { e: 'em', p: '%', x: 'ex', r: 'rem' },\r\n        // 'stylesheet.json': boolean,\r\n        // 'stylesheet.jsonDoubleQuotes': boolean,\r\n        'stylesheet.fuzzySearchMinScore': 0.3,\r\n    };\r\n    // These options come from user prefs in the vscode repo\r\n    const userPreferenceOptions = {\r\n        // inlineElements: string[],\r\n        // 'output.indent': string,\r\n        // 'output.baseIndent': string,\r\n        // 'output.newline': string,\r\n        'output.tagCase': profile['tagCase'],\r\n        'output.attributeCase': profile['attributeCase'],\r\n        'output.attributeQuotes': profile['attributeQuotes'],\r\n        'output.format': (_a = profile['format']) !== null && _a !== void 0 ? _a : true,\r\n        // 'output.formatLeafNode': boolean,\r\n        'output.formatSkip': preferences['format.noIndentTags'],\r\n        'output.formatForce': preferences['format.forceIndentationForTags'],\r\n        'output.inlineBreak': profile['inlineBreak'],\r\n        'output.compactBoolean': (_b = profile['compactBooleanAttributes']) !== null && _b !== void 0 ? _b : preferences['profile.allowCompactBoolean'],\r\n        // 'output.booleanAttributes': string[],\r\n        // 'output.reverseAttributes': boolean,\r\n        'output.selfClosingStyle': (_c = profile['selfClosingStyle']) !== null && _c !== void 0 ? _c : getClosingStyle(syntax),\r\n        'output.field': emmetSnippetField,\r\n        // 'output.text': TextOutput,\r\n        // 'markup.href': boolean,\r\n        'comment.enabled': commentEnabled,\r\n        'comment.trigger': preferences['filter.commentTrigger'],\r\n        'comment.before': preferences['filter.commentBefore'],\r\n        'comment.after': preferences['filter.commentAfter'],\r\n        'bem.enabled': bemEnabled,\r\n        'bem.element': (_d = preferences['bem.elementSeparator']) !== null && _d !== void 0 ? _d : '__',\r\n        'bem.modifier': (_e = preferences['bem.modifierSeparator']) !== null && _e !== void 0 ? _e : '_',\r\n        'jsx.enabled': syntax === 'jsx',\r\n        // 'stylesheet.keywords': string[],\r\n        // 'stylesheet.unitless': string[],\r\n        // 'stylesheet.shortHex': boolean,\r\n        'stylesheet.between': preferences[`${stylesheetSyntax}.valueSeparator`],\r\n        'stylesheet.after': preferences[`${stylesheetSyntax}.propertyEnd`],\r\n        'stylesheet.intUnit': preferences['css.intUnit'],\r\n        'stylesheet.floatUnit': preferences['css.floatUnit'],\r\n        'stylesheet.unitAliases': unitAliases,\r\n        // 'stylesheet.json': boolean,\r\n        // 'stylesheet.jsonDoubleQuotes': boolean,\r\n        'stylesheet.fuzzySearchMinScore': preferences['css.fuzzySearchMinScore'],\r\n    };\r\n    const combinedOptions = {};\r\n    [...Object.keys(defaultVSCodeOptions), ...Object.keys(userPreferenceOptions)].forEach(key => {\r\n        var _a;\r\n        combinedOptions[key] = (_a = userPreferenceOptions[key]) !== null && _a !== void 0 ? _a : defaultVSCodeOptions[key];\r\n    });\r\n    const mergedAliases = Object.assign(Object.assign({}, defaultVSCodeOptions['stylesheet.unitAliases']), userPreferenceOptions['stylesheet.unitAliases']);\r\n    combinedOptions['stylesheet.unitAliases'] = mergedAliases;\r\n    const type = getSyntaxType(syntax);\r\n    const variables = getVariables(emmetConfig['variables']);\r\n    const baseSyntax = getDefaultSyntax(syntax);\r\n    const snippets = (type === 'stylesheet') ?\r\n        ((_f = customSnippetsRegistry[syntax]) !== null && _f !== void 0 ? _f : customSnippetsRegistry[baseSyntax]) :\r\n        customSnippetsRegistry[syntax];\r\n    return {\r\n        type,\r\n        options: combinedOptions,\r\n        variables,\r\n        snippets,\r\n        syntax,\r\n        // context: null,\r\n        text: null,\r\n        maxRepeat: 1000,\r\n    };\r\n}\r\nfunction getClosingStyle(syntax) {\r\n    switch (syntax) {\r\n        case 'xhtml': return 'xhtml';\r\n        case 'xml': return 'xml';\r\n        case 'xsl': return 'xml';\r\n        default: return 'html';\r\n    }\r\n}\r\nfunction splitVendorPrefix(abbreviation) {\r\n    if (!vendorPrefixesEnabled) {\r\n        return {\r\n            prefixOptions: '',\r\n            abbreviationWithoutPrefix: abbreviation\r\n        };\r\n    }\r\n    abbreviation = abbreviation || \"\";\r\n    if (abbreviation[0] != '-') {\r\n        return {\r\n            prefixOptions: \"\",\r\n            abbreviationWithoutPrefix: abbreviation\r\n        };\r\n    }\r\n    else {\r\n        abbreviation = abbreviation.substr(1);\r\n        let pref = \"-\";\r\n        if (/^[wmso]*-./.test(abbreviation)) {\r\n            const index = abbreviation.indexOf(\"-\");\r\n            if (index > -1) {\r\n                pref += abbreviation.substr(0, index + 1);\r\n                abbreviation = abbreviation.substr(index + 1);\r\n            }\r\n        }\r\n        return {\r\n            prefixOptions: pref,\r\n            abbreviationWithoutPrefix: abbreviation\r\n        };\r\n    }\r\n}\r\nfunction applyVendorPrefixes(expandedProperty, vendors, preferences) {\r\n    if (!vendorPrefixesEnabled) {\r\n        return expandedProperty;\r\n    }\r\n    preferences = preferences || {};\r\n    expandedProperty = expandedProperty || \"\";\r\n    vendors = vendors || \"\";\r\n    if (vendors[0] !== '-') {\r\n        return expandedProperty;\r\n    }\r\n    if (vendors == \"-\") {\r\n        let defaultVendors = \"-\";\r\n        const property = expandedProperty.substr(0, expandedProperty.indexOf(':'));\r\n        if (!property) {\r\n            return expandedProperty;\r\n        }\r\n        for (const v in vendorPrefixes) {\r\n            const vendorProperties = preferences['css.' + vendorPrefixes[v] + 'Properties'];\r\n            if (vendorProperties && vendorProperties.split(',').find(x => x.trim() === property))\r\n                defaultVendors += v;\r\n        }\r\n        // If no vendors specified, add all\r\n        vendors = defaultVendors == \"-\" ? \"-wmso\" : defaultVendors;\r\n        vendors += '-';\r\n    }\r\n    vendors = vendors.substr(1);\r\n    let prefixedProperty = \"\";\r\n    for (let index = 0; index < vendors.length - 1; index++) {\r\n        prefixedProperty += '-' + vendorPrefixes[vendors[index]] + '-' + expandedProperty + \"\\n\";\r\n    }\r\n    return prefixedProperty + expandedProperty;\r\n}\r\n/**\r\n * Parses given abbreviation using given options and returns a tree\r\n * @param abbreviation string\r\n * @param options options used by the emmet module to parse given abbreviation\r\n */\r\nexport function parseAbbreviation(abbreviation, options) {\r\n    const resolvedOptions = resolveConfig(options);\r\n    return (options.type === 'stylesheet') ?\r\n        parseStylesheet(abbreviation, resolvedOptions) :\r\n        parseMarkup(abbreviation, resolvedOptions);\r\n}\r\n/**\r\n * Expands given abbreviation using given options\r\n * @param abbreviation string or parsed abbreviation\r\n * @param config options used by the @emmetio/expand-abbreviation module to expand given abbreviation\r\n */\r\nexport function expandAbbreviation(abbreviation, config) {\r\n    let expandedText;\r\n    const resolvedConfig = resolveConfig(config);\r\n    if (config.type === 'stylesheet') {\r\n        if (typeof abbreviation === 'string') {\r\n            const { prefixOptions, abbreviationWithoutPrefix } = splitVendorPrefix(abbreviation);\r\n            expandedText = expand(abbreviationWithoutPrefix, resolvedConfig);\r\n            expandedText = applyVendorPrefixes(expandedText, prefixOptions, resolvedConfig.options);\r\n        }\r\n        else {\r\n            expandedText = stringifyStylesheet(abbreviation, resolvedConfig);\r\n        }\r\n    }\r\n    else {\r\n        if (typeof abbreviation === 'string') {\r\n            expandedText = expand(abbreviation, resolvedConfig);\r\n        }\r\n        else {\r\n            expandedText = stringifyMarkup(abbreviation, resolvedConfig);\r\n        }\r\n    }\r\n    return escapeNonTabStopDollar(addFinalTabStop(expandedText));\r\n}\r\n/**\r\n * Maps and returns syntaxProfiles of previous format to ones compatible with new emmet modules\r\n * @param syntax\r\n */\r\nfunction getProfile(syntax, profilesFromSettings) {\r\n    if (!profilesFromSettings) {\r\n        profilesFromSettings = {};\r\n    }\r\n    const profilesConfig = Object.assign({}, profilesFromFile, profilesFromSettings);\r\n    const options = profilesConfig[syntax];\r\n    if (!options || typeof options === 'string') {\r\n        if (options === 'xhtml') {\r\n            return {\r\n                selfClosingStyle: 'xhtml'\r\n            };\r\n        }\r\n        return {};\r\n    }\r\n    const newOptions = {};\r\n    for (const key in options) {\r\n        switch (key) {\r\n            case 'tag_case':\r\n                newOptions['tagCase'] = (options[key] === 'lower' || options[key] === 'upper') ? options[key] : '';\r\n                break;\r\n            case 'attr_case':\r\n                newOptions['attributeCase'] = (options[key] === 'lower' || options[key] === 'upper') ? options[key] : '';\r\n                break;\r\n            case 'attr_quotes':\r\n                newOptions['attributeQuotes'] = options[key];\r\n                break;\r\n            case 'tag_nl':\r\n                newOptions['format'] = (options[key] === true || options[key] === false) ? options[key] : true;\r\n                break;\r\n            case 'inline_break':\r\n                newOptions['inlineBreak'] = options[key];\r\n                break;\r\n            case 'self_closing_tag':\r\n                if (options[key] === true) {\r\n                    newOptions['selfClosingStyle'] = 'xml';\r\n                    break;\r\n                }\r\n                if (options[key] === false) {\r\n                    newOptions['selfClosingStyle'] = 'html';\r\n                    break;\r\n                }\r\n                newOptions['selfClosingStyle'] = options[key];\r\n                break;\r\n            case 'compact_bool':\r\n                newOptions['compactBooleanAttributes'] = options[key];\r\n                break;\r\n            default:\r\n                newOptions[key] = options[key];\r\n                break;\r\n        }\r\n    }\r\n    return newOptions;\r\n}\r\n/**\r\n * Returns variables to be used while expanding snippets\r\n */\r\nfunction getVariables(variablesFromSettings) {\r\n    if (!variablesFromSettings) {\r\n        return variablesFromFile;\r\n    }\r\n    return Object.assign({}, variablesFromFile, variablesFromSettings);\r\n}\r\nfunction getFormatters(syntax, preferences) {\r\n    if (!preferences) {\r\n        return {};\r\n    }\r\n    if (!isStyleSheet(syntax)) {\r\n        const commentFormatter = {};\r\n        for (const key in preferences) {\r\n            switch (key) {\r\n                case 'filter.commentAfter':\r\n                    commentFormatter['after'] = preferences[key];\r\n                    break;\r\n                case 'filter.commentBefore':\r\n                    commentFormatter['before'] = preferences[key];\r\n                    break;\r\n                case 'filter.commentTrigger':\r\n                    commentFormatter['trigger'] = preferences[key];\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        return {\r\n            comment: commentFormatter\r\n        };\r\n    }\r\n    let fuzzySearchMinScore = typeof preferences['css.fuzzySearchMinScore'] === 'number' ? preferences['css.fuzzySearchMinScore'] : 0.3;\r\n    if (fuzzySearchMinScore > 1) {\r\n        fuzzySearchMinScore = 1;\r\n    }\r\n    else if (fuzzySearchMinScore < 0) {\r\n        fuzzySearchMinScore = 0;\r\n    }\r\n    const stylesheetFormatter = {\r\n        'fuzzySearchMinScore': fuzzySearchMinScore\r\n    };\r\n    for (const key in preferences) {\r\n        switch (key) {\r\n            case 'css.floatUnit':\r\n                stylesheetFormatter['floatUnit'] = preferences[key];\r\n                break;\r\n            case 'css.intUnit':\r\n                stylesheetFormatter['intUnit'] = preferences[key];\r\n                break;\r\n            case 'css.unitAliases':\r\n                const unitAliases = {};\r\n                preferences[key].split(',').forEach(alias => {\r\n                    if (!alias || !alias.trim() || !alias.includes(':')) {\r\n                        return;\r\n                    }\r\n                    const aliasName = alias.substr(0, alias.indexOf(':'));\r\n                    const aliasValue = alias.substr(aliasName.length + 1);\r\n                    if (!aliasName.trim() || !aliasValue) {\r\n                        return;\r\n                    }\r\n                    unitAliases[aliasName.trim()] = aliasValue;\r\n                });\r\n                stylesheetFormatter['unitAliases'] = unitAliases;\r\n                break;\r\n            case `${syntax}.valueSeparator`:\r\n                stylesheetFormatter['between'] = preferences[key];\r\n                break;\r\n            case `${syntax}.propertyEnd`:\r\n                stylesheetFormatter['after'] = preferences[key];\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    return {\r\n        stylesheet: stylesheetFormatter\r\n    };\r\n}\r\n/**\r\n * Updates customizations from snippets.json and syntaxProfiles.json files in the directory configured in emmet.extensionsPath setting\r\n */\r\nexport function updateExtensionsPath(emmetExtensionsPath, fs, workspaceFolderPath, homeDir) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        if (emmetExtensionsPath) {\r\n            emmetExtensionsPath = emmetExtensionsPath.trim();\r\n        }\r\n        if (!emmetExtensionsPath) {\r\n            resetSettingsFromFile();\r\n            return Promise.resolve();\r\n        }\r\n        let emmetExtensionsPathUri;\r\n        if (emmetExtensionsPath[0] === '~') {\r\n            if (homeDir) {\r\n                emmetExtensionsPathUri = joinPath(homeDir, emmetExtensionsPath.substr(1));\r\n            }\r\n        }\r\n        else if (!isAbsolutePath(emmetExtensionsPath)) {\r\n            if (workspaceFolderPath) {\r\n                emmetExtensionsPathUri = joinPath(workspaceFolderPath, emmetExtensionsPath);\r\n            }\r\n        }\r\n        else {\r\n            emmetExtensionsPathUri = URI.file(emmetExtensionsPath);\r\n        }\r\n        try {\r\n            // the fs.stat call itself could throw, so we wrap this part up into a try-catch\r\n            if (!emmetExtensionsPathUri || (yield fs.stat(emmetExtensionsPathUri)).type !== FileType.Directory) {\r\n                throw new Error();\r\n            }\r\n        }\r\n        catch (e) {\r\n            resetSettingsFromFile();\r\n            throw new Error(`The directory ${emmetExtensionsPath} doesn't exist. Update emmet.extensionsPath setting`);\r\n        }\r\n        const snippetsPath = joinPath(emmetExtensionsPathUri, 'snippets.json');\r\n        const profilesPath = joinPath(emmetExtensionsPathUri, 'syntaxProfiles.json');\r\n        try {\r\n            const snippetsData = yield fs.readFile(snippetsPath);\r\n            const snippetsDataStr = new TextDecoder().decode(snippetsData);\r\n            const errors = [];\r\n            const snippetsJson = JSONC.parse(snippetsDataStr, errors);\r\n            if (errors.length > 0) {\r\n                throw new Error(`Found error ${JSONC.printParseErrorCode(errors[0].error)} while parsing the file ${snippetsPath} at offset ${errors[0].offset}`);\r\n            }\r\n            variablesFromFile = snippetsJson['variables'];\r\n            customSnippetsRegistry = {};\r\n            snippetKeyCache.clear();\r\n            Object.keys(snippetsJson).forEach(syntax => {\r\n                if (!snippetsJson[syntax]['snippets']) {\r\n                    return;\r\n                }\r\n                const baseSyntax = getDefaultSyntax(syntax);\r\n                let customSnippets = snippetsJson[syntax]['snippets'];\r\n                if (snippetsJson[baseSyntax] && snippetsJson[baseSyntax]['snippets'] && baseSyntax !== syntax) {\r\n                    customSnippets = Object.assign({}, snippetsJson[baseSyntax]['snippets'], snippetsJson[syntax]['snippets']);\r\n                }\r\n                if (!isStyleSheet(syntax)) {\r\n                    // In Emmet 2.0 all snippets should be valid abbreviations\r\n                    // Convert old snippets that do not follow this format to new format\r\n                    for (const snippetKey in customSnippets) {\r\n                        if (customSnippets.hasOwnProperty(snippetKey)\r\n                            && customSnippets[snippetKey].startsWith('<')\r\n                            && customSnippets[snippetKey].endsWith('>')) {\r\n                            customSnippets[snippetKey] = `{${customSnippets[snippetKey]}}`;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    stylesheetCustomSnippetsKeyCache.set(syntax, Object.keys(customSnippets));\r\n                }\r\n                customSnippetsRegistry[syntax] = parseSnippets(customSnippets);\r\n                const snippetKeys = Object.keys(customSnippetsRegistry[syntax]);\r\n                snippetKeyCache.set(syntax, snippetKeys);\r\n            });\r\n        }\r\n        catch (e) {\r\n            resetSettingsFromFile();\r\n            throw new Error(`Error while parsing the file ${snippetsPath}`);\r\n        }\r\n        try {\r\n            const profilesData = yield fs.readFile(profilesPath);\r\n            const profilesDataStr = new TextDecoder().decode(profilesData);\r\n            profilesFromFile = JSON.parse(profilesDataStr);\r\n        }\r\n        catch (e) {\r\n            // \r\n        }\r\n    });\r\n}\r\nfunction resetSettingsFromFile() {\r\n    customSnippetsRegistry = {};\r\n    snippetKeyCache.clear();\r\n    stylesheetCustomSnippetsKeyCache.clear();\r\n    profilesFromFile = {};\r\n    variablesFromFile = {};\r\n}\r\n/**\r\n* Get the corresponding emmet mode for given vscode language mode\r\n* Eg: jsx for typescriptreact/javascriptreact or pug for jade\r\n* If the language is not supported by emmet or has been exlcuded via `exlcudeLanguages` setting,\r\n* then nothing is returned\r\n*\r\n* @param language\r\n* @param exlcudedLanguages Array of language ids that user has chosen to exlcude for emmet\r\n*/\r\nexport function getEmmetMode(language, excludedLanguages = []) {\r\n    if (!language || excludedLanguages.includes(language)) {\r\n        return;\r\n    }\r\n    if (/\\b(typescriptreact|javascriptreact|jsx-tags)\\b/.test(language)) { // treat tsx like jsx\r\n        return 'jsx';\r\n    }\r\n    if (language === 'sass-indented') { // map sass-indented to sass\r\n        return 'sass';\r\n    }\r\n    if (language === 'jade') {\r\n        return 'pug';\r\n    }\r\n    if (syntaxes.markup.includes(language) || syntaxes.stylesheet.includes(language)) {\r\n        return language;\r\n    }\r\n}\r\nconst propertyHexColorRegex = /^[a-zA-Z]+:?#[\\d.a-fA-F]{0,6}$/;\r\nconst hexColorRegex = /^#[\\d,a-f,A-F]{1,6}$/;\r\nconst onlyLetters = /^[a-z,A-Z]+$/;\r\n/**\r\n * Returns a completion participant for Emmet of the form {\r\n * \t\tonCssProperty: () => void\r\n * \t\tonCssPropertyValue: () => void\r\n * \t\tonHtmlContent: () => void\r\n * }\r\n * @param document The TextDocument for which completions are being provided\r\n * @param position The Position in the given document where completions are being provided\r\n * @param syntax The Emmet syntax to use when providing Emmet completions\r\n * @param emmetSettings The Emmet settings to use when providing Emmet completions\r\n * @param result The Completion List object that needs to be updated with Emmet completions\r\n */\r\nexport function getEmmetCompletionParticipants(document, position, syntax, emmetSettings, result) {\r\n    return {\r\n        getId: () => 'emmet',\r\n        onCssProperty: (context) => {\r\n            if (context && context.propertyName) {\r\n                const currentresult = doComplete(document, position, syntax, emmetSettings);\r\n                if (result && currentresult) {\r\n                    result.items = currentresult.items;\r\n                    result.isIncomplete = true;\r\n                }\r\n            }\r\n        },\r\n        onCssPropertyValue: (context) => {\r\n            if (context && context.propertyValue) {\r\n                const extractOptions = { lookAhead: false, type: 'stylesheet' };\r\n                const extractedResults = extractAbbreviation(document, position, extractOptions);\r\n                if (!extractedResults) {\r\n                    return;\r\n                }\r\n                const validAbbreviationWithColon = extractedResults.abbreviation === `${context.propertyName}:${context.propertyValue}` && onlyLetters.test(context.propertyValue);\r\n                if (validAbbreviationWithColon // Allows abbreviations like pos:f\r\n                    || hexColorRegex.test(extractedResults.abbreviation)\r\n                    || extractedResults.abbreviation === '!') {\r\n                    const currentresult = doComplete(document, position, syntax, emmetSettings);\r\n                    if (result && currentresult) {\r\n                        result.items = currentresult.items;\r\n                        result.isIncomplete = true;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        onHtmlContent: () => {\r\n            const currentresult = doComplete(document, position, syntax, emmetSettings);\r\n            if (result && currentresult) {\r\n                result.items = currentresult.items;\r\n                result.isIncomplete = true;\r\n            }\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=emmetHelper.js.map"],"sourceRoot":""}